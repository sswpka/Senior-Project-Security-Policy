project_name,project_url,num_commits,project_age_days,project_created_at,num_contributors,num_pull,num_issues,num_stargazers,num_watchers,num_forks,num_subscribers,SecurityPolicy_url_endpoint,SecurityPolicy_content,SecurityPolicy_created_at,SecurityPolicy_content_category,SecurityPolicy_reporting_mechanism,Aggregate-Score,Binary-Artifacts,Branch-Protection,CI-Tests,CII-Best-Practices,Code-Review,Contributors,Dangerous-Workflow,Dependency-Update-Tool,Fuzzing,License,Maintained,Packaging,Pinned-Dependencies,SAST,Security-Policy,Signed-Releases,Token-Permissions,Vulnerabilities,num_bug_high,num_bug_medium,num_bug_low,num_bug_blocker,num_vulnerabilities_high,num_vulnerabilities_medium,num_vulnerabilities_low,num_vulnerabilities_blocker,num_code_smell_high,num_code_smell_medium,num_code_smell_low,num_code_smell_blocker
23andme/yamale,https://github.com/23andme/yamale,279,3928,2014-01-27,36,106,251,680,680,88,56,https://api.github.com/repos/23andme/yamale/contents/SECURITY.md,"# Reporting Security Issues

Please see [Releases](https://github.com/23andMe/Yamale/releases). We accept
vulnerability reports for the latest major version.

If you believe you have found a security issue in this project, we encourage
you to submit your finding through 23andMe's
[Bugcrowd program](https://bugcrowd.com/twentythree-and-me) so that we can
appropriately reward you. If you're unable to do so, please use
[the security report form](https://www.23andme.com/security-report/) on our
website to reach us. We will respond to your report within 3 business
days.

Please follow the rules and guidelines stated in the
[Bugcrowd program brief](https://bugcrowd.com/twentythree-and-me). You can also
find our Responsible Disclosure Policy on our
[security report page](https://www.23andme.com/security-report/).

We appreciate your efforts in helping keep our software secure!
",2021-10-11 21:39:00,['Reporting mechanism'],external,5.4,10,6,6,0,7,10,10,0,0,10,0,-1,0,8,10,-1,0,10,0.0,25.0,1.0,0.0,0.0,0.0,0.0,0.0,109.0,295.0,75.0,1.0
9001/copyparty,https://github.com/9001/copyparty,3321,1983,2019-05-26,10,17,109,811,811,47,8,https://api.github.com/repos/9001/copyparty/contents/SECURITY.md,"# Security Policy

if you hit something extra juicy pls let me know on either of the following
* email -- `copyparty@ocv.ze` except `ze` should be `me`
* [mastodon dm](https://layer8.space/@tripflag) -- `@tripflag@layer8.space`
* [github private vulnerability report](https://github.com/9001/copyparty/security/advisories/new), wow that form is complicated
* [twitter dm](https://twitter.com/tripflag) (if im somehow not banned yet)

no bug bounties sorry! all i can offer is greetz in the release notes
",2022-12-19 21:18:27,['Reporting mechanism'],email_advisory_external,3.8,10,0,-1,0,0,3,-1,0,0,10,10,-1,0,0,10,0,-1,10,2.0,142.0,7.0,1.0,0.0,0.0,0.0,0.0,237.0,680.0,315.0,2.0
aaugustin/websockets,https://github.com/aaugustin/websockets,1528,4231,2013-03-30,66,400,1526,5196,5196,515,106,https://api.github.com/repos/aaugustin/websockets/contents/SECURITY.md,"# Security

## Policy

Only the latest version receives security updates.

## Contact information

Please report security vulnerabilities to the
[Tidelift security team](https://tidelift.com/security).

Tidelift will coordinate the fix and disclosure.
",2021-09-09 20:01:09,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",external,6.5,10,0,10,5,0,10,10,10,10,10,10,10,0,0,10,-1,0,10,0.0,8.0,0.0,4.0,3.0,0.0,0.0,0.0,20.0,26.0,9.0,1.0
adobe/ops-cli,https://github.com/adobe/ops-cli,211,2099,2019-01-30,27,130,165,192,192,38,25,https://api.github.com/repos/adobe/.github/contents/.github/SECURITY.md,"# Security Policies and Procedures

## Reporting an Issue

If you need to report a security issue please visit [Notifying Adobe of Security Issues](https://helpx.adobe.com/ca/security/alertus.html)

## Disclosure Policy

For more information on our disclosure policy please visit [Vulnerability Disclosure Program Policy](https://helpx.adobe.com/security/policy.html)
",2021-04-28 14:41:44,"['Generic policy', 'Reporting mechanism', 'User guideline']",external,5.4,10,0,3,0,5,3,10,10,0,10,0,10,0,7,10,-1,0,8,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,23.0,18.0,9.0,0.0
aio-libs/aiohttp,https://github.com/aio-libs/aiohttp,10832,4046,2013-10-01,421,6347,9335,15105,15105,2015,218,https://api.github.com/repos/aio-libs/.github/contents/SECURITY.md,"# Reporting Vulnerabilities

**⚠️ Please do not file public GitHub issues for security
vulnerabilities as they are open for everyone to see! ⚠️**

We encourage responsible disclosure practices for security vulnerabilities.

If you believe you've found a security-related bug, fill out a new
vulnerability report via GitHub directly. To do so follow these instructions:
1. Click on the `Security` tab in the project repository.
2. Click the green `Report a vulnerability` button at the top right corner.
3. Fill in the form as accurately as you can, including as many details as
   possible.
4. Click the green `Submit report` button at the bottom.

## Don't have a GitHub account?

Alternatively, drop an email to our [aio-libs security] mailbox instead of
filing a ticket or posting to _any_ public groups. It is currently set up to
forward every incoming letter to [Andrew Svetlov], [Sam Bull] and [Sviatoslav
Sydorenko]. You can choose to email us directly as well. We will try to assess
the problem in timely manner and disclose it in a responsible way.

[aio-libs security]:
mailto:""'%40aio-libs'%20security%20reports""%20<security@aio-libs.org>?subject=[Security%20issue%20report]%20[PROJECT_NAME]%20SHORT%20TITLE...&body=I%20am%20writing%20to%20inform%20you%20that%20PROJECT_NAME%20has%20a%20pottential%20vulnerability%20and%20here%20are%20extremely%20detailed%20steps%20of%20how%20to%20exploit%20this%20dangerous%20behavior:%0D%0A%0D%0A1.%0D%0A2.%0D%0A3.%0D%0A%0D%0A
[Andrew Svetlov]:
mailto:""Andrew%20'%40asvetlov'%20Svetlov""%20<andrew.svetlov+aio-libs-security@gmail.com>?subject=[Security%20issue%20report]%20[PROJECT_NAME]%20SHORT%20TITLE...&body=I%20am%20writing%20to%20inform%20you%20that%20PROJECT_NAME%20has%20a%20pottential%20vulnerability%20and%20here%20are%20extremely%20detailed%20steps%20of%20how%20to%20exploit%20this%20dangerous%20behavior:%0D%0A%0D%0A1.%0D%0A2.%0D%0A3.%0D%0A%0D%0A
[Sam Bull]:
mailto:""Sam%20'%40dreamsorcerer'%20Bull""%20<aio-libs-sec@sambull.org>?subject=[Security%20issue%20report]%20[PROJECT_NAME]%20SHORT%20TITLE...&body=I%20am%20writing%20to%20inform%20you%20that%20PROJECT_NAME%20has%20a%20pottential%20vulnerability%20and%20here%20are%20extremely%20detailed%20steps%20of%20how%20to%20exploit%20this%20dangerous%20behavior:%0D%0A%0D%0A1.%0D%0A2.%0D%0A3.%0D%0A%0D%0A
[Sviatoslav Sydorenko]:
mailto:""Sviatoslav%20'%40webknjaz'%20Sydorenko""%20<wk+aio-libs-security@sydorenko.org.ua>?subject=[Security%20issue%20report]%20[PROJECT_NAME]%20SHORT%20TITLE...&body=I%20am%20writing%20to%20inform%20you%20that%20PROJECT_NAME%20has%20a%20pottential%20vulnerability%20and%20here%20are%20extremely%20detailed%20steps%20of%20how%20to%20exploit%20this%20dangerous%20behavior:%0D%0A%0D%0A1.%0D%0A2.%0D%0A3.%0D%0A%0D%0A
",2023-09-11 12:38:16,"['Reporting mechanism', 'Reporting mechanism']",email_advisory,6.7,10,3,10,0,1,10,10,10,10,9,10,10,0,10,10,0,0,10,2.0,38.0,4.0,4.0,3.0,0.0,0.0,1.0,532.0,824.0,1056.0,10.0
aio-libs/aiohttp-session,https://github.com/aio-libs/aiohttp-session,924,3575,2015-01-15,46,930,1027,237,237,84,14,https://api.github.com/repos/aio-libs/.github/contents/SECURITY.md,"# Reporting Vulnerabilities

**⚠️ Please do not file public GitHub issues for security
vulnerabilities as they are open for everyone to see! ⚠️**

We encourage responsible disclosure practices for security vulnerabilities.

If you believe you've found a security-related bug, fill out a new
vulnerability report via GitHub directly. To do so follow these instructions:
1. Click on the `Security` tab in the project repository.
2. Click the green `Report a vulnerability` button at the top right corner.
3. Fill in the form as accurately as you can, including as many details as
   possible.
4. Click the green `Submit report` button at the bottom.

## Don't have a GitHub account?

Alternatively, drop an email to our [aio-libs security] mailbox instead of
filing a ticket or posting to _any_ public groups. It is currently set up to
forward every incoming letter to [Andrew Svetlov], [Sam Bull] and [Sviatoslav
Sydorenko]. You can choose to email us directly as well. We will try to assess
the problem in timely manner and disclose it in a responsible way.

[aio-libs security]:
mailto:""'%40aio-libs'%20security%20reports""%20<security@aio-libs.org>?subject=[Security%20issue%20report]%20[PROJECT_NAME]%20SHORT%20TITLE...&body=I%20am%20writing%20to%20inform%20you%20that%20PROJECT_NAME%20has%20a%20pottential%20vulnerability%20and%20here%20are%20extremely%20detailed%20steps%20of%20how%20to%20exploit%20this%20dangerous%20behavior:%0D%0A%0D%0A1.%0D%0A2.%0D%0A3.%0D%0A%0D%0A
[Andrew Svetlov]:
mailto:""Andrew%20'%40asvetlov'%20Svetlov""%20<andrew.svetlov+aio-libs-security@gmail.com>?subject=[Security%20issue%20report]%20[PROJECT_NAME]%20SHORT%20TITLE...&body=I%20am%20writing%20to%20inform%20you%20that%20PROJECT_NAME%20has%20a%20pottential%20vulnerability%20and%20here%20are%20extremely%20detailed%20steps%20of%20how%20to%20exploit%20this%20dangerous%20behavior:%0D%0A%0D%0A1.%0D%0A2.%0D%0A3.%0D%0A%0D%0A
[Sam Bull]:
mailto:""Sam%20'%40dreamsorcerer'%20Bull""%20<aio-libs-sec@sambull.org>?subject=[Security%20issue%20report]%20[PROJECT_NAME]%20SHORT%20TITLE...&body=I%20am%20writing%20to%20inform%20you%20that%20PROJECT_NAME%20has%20a%20pottential%20vulnerability%20and%20here%20are%20extremely%20detailed%20steps%20of%20how%20to%20exploit%20this%20dangerous%20behavior:%0D%0A%0D%0A1.%0D%0A2.%0D%0A3.%0D%0A%0D%0A
[Sviatoslav Sydorenko]:
mailto:""Sviatoslav%20'%40webknjaz'%20Sydorenko""%20<wk+aio-libs-security@sydorenko.org.ua>?subject=[Security%20issue%20report]%20[PROJECT_NAME]%20SHORT%20TITLE...&body=I%20am%20writing%20to%20inform%20you%20that%20PROJECT_NAME%20has%20a%20pottential%20vulnerability%20and%20here%20are%20extremely%20detailed%20steps%20of%20how%20to%20exploit%20this%20dangerous%20behavior:%0D%0A%0D%0A1.%0D%0A2.%0D%0A3.%0D%0A%0D%0A
",2023-09-11 12:38:16,"['Reporting mechanism', 'Reporting mechanism']",email,5.9,10,3,10,0,0,10,10,10,0,9,10,-1,0,9,10,0,0,10,1.0,154.0,19.0,1.0,1.0,0.0,0.0,0.0,194.0,257.0,134.0,12.0
aio-libs/aiosmtpd,https://github.com/aio-libs/aiosmtpd,846,3029,2016-07-14,36,329,506,321,321,96,13,https://api.github.com/repos/aio-libs/aiosmtpd/contents/.github/SECURITY.rst,"=========================
Reporting Vulnerabilities
=========================

**⚠️ Please do not file public GitHub issues for security
vulnerabilities as they are open for everyone to see! ⚠️**

We encourage responsible disclosure practices for security vulnerabilities.

If you believe you've found a security-related bug, email `Andrew Svetlov
<mailto:andrew.svetlov+aio-libs-security@gmail.com>`_ and/or
`Pandu POLUAN <mailto:pepoluan+aiosmtpd@gmail.com>`_
instead of filing a ticket or posting to any public groups.
We'll try to assess the problem and disclose it in a responsible way.
",2021-02-23 15:09:17,[],email,7.3,10,3,10,0,-1,10,10,10,0,10,10,10,0,10,10,8,0,10,12.0,46.0,3.0,5.0,11.0,0.0,0.0,0.0,1567.0,1315.0,1543.0,6.0
airbnb/knowledge-repo,https://github.com/airbnb/knowledge-repo,1329,2995,2016-08-17,55,479,770,5480,5480,689,175,https://api.github.com/repos/airbnb/.github/contents/SECURITY.md,"
# Reporting and Fixing Security Issues

Do not open issues or pull requests - this makes the problem immediately visible to everyone, including malicious actors. Please report potential security issues in this project through the Airbnb Bug Bounty program:

[https://hackerone.com/airbnb](https://hackerone.com/airbnb)

Airbnb’s team will triage and address all valid issues. You may be eligible for a bounty if the report is valid under our program.
",2022-02-03 20:26:00,['Reporting mechanism'],external,5.2,10,8,0,0,10,10,10,10,0,10,0,-1,0,0,9,-1,0,0,0.0,4.0,0.0,1.0,0.0,0.0,0.0,0.0,16.0,15.0,25.0,0.0
alexlancaster/pypop,https://github.com/alexlancaster/pypop,2556,4025,2013-10-22,11,152,223,22,22,15,8,https://api.github.com/repos/alexlancaster/pypop/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

To report a security issue, please use the GitHub Security Advisory
[""Report a Vulnerability""](https://github.com/alexlancaster/pypop/security) tab.

The PyPop team will send a response indicating the next steps in handling your report. 
After the initial reply to your report, the security team will keep you informed of progress
and fix, and may ask for additional information or guidance.
",2024-02-19 20:09:42,"['Generic policy', 'Reporting mechanism']",advisory,6.7,10,5,10,2,0,10,-1,10,0,10,10,-1,-1,10,10,0,-1,10,10.0,299.0,27.0,2.0,6.0,0.0,0.0,0.0,4961.0,2801.0,678.0,17.0
allegroai/clearml,https://github.com/allegroai/clearml,2436,1968,2019-06-10,95,273,1330,5653,5653,651,95,https://api.github.com/repos/allegroai/clearml/contents/SECURITY.md,"## Reporting Security Issues

Thanks for taking the time to make ClearML more secure!

To carry on the discussion more securely - Please send your report to [security@clear.ml](mailto:security@clear.ml).",2023-11-07 15:03:49,['Reporting mechanism'],email,5.4,10,1,0,0,1,10,10,10,0,10,10,-1,0,7,9,0,9,0,0.0,336.0,2.0,144.0,0.0,0.0,0.0,0.0,401.0,969.0,427.0,2.0
andialbrecht/sqlparse,https://github.com/andialbrecht/sqlparse,1305,4577,2012-04-18,85,239,784,3739,3739,697,94,https://api.github.com/repos/andialbrecht/sqlparse/contents/SECURITY.md,"# Security Policy

## Supported Versions

For now `sqlparse` uses very defensive version numbers. There's no major version yet. 
In turn there's only one supported version and this is the latest.

## Reporting a Vulnerability

To report a vulnerability head over to the [Security Advisories](https://github.com/andialbrecht/sqlparse/security/advisories) 
page and click on ""New draft security advisory"".

Feel free to contact me at albrecht.andi@gmail.com if you have any questions or want to discuss things
beforehand.
",2023-08-06 10:57:30,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,5.1,10,0,5,0,2,10,10,0,10,10,0,-1,0,8,10,-1,0,10,5.0,53.0,16.0,0.0,2.0,0.0,0.0,1.0,436.0,391.0,509.0,12.0
ansible-collections/kubernetes,https://github.com/ansible-collections/kubernetes,392,1741,2020-01-23,32,207,390,264,264,104,20,https://api.github.com/repos/ansible-collections/.github/contents/SECURITY.md,"# Security Policy

## Supported Versions

Ansible applies security fixes according to the 3-versions-back support
policy. Please find more information in [our docs](
https://docs.ansible.com/ansible/devel/reference_appendices/release_and_maintenance.html#release-status
).

## Reporting a Vulnerability

We encourage responsible disclosure practices for security
vulnerabilities. Please read our [policies for reporting bugs](
https://docs.ansible.com/ansible/devel/community/reporting_bugs_and_features.html#reporting-a-bug
) if you want to report a security issue that might affect Ansible.
",2019-10-16 14:48:46,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",external,4.7,10,3,0,0,8,10,10,0,0,10,0,-1,0,0,10,-1,0,10,,,,,,,,,,,,
ansible/ansible,https://github.com/ansible/ansible,54666,4620,2012-03-06,376,51355,83896,62744,62744,23872,1906,https://api.github.com/repos/ansible/ansible/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

Ansible applies security fixes according to the 3-versions-back support
policy. Please find more information in [our docs](
https://docs.ansible.com/ansible/devel/reference_appendices/release_and_maintenance.html#release-status
).

## Reporting a Vulnerability

We encourage responsible disclosure practices for security
vulnerabilities. Please read our [policies for reporting bugs](
https://docs.ansible.com/ansible/devel/community/reporting_bugs_and_features.html#reporting-a-bug
) if you want to report a security issue that might affect Ansible.
",2019-05-23 19:48:58,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",external,5.3,10,3,10,2,8,10,-1,0,10,10,10,-1,0,0,0,-1,-1,5,28.0,133.0,36.0,2.0,63.0,46.0,0.0,7.0,1155.0,1094.0,1145.0,31.0
ansible/ansible-runner,https://github.com/ansible/ansible-runner,1628,2461,2018-02-02,93,938,1399,965,965,355,48,https://api.github.com/repos/ansible/ansible-runner/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

For all security related bugs, email security@ansible.com instead of using this issue tracker and you will receive a prompt response.

For more information on the Ansible community's practices regarding responsible disclosure, see https://www.ansible.com/security
",2022-02-28 16:18:16,"['Generic policy', 'Reporting mechanism']",email,6.1,10,2,10,0,8,10,10,10,0,9,6,-1,0,0,10,-1,0,9,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,15.0,42.0,22.0,1.0
ansys/pyansys-geometry,https://github.com/ansys/pyansys-geometry,1095,791,2022-08-30,28,1184,1468,44,44,12,7,https://api.github.com/repos/ansys/pyansys-geometry/contents/SECURITY.md,"<!--
Copyright (C) 2023 ANSYS, Inc. and/or its affiliates.
SPDX-License-Identifier: MIT


Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->

# Security Policy

## Supported Versions

| Version | Supported          |
| ------- | ------------------ |
| <= 0.4  | :x:                |
| 0.5.x   | :white_check_mark: |
| 0.6.x   | :white_check_mark: |
| 0.7.x   | :white_check_mark: |
| dev     | :white_check_mark: |

## Reporting a Vulnerability

If you detect a vulnerability, contact the [PyAnsys Core team](mailto:pyansys.core@ansys.com)
mentioning the repository and the details of your finding. The team will address it as soon as possible.
",2023-09-27 16:12:08,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.8,9,8,10,0,5,10,10,10,0,10,10,10,0,9,10,0,0,10,1.0,208.0,57.0,2.0,9.0,0.0,0.0,4.0,318.0,2003.0,3827.0,167.0
apache/age,https://github.com/apache/age,759,1581,2020-07-01,85,1313,2042,3096,3096,409,67,https://api.github.com/repos/apache/.github/contents/.github/SECURITY.md,"# Security Policy

This is a project of the [Apache Software Foundation](https://apache.org) and follows the ASF [vulnerability handling process](https://apache.org/security/#vulnerability-handling).

## Reporting a Vulnerability

To report a new vulnerability you have discovered please follow the [ASF vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability).
",2021-07-19 11:31:44,"['Generic policy', 'Reporting mechanism']",external,6.0,10,0,10,0,10,10,10,10,0,10,10,-1,0,0,10,0,0,10,3.0,38.0,21.0,1.0,3.0,0.0,0.0,23.0,168.0,243.0,305.0,9.0
apache/airflow,https://github.com/apache/airflow,26429,3487,2015-04-13,417,28946,38879,36904,36904,14250,758,https://api.github.com/repos/apache/.github/contents/.github/SECURITY.md,"# Security Policy

This is a project of the [Apache Software Foundation](https://apache.org) and follows the ASF [vulnerability handling process](https://apache.org/security/#vulnerability-handling).

## Reporting a Vulnerability

To report a new vulnerability you have discovered please follow the [ASF vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability).
",2021-07-19 11:31:44,"['Generic policy', 'Reporting mechanism']",external,7.8,10,6,10,0,10,10,-1,10,10,10,10,-1,0,0,10,8,-1,9,5.0,53.0,16.0,0.0,2.0,0.0,0.0,1.0,436.0,391.0,509.0,12.0
apache/arrow,https://github.com/apache/arrow,16828,3177,2016-02-17,369,18757,44507,14495,14495,3525,351,https://api.github.com/repos/apache/.github/contents/.github/SECURITY.md,"# Security Policy

This is a project of the [Apache Software Foundation](https://apache.org) and follows the ASF [vulnerability handling process](https://apache.org/security/#vulnerability-handling).

## Reporting a Vulnerability

To report a new vulnerability you have discovered please follow the [ASF vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability).
",2021-07-19 11:31:44,"['Generic policy', 'Reporting mechanism']",external,6.6,10,3,10,0,8,10,10,10,10,10,10,10,0,0,10,6,0,2,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,4.0,10.0,8.0,0.0
apache/avro,https://github.com/apache/avro,4560,5641,2009-05-21,348,3223,3223,2927,2927,1631,108,https://api.github.com/repos/apache/.github/contents/.github/SECURITY.md,"# Security Policy

This is a project of the [Apache Software Foundation](https://apache.org) and follows the ASF [vulnerability handling process](https://apache.org/security/#vulnerability-handling).

## Reporting a Vulnerability

To report a new vulnerability you have discovered please follow the [ASF vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability).
",2021-07-19 11:31:44,"['Generic policy', 'Reporting mechanism']",external,6.8,10,1,10,0,7,10,10,10,10,10,10,10,2,8,10,-1,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,5.0,29.0,0.0
apache/dolphinscheduler,https://github.com/apache/dolphinscheduler,8531,2069,2019-03-01,363,8237,15871,12817,12817,4608,327,https://api.github.com/repos/apache/.github/contents/.github/SECURITY.md,"# Security Policy

This is a project of the [Apache Software Foundation](https://apache.org) and follows the ASF [vulnerability handling process](https://apache.org/security/#vulnerability-handling).

## Reporting a Vulnerability

To report a new vulnerability you have discovered please follow the [ASF vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability).
",2021-07-19 11:31:44,"['Generic policy', 'Reporting mechanism']",external,6.8,9,8,10,0,10,10,10,10,0,10,10,-1,1,10,10,-1,0,0,0.0,91.0,3.0,10.0,0.0,0.0,0.0,0.0,84.0,49.0,15.0,0.0
apache/iotdb,https://github.com/apache/iotdb,11502,2166,2018-11-24,267,12913,13756,5600,5600,1016,125,https://api.github.com/repos/apache/.github/contents/.github/SECURITY.md,"# Security Policy

This is a project of the [Apache Software Foundation](https://apache.org) and follows the ASF [vulnerability handling process](https://apache.org/security/#vulnerability-handling).

## Reporting a Vulnerability

To report a new vulnerability you have discovered please follow the [ASF vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability).
",2021-07-19 11:31:44,"['Generic policy', 'Reporting mechanism']",external,6.6,10,0,10,0,8,10,10,10,0,10,10,-1,0,10,10,-1,0,7,0.0,128.0,1.0,55.0,0.0,0.0,0.0,0.0,26.0,62.0,29.0,0.0
apache/libcloud,https://github.com/apache/libcloud,10132,5436,2009-12-11,324,1826,2035,2040,2040,926,84,https://api.github.com/repos/apache/libcloud/contents/docs/security.rst,"Security
========

.. _security:

Reporting a vulnerability
-------------------------

.. note::

    Please do **not** report security issues using our public Github instance. Use
    the private mailing list described below.

If you believe you've found a security issue or a vulnerability, please send a
description of it to our private mailing list at security@libcloud.apache.org

You are also encouraged to encrypt this email using PGP. Keys of our developers
can be found at https://www.apache.org/dist/libcloud/KEYS.

Once you've submitted an issue, you should receive an acknowledgment from one
our of team members in 48 hours or less. If further action is necessary, you
may receive additional follow-up emails.

How are vulnerabilities handled?
--------------------------------

We follow a standard Apache Software Foundation vulnerability handling process
which is described at http://www.apache.org/security/committers.html#vulnerability-handling
",2013-10-29 21:45:51,[],email,6.5,10,3,10,0,0,10,10,10,0,10,0,-1,0,10,10,-1,10,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,8.0,18.0,0.0
apache/mxnet,https://github.com/apache/mxnet,11896,3470,2015-04-30,370,11124,20687,20780,20780,6789,1069,https://api.github.com/repos/apache/mxnet/contents/SECURITY.md,"<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ ""License""); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  ~
-->

# Security Policy

## Reporting a Vulnerability
The Apache Software Foundation takes a very active stance in eliminating security problems and denial of service attacks against its products.

We strongly encourage folks to report such problems to our private security mailing list first, before disclosing them in a public forum.

For instructions how to report a security vulnerability, please consult our [security guide](https://mxnet.apache.org/api/faq/security).
",2019-10-23 23:20:45,"['Generic policy', 'Reporting mechanism']",external,5.2,10,1,0,0,10,10,10,10,0,10,0,-1,0,0,10,8,0,4,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,28.0,63.0,202.0,0.0
apache/pulsar-client-cpp,https://github.com/apache/pulsar-client-cpp,1023,762,2022-09-29,131,300,449,53,53,63,36,https://api.github.com/repos/apache/pulsar-client-cpp/contents/SECURITY.md,"# Security Policy

## Security Vulnerability Process

The Pulsar community follows the ASF [security vulnerability handling process](https://apache.org/security/#vulnerability-handling).

To report a new vulnerability you have discovered, please follow the [ASF security vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability). To report a vulnerability for Pulsar, contact the [Apache Security Team](https://www.apache.org/security/). When reporting a vulnerability to [security@apache.org](mailto:security@apache.org), you can copy your email to [private@pulsar.apache.org](mailto:private@pulsar.apache.org) to send your report to the Apache Pulsar Project Management Committee. This is a private mailing list.

It is the responsibility of the security vulnerability handling project team (Apache Pulsar PMC in most cases) to make public security vulnerability announcements. You can follow announcements on the [users@pulsar.apache.org](mailto:users@pulsar.apache.org) mailing list. For instructions on how to subscribe, please see https://pulsar.apache.org/contact/.

## Security Policy details and supported versions of Apache Pulsar

The security policy and supported versions are outlined on the Pulsar website under [Security > Security Policy and Supported Versions](https://pulsar.apache.org/docs/security-policy-and-supported-versions/).

## Security Advisories

Please visit the [Security Advisories](https://github.com/apache/pulsar/wiki/Security-advisories) page.",2022-09-30 01:53:36,"['Generic policy', 'Reporting mechanism', 'Scope of practice', 'History of vulnerability']",email,6.6,10,8,10,0,10,10,10,0,0,10,5,10,0,9,10,-1,0,10,0.0,0.0,0.0,1.0,19.0,0.0,0.0,1.0,10.0,11.0,5.0,0.0
apache/qpid-python,https://github.com/apache/qpid-python,1057,3037,2016-07-06,15,26,26,15,15,20,15,https://api.github.com/repos/apache/.github/contents/.github/SECURITY.md,"# Security Policy

This is a project of the [Apache Software Foundation](https://apache.org) and follows the ASF [vulnerability handling process](https://apache.org/security/#vulnerability-handling).

## Reporting a Vulnerability

To report a new vulnerability you have discovered please follow the [ASF vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability).
",2021-07-19 11:31:44,"['Generic policy', 'Reporting mechanism']",external,4.1,10,3,0,0,0,10,10,0,0,10,0,-1,1,0,10,-1,0,10,1.0,70.0,1.0,1.0,0.0,0.0,0.0,0.0,160.0,280.0,326.0,11.0
apache/spark,https://github.com/apache/spark,42618,3899,2014-02-25,340,48671,48671,39600,39600,28279,2018,https://api.github.com/repos/apache/spark/contents/docs/security.md,"---
layout: global
displayTitle: Spark Security
title: Security
license: |
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the ""License""); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an ""AS IS"" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
---
* This will become a table of contents (this text will be scraped).
{:toc}

# Spark Security: Things You Need To Know

Security features like authentication are not enabled by default. When deploying a cluster that is open to the internet
or an untrusted network, it's important to secure access to the cluster to prevent unauthorized applications
from running on the cluster.

Spark supports multiple deployments types and each one supports different levels of security. Not
all deployment types will be secure in all environments and none are secure by default. Be
sure to evaluate your environment, what Spark supports, and take the appropriate measure to secure
your Spark deployment.

There are many different types of security concerns. Spark does not necessarily protect against
all things. Listed below are some of the things Spark supports. Also check the deployment
documentation for the type of deployment you are using for deployment specific settings. Anything
not documented, Spark does not support.

# Spark RPC (Communication protocol between Spark processes)

## Authentication

Spark currently supports authentication for RPC channels using a shared secret. Authentication can
be turned on by setting the `spark.authenticate` configuration parameter.

The exact mechanism used to generate and distribute the shared secret is deployment-specific. Unless
specified below, the secret must be defined by setting the `spark.authenticate.secret` config
option. The same secret is shared by all Spark applications and daemons in that case, which limits
the security of these deployments, especially on multi-tenant clusters.

The REST Submission Server supports HTTP `Authorization` header with
a cryptographically signed JSON Web Token via `JWSFilter`.
To enable authorization, Spark Master should have
`spark.master.rest.filters=org.apache.spark.ui.JWSFilter` and
`spark.org.apache.spark.ui.JWSFilter.param.secretKey=BASE64URL-ENCODED-KEY` configurations, and
client should provide HTTP `Authorization` header which contains JSON Web Token signed by
the shared secret key. Please note that this feature requires a Spark distribution built with
`jjwt` profile.

### YARN

For Spark on [YARN](running-on-yarn.html), Spark will automatically handle generating and
distributing the shared secret. Each application will use a unique shared secret. In
the case of YARN, this feature relies on YARN RPC encryption being enabled for the distribution of
secrets to be secure.

<table class=""spark-config"">
<thead><tr><th>Property Name</th><th>Default</th><th>Meaning</th><th>Since Version</th></tr></thead>
<tr>
  <td><code>spark.yarn.shuffle.server.recovery.disabled</code></td>
  <td>false</td>
  <td>
    Set to true for applications that have higher security requirements and prefer that their
    secret is not saved in the db. The shuffle data of such applications wll not be recovered after
    the External Shuffle Service restarts.
  </td>
  <td>3.5.0</td>
</tr>
</table>

### Kubernetes

On Kubernetes, Spark will also automatically generate an authentication secret unique to each
application. The secret is propagated to executor pods using environment variables. This means
that any user that can list pods in the namespace where the Spark application is running can
also see their authentication secret. Access control rules should be properly set up by the
Kubernetes admin to ensure that Spark authentication is secure.

<table class=""spark-config"">
<thead><tr><th>Property Name</th><th>Default</th><th>Meaning</th><th>Since Version</th></tr></thead>
<tr>
  <td><code>spark.authenticate</code></td>
  <td>false</td>
  <td>Whether Spark authenticates its internal connections.</td>
  <td>1.0.0</td>
</tr>
<tr>
  <td><code>spark.authenticate.secret</code></td>
  <td>None</td>
  <td>
    The secret key used authentication. See above for when this configuration should be set.
  </td>
  <td>1.0.0</td>
</tr>
</table>

Alternatively, one can mount authentication secrets using files and Kubernetes secrets that
the user mounts into their pods.

<table class=""spark-config"">
<thead><tr><th>Property Name</th><th>Default</th><th>Meaning</th><th>Since Version</th></tr></thead>
<tr>
  <td><code>spark.authenticate.secret.file</code></td>
  <td>None</td>
  <td>
    Path pointing to the secret key to use for securing connections. Ensure that the
    contents of the file have been securely generated. This file is loaded on both the driver
    and the executors unless other settings override this (see below).
  </td>
  <td>3.0.0</td>
</tr>
<tr>
  <td><code>spark.authenticate.secret.driver.file</code></td>
  <td>The value of <code>spark.authenticate.secret.file</code></td>
  <td>
    When specified, overrides the location that the Spark driver reads to load the secret.
    Useful when in client mode, when the location of the secret file may differ in the pod versus
    the node the driver is running in. When this is specified,
    <code>spark.authenticate.secret.executor.file</code> must be specified so that the driver
    and the executors can both use files to load the secret key. Ensure that the contents of the file
    on the driver is identical to the contents of the file on the executors.
  </td>
  <td>3.0.0</td>
</tr>
<tr>
  <td><code>spark.authenticate.secret.executor.file</code></td>
  <td>The value of <code>spark.authenticate.secret.file</code></td>
  <td>
    When specified, overrides the location that the Spark executors read to load the secret.
    Useful in client mode, when the location of the secret file may differ in the pod versus
    the node the driver is running in. When this is specified,
    <code>spark.authenticate.secret.driver.file</code> must be specified so that the driver
    and the executors can both use files to load the secret key. Ensure that the contents of the file
    on the driver is identical to the contents of the file on the executors.
  </td>
  <td>3.0.0</td>
</tr>
</table>

Note that when using files, Spark will not mount these files into the containers for you. It is up
you to ensure that the secret files are deployed securely into your containers and that the driver's
secret file agrees with the executors' secret file.

# Network Encryption

Spark supports two mutually exclusive forms of encryption for RPC connections:

The **preferred method** uses TLS (aka SSL) encryption via Netty's support for SSL. Enabling SSL
requires keys and certificates to be properly configured. SSL is standardized and considered more
secure.

The legacy method is an AES-based encryption mechanism relying on a shared secret. This requires
RPC authentication to also be enabled. This method uses a bespoke protocol and it is recommended
to use SSL instead.

One may prefer to use the SSL based encryption in scenarios where compliance mandates the usage
of specific protocols; or to leverage the security of a more standard encryption library. However,
the AES based encryption is simpler to configure and may be preferred if the only requirement
is that data be encrypted in transit.

If both options are enabled in the configuration, the SSL based RPC encryption takes precedence
and the AES based encryption will not be used (and a warning message will be emitted).

## SSL Encryption (Preferred)

Spark supports SSL based encryption for RPC connections. Please refer to the SSL Configuration
section below to understand how to configure it. The SSL settings are mostly similar across the UI
and RPC, however there are a few additional settings which are specific to the RPC implementation.
The RPC implementation uses Netty under the hood (while the UI uses Jetty), which supports a
different set of options.

Unlike the other SSL settings for the UI, the RPC SSL is *not* automatically enabled if
`spark.ssl.enabled` is set. It must be explicitly enabled, to ensure a safe migration path for users
upgrading Spark versions.

## AES-based Encryption (Legacy)

Spark supports AES-based encryption for RPC connections. For encryption to be enabled, RPC
authentication must also be enabled and properly configured. AES encryption uses the
[Apache Commons Crypto](https://commons.apache.org/proper/commons-crypto/) library, and Spark's
configuration system allows access to that library's configuration for advanced users.

This legacy protocol has two mutually incompatible versions. Version 1 omits applying key derivation function
(KDF) to the key exchange protocol's output, while version 2 applies a KDF to ensure that the derived session
key is uniformly distributed. Version 1 is default for backward compatibility. It is **recommended to use version 2**
for better security properties. The version can be configured by setting `spark.network.crypto.authEngineVersion` to
1 or 2 respectively.

There is also support for SASL-based encryption, although it should be considered deprecated. It
is still required when talking to shuffle services from Spark versions older than 2.2.0.

The following table describes the different options available for configuring this feature.

<table class=""spark-config"">
<thead><tr><th>Property Name</th><th>Default</th><th>Meaning</th><th>Since Version</th></tr></thead>
<tr>
  <td><code>spark.network.crypto.enabled</code></td>
  <td>false</td>
  <td>
    Enable AES-based RPC encryption, including the new authentication protocol added in 2.2.0.
  </td>
  <td>2.2.0</td>
</tr>
<tr>
  <td><code>spark.network.crypto.cipher</code></td>
  <td>AES/CTR/NoPadding</td>
  <td>
    Cipher mode to use. Defaults ""AES/CTR/NoPadding"" for backward compatibility, which is not authenticated. 
    Recommended to use ""AES/GCM/NoPadding"", which is an authenticated encryption mode.
  </td>
  <td>4.0.0, 3.5.2, 3.4.4</td>
</tr>
<tr>
  <td><code>spark.network.crypto.authEngineVersion</code></td>
  <td>1</td>
  <td>Version of AES-based RPC encryption to use. Valid versions are 1 or 2. Version 2 is recommended.</td>
  <td>4.0.0</td>
</tr>
<tr>
  <td><code>spark.network.crypto.config.*</code></td>
  <td>None</td>
  <td>
    Configuration values for the commons-crypto library, such as which cipher implementations to
    use. The config name should be the name of commons-crypto configuration without the
    <code>commons.crypto</code> prefix.
  </td>
  <td>2.2.0</td>
</tr>
<tr>
  <td><code>spark.network.crypto.saslFallback</code></td>
  <td>true</td>
  <td>
    Whether to fall back to SASL authentication if authentication fails using Spark's internal
    mechanism. This is useful when the application is connecting to old shuffle services that
    do not support the internal Spark authentication protocol. On the shuffle service side,
    disabling this feature will block older clients from authenticating.
  </td>
  <td>2.2.0</td>
</tr>
<tr>
  <td><code>spark.authenticate.enableSaslEncryption</code></td>
  <td>false</td>
  <td>
    Enable SASL-based encrypted communication.
  </td>
  <td>2.2.0</td>
</tr>
<tr>
  <td><code>spark.network.sasl.serverAlwaysEncrypt</code></td>
  <td>false</td>
  <td>
    Disable unencrypted connections for ports using SASL authentication. This will deny connections
    from clients that have authentication enabled, but do not request SASL-based encryption.
  </td>
  <td>1.4.0</td>
</tr>
</table>

# Local Storage Encryption

Spark supports encrypting temporary data written to local disks. This covers shuffle files, shuffle
spills and data blocks stored on disk (for both caching and broadcast variables). It does not cover
encrypting output data generated by applications with APIs such as `saveAsHadoopFile` or
`saveAsTable`. It also may not cover temporary files created explicitly by the user.

The following settings cover enabling encryption for data written to disk:

<table class=""spark-config"">
<thead><tr><th>Property Name</th><th>Default</th><th>Meaning</th><th>Since Version</th></tr></thead>
<tr>
  <td><code>spark.io.encryption.enabled</code></td>
  <td>false</td>
  <td>
    Enable local disk I/O encryption. Currently supported by all modes. It's strongly
    recommended that RPC encryption be enabled when using this feature.
  </td>
  <td>2.1.0</td>
</tr>
<tr>
  <td><code>spark.io.encryption.keySizeBits</code></td>
  <td>128</td>
  <td>
    IO encryption key size in bits. Supported values are 128, 192 and 256.
  </td>
  <td>2.1.0</td>
</tr>
<tr>
  <td><code>spark.io.encryption.keygen.algorithm</code></td>
  <td>HmacSHA1</td>
  <td>
    The algorithm to use when generating the IO encryption key. The supported algorithms are
    described in the KeyGenerator section of the Java Cryptography Architecture Standard Algorithm
    Name Documentation.
  </td>
  <td>2.1.0</td>
</tr>
<tr>
  <td><code>spark.io.encryption.commons.config.*</code></td>
  <td>None</td>
  <td>
    Configuration values for the commons-crypto library, such as which cipher implementations to
    use. The config name should be the name of commons-crypto configuration without the
    <code>commons.crypto</code> prefix.
  </td>
  <td>2.1.0</td>
</tr>
</table>


# Web UI

## Authentication and Authorization

Enabling authentication for the Web UIs is done using [jakarta servlet filters](https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/filter).
You will need a filter that implements the authentication method you want to deploy. Spark does not
provide any built-in authentication filters.

Spark also supports access control to the UI when an authentication filter is present. Each
application can be configured with its own separate access control lists (ACLs). Spark
differentiates between ""view"" permissions (who is allowed to see the application's UI), and ""modify""
permissions (who can do things like kill jobs in a running application).

ACLs can be configured for either users or groups. Configuration entries accept comma-separated
lists as input, meaning multiple users or groups can be given the desired privileges. This can be
used if you run on a shared cluster and have a set of administrators or developers who need to
monitor applications they may not have started themselves. A wildcard (`*`) added to specific ACL
means that all users will have the respective privilege. By default, only the user submitting the
application is added to the ACLs.

Group membership is established by using a configurable group mapping provider. The mapper is
configured using the <code>spark.user.groups.mapping</code> config option, described in the table
below.

The following options control the authentication of Web UIs:

<table class=""spark-config"">
<thead><tr><th>Property Name</th><th>Default</th><th>Meaning</th><th>Since Version</th></tr></thead>
<tr>
  <td><code>spark.ui.allowFramingFrom</code></td>
  <td><code>SAMEORIGIN</code></td>
  <td>Allow framing for a specific named URI via <code>X-Frame-Options</code>. By default, allow only from the same origin.</td>
  <td>1.6.0</td>
</tr>
<tr>
  <td><code>spark.ui.filters</code></td>
  <td>None</td>
  <td>
    Spark supports HTTP <code>Authorization</code> header with a cryptographically signed
    JSON Web Token via <code>org.apache.spark.ui.JWSFilter</code>. <br />
    See the <a href=""configuration.html#spark-ui"">Spark UI</a> configuration for how to configure
    filters.
  </td>
  <td>1.0.0</td>
</tr>
<tr>
  <td><code>spark.acls.enable</code></td>
  <td>false</td>
  <td>
    Whether UI ACLs should be enabled. If enabled, this checks to see if the user has access
    permissions to view or modify the application. Note this requires the user to be authenticated,
    so if no authentication filter is installed, this option does not do anything.
  </td>
  <td>1.1.0</td>
</tr>
<tr>
  <td><code>spark.admin.acls</code></td>
  <td>None</td>
  <td>
    Comma-separated list of users that have view and modify access to the Spark application.
  </td>
  <td>1.1.0</td>
</tr>
<tr>
  <td><code>spark.admin.acls.groups</code></td>
  <td>None</td>
  <td>
    Comma-separated list of groups that have view and modify access to the Spark application.
  </td>
  <td>2.0.0</td>
</tr>
<tr>
  <td><code>spark.modify.acls</code></td>
  <td>None</td>
  <td>
    Comma-separated list of users that have modify access to the Spark application.
  </td>
  <td>1.1.0</td>
</tr>
<tr>
  <td><code>spark.modify.acls.groups</code></td>
  <td>None</td>
  <td>
    Comma-separated list of groups that have modify access to the Spark application.
  </td>
  <td>2.0.0</td>
</tr>
<tr>
  <td><code>spark.ui.view.acls</code></td>
  <td>None</td>
  <td>
    Comma-separated list of users that have view access to the Spark application.
  </td>
  <td>1.0.0</td>
</tr>
<tr>
  <td><code>spark.ui.view.acls.groups</code></td>
  <td>None</td>
  <td>
    Comma-separated list of groups that have view access to the Spark application.
  </td>
  <td>2.0.0</td>
</tr>
<tr>
  <td><code>spark.user.groups.mapping</code></td>
  <td><code>org.apache.spark.security.ShellBasedGroupsMappingProvider</code></td>
  <td>
    The list of groups for a user is determined by a group mapping service defined by the trait
    <code>org.apache.spark.security.GroupMappingServiceProvider</code>, which can be configured by
    this property.

    <br />By default, a Unix shell-based implementation is used, which collects this information
    from the host OS.

    <br /><em>Note:</em> This implementation supports only Unix/Linux-based environments.
    Windows environment is currently <b>not</b> supported. However, a new platform/protocol can
    be supported by implementing the trait mentioned above.
  </td>
  <td>2.0.0</td>
</tr>
</table>

On YARN, the view and modify ACLs are provided to the YARN service when submitting applications, and
control who has the respective privileges via YARN interfaces.

## Spark History Server ACLs

Authentication for the SHS Web UI is enabled the same way as for regular applications, using
servlet filters.

To enable authorization in the SHS, a few extra options are used:

<table class=""spark-config"">
<thead><tr><th>Property Name</th><th>Default</th><th>Meaning</th><th>Since Version</th></tr></thead>
<tr>
  <td><code>spark.history.ui.acls.enable</code></td>
  <td>false</td>
  <td>
    Specifies whether ACLs should be checked to authorize users viewing the applications in
    the history server. If enabled, access control checks are performed regardless of what the
    individual applications had set for <code>spark.ui.acls.enable</code>. The application owner
    will always have authorization to view their own application and any users specified via
    <code>spark.ui.view.acls</code> and groups specified via <code>spark.ui.view.acls.groups</code>
    when the application was run will also have authorization to view that application.
    If disabled, no access control checks are made for any application UIs available through
    the history server.
  </td>
  <td>1.0.1</td>
</tr>
<tr>
  <td><code>spark.history.ui.admin.acls</code></td>
  <td>None</td>
  <td>
    Comma separated list of users that have view access to all the Spark applications in history
    server.
  </td>
  <td>2.1.1</td>
</tr>
<tr>
  <td><code>spark.history.ui.admin.acls.groups</code></td>
  <td>None</td>
  <td>
    Comma separated list of groups that have view access to all the Spark applications in history
    server.
  </td>
  <td>2.1.1</td>
</tr>
</table>

The SHS uses the same options to configure the group mapping provider as regular applications.
In this case, the group mapping provider will apply to all UIs server by the SHS, and individual
application configurations will be ignored.

## SSL Configuration

Configuration for SSL is organized hierarchically. The user can configure the default SSL settings
which will be used for all the supported communication protocols unless they are overwritten by
protocol-specific settings. This way the user can easily provide the common settings for all the
protocols without disabling the ability to configure each one individually. Note that all settings 
are inherited this way, *except* for `spark.ssl.rpc.enabled` which must be explicitly set.

The following table describes the SSL configuration namespaces:

<table>
  <thead>
  <tr>
    <th>Config Namespace</th>
    <th>Component</th>
  </tr>
  </thead>
  <tr>
    <td><code>spark.ssl</code></td>
    <td>
      The default SSL configuration. These values will apply to all namespaces below, unless
      explicitly overridden at the namespace level.
    </td>
  </tr>
  <tr>
    <td><code>spark.ssl.ui</code></td>
    <td>Spark application Web UI</td>
  </tr>
  <tr>
    <td><code>spark.ssl.standalone</code></td>
    <td>Standalone Master / Worker Web UI</td>
  </tr>
  <tr>
    <td><code>spark.ssl.historyServer</code></td>
    <td>History Server Web UI</td>
  </tr>
  <tr>
    <td><code>spark.ssl.rpc</code></td>
    <td>Spark RPC communication</td>
  </tr>
</table>

The full breakdown of available SSL options can be found below. The `${ns}` placeholder should be
replaced with one of the above namespaces.

<table>
<thead><tr><th>Property Name</th><th>Default</th><th>Meaning</th><th>Supported Namespaces</th></tr></thead>
  <tr>
    <td><code>${ns}.enabled</code></td>
    <td>false</td>
    <td>Enables SSL. When enabled, <code>${ns}.ssl.protocol</code> is required.</td>
    <td>ui,standalone,historyServer,rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.port</code></td>
    <td>None</td>
    <td>
      The port where the SSL service will listen on.

      <br />The port must be defined within a specific namespace configuration. The default
      namespace is ignored when reading this configuration.

      <br />When not set, the SSL port will be derived from the non-SSL port for the
      same service. A value of ""0"" will make the service bind to an ephemeral port.
    </td>
    <td>ui,standalone,historyServer</td>
  </tr>
  <tr>
    <td><code>${ns}.enabledAlgorithms</code></td>
    <td>None</td>
    <td>
      A comma-separated list of ciphers. The specified ciphers must be supported by JVM.

      <br />The reference list of protocols can be found in the ""JSSE Cipher Suite Names"" section
      of the Java security guide. The list for Java 17 can be found at
      <a href=""https://docs.oracle.com/en/java/javase/17/docs/specs/security/standard-names.html#jsse-cipher-suite-names"">this</a>
      page.

      <br />Note: If not set, the default cipher suite for the JRE will be used.
    </td>
    <td>ui,standalone,historyServer,rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.keyPassword</code></td>
    <td>None</td>
    <td>
      The password to the private key in the key store.
    </td>
    <td>ui,standalone,historyServer,rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.keyStore</code></td>
    <td>None</td>
    <td>
      Path to the key store file. The path can be absolute or relative to the directory in which the
      process is started.
    </td>
    <td>ui,standalone,historyServer,rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.keyStorePassword</code></td>
    <td>None</td>
    <td>Password to the key store.</td>
    <td>ui,standalone,historyServer,rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.keyStoreType</code></td>
    <td>JKS</td>
    <td>The type of the key store.</td>
    <td>ui,standalone,historyServer</td>
  </tr>
  <tr>
    <td><code>${ns}.protocol</code></td>
    <td>None</td>
    <td>
      TLS protocol to use. The protocol must be supported by JVM.

      <br />The reference list of protocols can be found in the ""Additional JSSE Standard Names""
      section of the Java security guide. For Java 17, the list can be found at
      <a href=""https://docs.oracle.com/en/java/javase/17/docs/specs/security/standard-names.html#additional-jsse-standard-names"">this</a>
      page.
    </td>
    <td>ui,standalone,historyServer,rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.needClientAuth</code></td>
    <td>false</td>
    <td>
      Whether to require client authentication.
    </td>
    <td>ui,standalone,historyServer</td>
  </tr>
  <tr>
    <td><code>${ns}.trustStore</code></td>
    <td>None</td>
    <td>
      Path to the trust store file. The path can be absolute or relative to the directory in which
      the process is started.
    </td>
    <td>ui,standalone,historyServer,rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.trustStorePassword</code></td>
    <td>None</td>
    <td>Password for the trust store.</td>
    <td>ui,standalone,historyServer,rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.trustStoreType</code></td>
    <td>JKS</td>
    <td>The type of the trust store.</td>
    <td>ui,standalone,historyServer</td>
  </tr>
  <tr>
    <td><code>${ns}.openSSLEnabled</code></td>
    <td>false</td>
    <td>
      Whether to use OpenSSL for cryptographic operations instead of the JDK SSL provider.
      This setting requires the `certChain` and `privateKey` settings to be set.
      This takes precedence over the `keyStore` and `trustStore` settings if both are specified.
      If the OpenSSL library is not available at runtime, we will fall back to the JDK provider.
    </td>
    <td>rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.privateKey</code></td>
    <td>None</td>
    <td>
      Path to the private key file in PEM format. The path can be absolute or relative to the 
      directory in which the process is started. 
      This setting is required when using the OpenSSL implementation.
    </td>
    <td>rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.privateKeyPassword</code></td>
    <td>None</td>
    <td>
      The password to the above private key file in PEM format.
    </td>
    <td>rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.certChain</code></td>
    <td>None</td>
    <td>
      Path to the certificate chain file in PEM format. The path can be absolute or relative to the 
      directory in which the process is started. 
      This setting is required when using the OpenSSL implementation.
    </td>
    <td>rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.trustStoreReloadingEnabled</code></td>
    <td>false</td>
    <td>
      Whether the trust store should be reloaded periodically.
      This setting is mostly only useful in standalone deployments, not k8s or yarn deployments.
    </td>
    <td>rpc</td>
  </tr>
  <tr>
    <td><code>${ns}.trustStoreReloadIntervalMs</code></td>
    <td>10000</td>
    <td>
      The interval at which the trust store should be reloaded (in milliseconds).
      This setting is mostly only useful in standalone deployments, not k8s or yarn deployments.
    </td>
    <td>rpc</td>
  </tr>
</table>

Spark also supports retrieving `${ns}.keyPassword`, `${ns}.keyStorePassword` and `${ns}.trustStorePassword` from
[Hadoop Credential Providers](https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/CredentialProviderAPI.html).
User could store password into credential file and make it accessible by different components, like:

```
hadoop credential create spark.ssl.keyPassword -value password \
    -provider jceks://hdfs@nn1.example.com:9001/user/backup/ssl.jceks
```

To configure the location of the credential provider, set the `hadoop.security.credential.provider.path`
config option in the Hadoop configuration used by Spark, like:

```
  <property>
    <name>hadoop.security.credential.provider.path</name>
    <value>jceks://hdfs@nn1.example.com:9001/user/backup/ssl.jceks</value>
  </property>
```

Or via SparkConf ""spark.hadoop.hadoop.security.credential.provider.path=jceks://hdfs@nn1.example.com:9001/user/backup/ssl.jceks"".

## Preparing the key stores

Key stores can be generated by `keytool` program. The reference documentation for this tool for
Java 17 is [here](https://docs.oracle.com/en/java/javase/17/docs/specs/man/keytool.html).
The most basic steps to configure the key stores and the trust store for a Spark Standalone
deployment mode is as follows:

* Generate a key pair for each node
* Export the public key of the key pair to a file on each node
* Import all exported public keys into a single trust store
* Distribute the trust store to the cluster nodes

### YARN mode

To provide a local trust store or key store file to drivers running in cluster mode, they can be
distributed with the application using the `--files` command line argument (or the equivalent
`spark.files` configuration). The files will be placed on the driver's working directory, so the TLS
configuration should just reference the file name with no absolute path.

Distributing local key stores this way may require the files to be staged in HDFS (or other similar
distributed file system used by the cluster), so it's recommended that the underlying file system be
configured with security in mind (e.g. by enabling authentication and wire encryption).

### Standalone mode

The user needs to provide key stores and configuration options for master and workers. They have to
be set by attaching appropriate Java system properties in `SPARK_MASTER_OPTS` and in
`SPARK_WORKER_OPTS` environment variables, or just in `SPARK_DAEMON_JAVA_OPTS`.

The user may allow the executors to use the SSL settings inherited from the worker process. That
can be accomplished by setting `spark.ssl.useNodeLocalConf` to `true`. In that case, the settings
provided by the user on the client side are not used.

## HTTP Security Headers

Apache Spark can be configured to include HTTP headers to aid in preventing Cross Site Scripting
(XSS), Cross-Frame Scripting (XFS), MIME-Sniffing, and also to enforce HTTP Strict Transport
Security.

<table class=""spark-config"">
<thead><tr><th>Property Name</th><th>Default</th><th>Meaning</th><th>Since Version</th></tr></thead>
<tr>
  <td><code>spark.ui.xXssProtection</code></td>
  <td><code>1; mode=block</code></td>
  <td>
    Value for HTTP X-XSS-Protection response header. You can choose appropriate value
    from below:
    <ul>
      <li><code>0</code> (Disables XSS filtering)</li>
      <li><code>1</code> (Enables XSS filtering. If a cross-site scripting attack is detected,
        the browser will sanitize the page.)</li>
      <li><code>1; mode=block</code> (Enables XSS filtering. The browser will prevent rendering
        of the page if an attack is detected.)</li>
    </ul>
  </td>
  <td>2.3.0</td>
</tr>
<tr>
  <td><code>spark.ui.xContentTypeOptions.enabled</code></td>
  <td><code>true</code></td>
  <td>
    When enabled, X-Content-Type-Options HTTP response header will be set to ""nosniff"".
  </td>
  <td>2.3.0</td>
</tr>
<tr>
  <td><code>spark.ui.strictTransportSecurity</code></td>
  <td>None</td>
  <td>
    Value for HTTP Strict Transport Security (HSTS) Response Header. You can choose appropriate
    value from below and set <code>expire-time</code> accordingly. This option is only used when
    SSL/TLS is enabled.
    <ul>
      <li><code>max-age=&lt;expire-time&gt;</code></li>
      <li><code>max-age=&lt;expire-time&gt;; includeSubDomains</code></li>
      <li><code>max-age=&lt;expire-time&gt;; preload</code></li>
    </ul>
  </td>
  <td>2.3.0</td>
</tr>
</table>


# Configuring Ports for Network Security

Generally speaking, a Spark cluster and its services are not deployed on the public internet.
They are generally private services, and should only be accessible within the network of the
organization that deploys Spark. Access to the hosts and ports used by Spark services should
be limited to origin hosts that need to access the services.

However, like the REST Submission port, Spark also supports HTTP `Authorization` header
with a cryptographically signed JSON Web Token (JWT) for all UI ports.
To use it, a user needs the Spark distribution built with `jjwt` profile and to configure
`spark.ui.filters=org.apache.spark.ui.JWSFilter` and
`spark.org.apache.spark.ui.JWSFilter.param.secretKey=BASE64URL-ENCODED-KEY`.

Below are the primary ports that Spark uses for its communication and how to
configure those ports.

## Standalone mode only

<table>
  <thead>
  <tr>
    <th>From</th><th>To</th><th>Default Port</th><th>Purpose</th><th>Configuration
    Setting</th><th>Notes</th>
  </tr>
  </thead>
  <tr>
    <td>Browser</td>
    <td>Standalone Master</td>
    <td>8080</td>
    <td>Web UI</td>
    <td><code>spark.master.ui.port /<br> SPARK_MASTER_WEBUI_PORT</code></td>
    <td>Jetty-based. Standalone mode only.</td>
  </tr>
  <tr>
    <td>Browser</td>
    <td>Standalone Worker</td>
    <td>8081</td>
    <td>Web UI</td>
    <td><code>spark.worker.ui.port /<br> SPARK_WORKER_WEBUI_PORT</code></td>
    <td>Jetty-based. Standalone mode only.</td>
  </tr>
  <tr>
    <td>Driver /<br> Standalone Worker</td>
    <td>Standalone Master</td>
    <td>7077</td>
    <td>Submit job to cluster /<br> Join cluster</td>
    <td><code>SPARK_MASTER_PORT</code></td>
    <td>Set to ""0"" to choose a port randomly. Standalone mode only.</td>
  </tr>
  <tr>
    <td>External Service</td>
    <td>Standalone Master</td>
    <td>6066</td>
    <td>Submit job to cluster via REST API</td>
    <td><code>spark.master.rest.port</code></td>
    <td>Use <code>spark.master.rest.enabled</code> to enable/disable this service. Standalone mode only.</td>
  </tr>
  <tr>
    <td>Standalone Master</td>
    <td>Standalone Worker</td>
    <td>(random)</td>
    <td>Schedule executors</td>
    <td><code>SPARK_WORKER_PORT</code></td>
    <td>Set to ""0"" to choose a port randomly. Standalone mode only.</td>
  </tr>
</table>

## All cluster managers

<table>
  <thead>
  <tr>
    <th>From</th><th>To</th><th>Default Port</th><th>Purpose</th><th>Configuration
    Setting</th><th>Notes</th>
  </tr>
  </thead>
  <tr>
    <td>Browser</td>
    <td>Application</td>
    <td>4040</td>
    <td>Web UI</td>
    <td><code>spark.ui.port</code></td>
    <td>Jetty-based</td>
  </tr>
  <tr>
    <td>Browser</td>
    <td>History Server</td>
    <td>18080</td>
    <td>Web UI</td>
    <td><code>spark.history.ui.port</code></td>
    <td>Jetty-based</td>
  </tr>
  <tr>
    <td>Executor /<br> Standalone Master</td>
    <td>Driver</td>
    <td>(random)</td>
    <td>Connect to application /<br> Notify executor state changes</td>
    <td><code>spark.driver.port</code></td>
    <td>Set to ""0"" to choose a port randomly.</td>
  </tr>
  <tr>
    <td>Executor / Driver</td>
    <td>Executor / Driver</td>
    <td>(random)</td>
    <td>Block Manager port</td>
    <td><code>spark.blockManager.port</code></td>
    <td>Raw socket via ServerSocketChannel</td>
  </tr>
</table>


# Kerberos

Spark supports submitting applications in environments that use Kerberos for authentication.
In most cases, Spark relies on the credentials of the current logged in user when authenticating
to Kerberos-aware services. Such credentials can be obtained by logging in to the configured KDC
with tools like `kinit`.

When talking to Hadoop-based services, Spark needs to obtain delegation tokens so that non-local
processes can authenticate. Spark ships with support for HDFS and other Hadoop file systems, Hive
and HBase.

When using a Hadoop filesystem (such HDFS or WebHDFS), Spark will acquire the relevant tokens
for the service hosting the user's home directory.

An HBase token will be obtained if HBase is in the application's classpath, and the HBase
configuration has Kerberos authentication turned (`hbase.security.authentication=kerberos`).

Similarly, a Hive token will be obtained if Hive is in the classpath, and the configuration includes
URIs for remote metastore services (`hive.metastore.uris` is not empty).

If an application needs to interact with other secure Hadoop filesystems, their URIs need to be
explicitly provided to Spark at launch time. This is done by listing them in the
`spark.kerberos.access.hadoopFileSystems` property, described in the configuration section below.

Spark also supports custom delegation token providers using the Java Services
mechanism (see `java.util.ServiceLoader`). Implementations of
`org.apache.spark.security.HadoopDelegationTokenProvider` can be made available to Spark
by listing their names in the corresponding file in the jar's `META-INF/services` directory.

Delegation token support is currently only supported in YARN and Kubernetes mode. Consult the
deployment-specific page for more information.

The following options provides finer-grained control for this feature:

<table class=""spark-config"">
<thead><tr><th>Property Name</th><th>Default</th><th>Meaning</th><th>Since Version</th></tr></thead>
<tr>
  <td><code>spark.security.credentials.${service}.enabled</code></td>
  <td><code>true</code></td>
  <td>
    Controls whether to obtain credentials for services when security is enabled.
    By default, credentials for all supported services are retrieved when those services are
    configured, but it's possible to disable that behavior if it somehow conflicts with the
    application being run.
  </td>
  <td>2.3.0</td>
</tr>
<tr>
  <td><code>spark.kerberos.access.hadoopFileSystems</code></td>
  <td>(none)</td>
  <td>
    A comma-separated list of secure Hadoop filesystems your Spark application is going to access. For
    example, <code>spark.kerberos.access.hadoopFileSystems=hdfs://nn1.com:8032,hdfs://nn2.com:8032,
    webhdfs://nn3.com:50070</code>. The Spark application must have access to the filesystems listed
    and Kerberos must be properly configured to be able to access them (either in the same realm
    or in a trusted realm). Spark acquires security tokens for each of the filesystems so that
    the Spark application can access those remote Hadoop filesystems.
  </td>
  <td>3.0.0</td>
</tr>
</table>

Users can exclude Kerberos delegation token renewal at resource scheduler. Currently it is only supported
on YARN. The configuration is covered in the [Running Spark on YARN](running-on-yarn.html#yarn-specific-kerberos-configuration) page.

## Long-Running Applications

Long-running applications may run into issues if their run time exceeds the maximum delegation
token lifetime configured in services it needs to access.

This feature is not available everywhere. In particular, it's only implemented
on YARN and Kubernetes (both client and cluster modes).

Spark supports automatically creating new tokens for these applications. There are two ways to
enable this functionality.

### Using a Keytab

By providing Spark with a principal and keytab (e.g. using `spark-submit` with `--principal`
and `--keytab` parameters), the application will maintain a valid Kerberos login that can be
used to retrieve delegation tokens indefinitely.

Note that when using a keytab in cluster mode, it will be copied over to the machine running the
Spark driver. In the case of YARN, this means using HDFS as a staging area for the keytab, so it's
strongly recommended that both YARN and HDFS be secured with encryption, at least.

### Using a ticket cache

By setting `spark.kerberos.renewal.credentials` to `ccache` in Spark's configuration, the local
Kerberos ticket cache will be used for authentication. Spark will keep the ticket renewed during its
renewable life, but after it expires a new ticket needs to be acquired (e.g. by running `kinit`).

It's up to the user to maintain an updated ticket cache that Spark can use.

The location of the ticket cache can be customized by setting the `KRB5CCNAME` environment
variable.

## Secure Interaction with Kubernetes

When talking to Hadoop-based services behind Kerberos, it was noted that Spark needs to obtain delegation tokens
so that non-local processes can authenticate. These delegation tokens in Kubernetes are stored in Secrets that are
shared by the Driver and its Executors. As such, there are three ways of submitting a Kerberos job:

In all cases you must define the environment variable: `HADOOP_CONF_DIR` or
`spark.kubernetes.hadoop.configMapName.`

It also important to note that the KDC needs to be visible from inside the containers.

If a user wishes to use a remote HADOOP_CONF directory, that contains the Hadoop configuration files, this could be
achieved by setting `spark.kubernetes.hadoop.configMapName` to a pre-existing ConfigMap.

1. Submitting with a $kinit that stores a TGT in the Local Ticket Cache:
```bash
/usr/bin/kinit -kt <keytab_file> <username>/<krb5 realm>
/opt/spark/bin/spark-submit \
    --deploy-mode cluster \
    --class org.apache.spark.examples.HdfsTest \
    --master k8s://<KUBERNETES_MASTER_ENDPOINT> \
    --conf spark.executor.instances=1 \
    --conf spark.app.name=spark-hdfs \
    --conf spark.kubernetes.container.image=spark:latest \
    --conf spark.kubernetes.kerberos.krb5.path=/etc/krb5.conf \
    local:///opt/spark/examples/jars/spark-examples_<VERSION>.jar \
    <HDFS_FILE_LOCATION>
```
2. Submitting with a local Keytab and Principal
```bash
/opt/spark/bin/spark-submit \
    --deploy-mode cluster \
    --class org.apache.spark.examples.HdfsTest \
    --master k8s://<KUBERNETES_MASTER_ENDPOINT> \
    --conf spark.executor.instances=1 \
    --conf spark.app.name=spark-hdfs \
    --conf spark.kubernetes.container.image=spark:latest \
    --conf spark.kerberos.keytab=<KEYTAB_FILE> \
    --conf spark.kerberos.principal=<PRINCIPAL> \
    --conf spark.kubernetes.kerberos.krb5.path=/etc/krb5.conf \
    local:///opt/spark/examples/jars/spark-examples_<VERSION>.jar \
    <HDFS_FILE_LOCATION>
```

3. Submitting with pre-populated secrets, that contain the Delegation Token, already existing within the namespace
```bash
/opt/spark/bin/spark-submit \
    --deploy-mode cluster \
    --class org.apache.spark.examples.HdfsTest \
    --master k8s://<KUBERNETES_MASTER_ENDPOINT> \
    --conf spark.executor.instances=1 \
    --conf spark.app.name=spark-hdfs \
    --conf spark.kubernetes.container.image=spark:latest \
    --conf spark.kubernetes.kerberos.tokenSecret.name=<SECRET_TOKEN_NAME> \
    --conf spark.kubernetes.kerberos.tokenSecret.itemKey=<SECRET_ITEM_KEY> \
    --conf spark.kubernetes.kerberos.krb5.path=/etc/krb5.conf \
    local:///opt/spark/examples/jars/spark-examples_<VERSION>.jar \
    <HDFS_FILE_LOCATION>
```

3b. Submitting like in (3) however specifying a pre-created krb5 ConfigMap and pre-created `HADOOP_CONF_DIR` ConfigMap
```bash
/opt/spark/bin/spark-submit \
    --deploy-mode cluster \
    --class org.apache.spark.examples.HdfsTest \
    --master k8s://<KUBERNETES_MASTER_ENDPOINT> \
    --conf spark.executor.instances=1 \
    --conf spark.app.name=spark-hdfs \
    --conf spark.kubernetes.container.image=spark:latest \
    --conf spark.kubernetes.kerberos.tokenSecret.name=<SECRET_TOKEN_NAME> \
    --conf spark.kubernetes.kerberos.tokenSecret.itemKey=<SECRET_ITEM_KEY> \
    --conf spark.kubernetes.hadoop.configMapName=<HCONF_CONFIG_MAP_NAME> \
    --conf spark.kubernetes.kerberos.krb5.configMapName=<KRB_CONFIG_MAP_NAME> \
    local:///opt/spark/examples/jars/spark-examples_<VERSION>.jar \
    <HDFS_FILE_LOCATION>
```
# Event Logging

If your applications are using event logging, the directory where the event logs go
(`spark.eventLog.dir`) should be manually created with proper permissions. To secure the log files,
the directory permissions should be set to `drwxrwxrwxt`. The owner and group of the directory
should correspond to the super user who is running the Spark History Server.

This will allow all users to write to the directory but will prevent unprivileged users from
reading, removing or renaming a file unless they own it. The event log files will be created by
Spark with permissions such that only the user and group have read and write access.

# Persisting driver logs in client mode

If your applications persist driver logs in client mode by enabling `spark.driver.log.persistToDfs.enabled`,
the directory where the driver logs go (`spark.driver.log.dfsDir`) should be manually created with proper
permissions. To secure the log files, the directory permissions should be set to `drwxrwxrwxt`. The owner
and group of the directory should correspond to the super user who is running the Spark History Server.

This will allow all users to write to the directory but will prevent unprivileged users from
reading, removing or renaming a file unless they own it. The driver log files will be created by
Spark with permissions such that only the user and group have read and write access.
",2014-03-07 00:27:50,"['Generic policy', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline']",not_mentioned,4.3,8,3,-1,0,0,10,10,0,0,10,10,10,0,0,10,-1,0,0,4.0,72.0,10.0,0.0,1.0,0.0,0.0,1.0,413.0,283.0,233.0,8.0
apache/submarine,https://github.com/apache/submarine,1051,1867,2019-09-19,64,1065,1125,697,697,252,59,https://api.github.com/repos/apache/.github/contents/.github/SECURITY.md,"# Security Policy

This is a project of the [Apache Software Foundation](https://apache.org) and follows the ASF [vulnerability handling process](https://apache.org/security/#vulnerability-handling).

## Reporting a Vulnerability

To report a new vulnerability you have discovered please follow the [ASF vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability).
",2021-07-19 11:31:44,"['Generic policy', 'Reporting mechanism']",email,4.7,6,3,10,0,2,10,10,10,0,10,0,10,-1,0,10,-1,0,0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,31.0,19.0,17.0,0.0
apache/superset,https://github.com/apache/superset,16029,3388,2015-07-21,424,16967,27726,62493,62493,13753,1514,https://api.github.com/repos/apache/superset/contents/.github/SECURITY.md,"# Security Policy

This is a project of the [Apache Software Foundation](https://apache.org) and follows the
ASF [vulnerability handling process](https://apache.org/security/#vulnerability-handling).

## Reporting Vulnerabilities

**⚠️ Please do not file GitHub issues for security vulnerabilities as they are public! ⚠️**


Apache Software Foundation takes a rigorous standpoint in annihilating the security issues
in its software projects. Apache Superset is highly sensitive and forthcoming to issues
pertaining to its features and functionality.
If you have any concern or believe you have found a vulnerability in Apache Superset,
please get in touch with the Apache Superset Security Team privately at
e-mail address [security@superset.apache.org](mailto:security@superset.apache.org).

More details can be found on the ASF website at
[ASF vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability)

We kindly ask you to include the following information in your report:
- Apache Superset version that you are using
- A sanitized copy of your `superset_config.py` file or any config overrides
- Detailed steps to reproduce the vulnerability

Note that Apache Superset is not responsible for any third-party dependencies that may
have security issues. Any vulnerabilities found in third-party dependencies should be
reported to the maintainers of those projects. Results from security scans of Apache
Superset dependencies found on its official Docker image can be remediated at release time
by extending the image itself.

**Your responsible disclosure and collaboration are invaluable.**

## Extra Information

 - [Apache Superset documentation](https://superset.apache.org/docs/security)
 - [Common Vulnerabilities and Exposures by release](https://superset.apache.org/docs/security/cves)
 - [How Security Vulnerabilities are Reported & Handled in Apache Superset (Blog)](https://preset.io/blog/how-security-vulnerabilities-are-reported-and-handled-in-apache-superset/)
",2023-07-26 13:21:26,"['Generic policy', 'Reporting mechanism', 'User guideline']",email,7.1,10,8,10,0,10,10,10,10,0,10,10,10,1,10,10,-1,0,0,80.0,72.0,27.0,47.0,19.0,0.0,0.0,1.0,2805.0,2029.0,2363.0,28.0
apache/systemds,https://github.com/apache/systemds,8733,3276,2015-11-10,168,2132,2132,1033,1033,467,89,https://api.github.com/repos/apache/.github/contents/.github/SECURITY.md,"# Security Policy

This is a project of the [Apache Software Foundation](https://apache.org) and follows the ASF [vulnerability handling process](https://apache.org/security/#vulnerability-handling).

## Reporting a Vulnerability

To report a new vulnerability you have discovered please follow the [ASF vulnerability reporting process](https://apache.org/security/#reporting-a-vulnerability).
",2021-07-19 11:31:44,"['Generic policy', 'Reporting mechanism']",external,4.6,3,3,10,2,0,10,10,10,0,10,10,-1,0,0,10,-1,0,0,,,,,,,,,,,,
appwrite/sdk-for-cli,https://github.com/appwrite/sdk-for-cli,177,1498,2020-09-22,12,58,146,91,91,27,17,https://api.github.com/repos/appwrite/.github/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

For security issues, kindly email us at security@appwrite.io instead of posting a public issue in GitHub.
",2022-11-08 16:23:04,"['Generic policy', 'Reporting mechanism']",email,5.4,10,1,4,0,10,10,10,0,0,10,10,10,0,0,9,0,0,10,0.0,10.0,0.0,2.0,0.0,0.0,0.0,1.0,38.0,90.0,127.0,0.0
apragacz/django-rest-registration,https://github.com/apragacz/django-rest-registration,688,3229,2015-12-27,23,185,308,542,542,84,17,https://api.github.com/repos/apragacz/django-rest-registration/contents/SECURITY.md,"# Security Policy

## Supported Versions

These versions of Django-REST-Registration are
currently being supported with security updates:

| Version | Supported          |
| ------- | ------------------ |
| 0.9.x   | :white_check_mark: |
| 0.8.x   | :white_check_mark: |
| < 0.8.0 | :x:                |

## Reporting a Vulnerability

If you think that you found a security issue (especially one with high severity),
please do not share it publicly; instead do one of these:

*   [Report a security vulnerability](https://github.com/apragacz/django-rest-registration/security/advisories/new)
    via GitHub (preferred)
*   Write a [direct e-mail](mailto:apragacz@o2.pl) to the author.
",2020-05-03 11:00:38,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_advisory,5.9,10,3,10,0,0,10,10,10,0,10,10,-1,0,10,10,0,9,0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,0.0,224.0,130.0,351.0,3.0
archivebox/archivebox,https://github.com/archivebox/archivebox,4403,2734,2017-05-05,119,422,1364,21963,21963,1166,173,https://api.github.com/repos/archivebox/archivebox/contents/.github/SECURITY.md,"# Security Policy

---

## Security Information

Please see this wiki page for important notices about ArchiveBox security, publishing your archives securely, and the dangers of executing archived JS:

https://github.com/ArchiveBox/ArchiveBox/wiki/Security-Overview

Also see this section of the README about important caveats when running ArchiveBox:

https://github.com/ArchiveBox/ArchiveBox?tab=readme-ov-file#caveats

You can also read these pages for more information about ArchiveBox's internals, development environment, DB schema, and more:

- https://github.com/ArchiveBox/ArchiveBox#archive-layout
- https://github.com/ArchiveBox/ArchiveBox#archivebox-development
- https://github.com/ArchiveBox/ArchiveBox/wiki/Upgrading-or-Merging-Archives
- https://github.com/ArchiveBox/ArchiveBox/wiki/Troubleshooting

---

## Reporting a Vulnerability

We use Github's built-in [Private Reporting](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing-information-about-vulnerabilities/privately-reporting-a-security-vulnerability) feature to accept vulnerability reports.

1. Go to the Security tab on our Github repo: https://github.com/ArchiveBox/ArchiveBox/security

2. Click the [""Report a Vulnerability""](https://github.com/ArchiveBox/ArchiveBox/security/advisories/new) button

3. Fill out the form to submit the details of the report and it will be securely sent to the maintainers

You can also contact the maintainers via our public [Zulip Chat Server zulip.archivebox.io](https://zulip.archivebox.io) or [Twitter DMs @ArchiveBoxApp](https://twitter.com/ArchiveBoxApp).
",2024-10-05 11:04:42,"['Generic policy', 'User guideline', 'Reporting mechanism']",advisory,6.1,10,1,0,0,0,10,10,10,0,10,10,10,0,7,10,-1,0,10,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0,8.0,3.0,0.0
archivy/archivy,https://github.com/archivy/archivy,561,1608,2020-06-04,23,157,309,3208,3208,114,49,https://api.github.com/repos/archivy/archivy/contents/SECURITY.md,"If you think you've found a security issue in Archivy, please contact halcyon@disroot.org before disclosing anything publicly.
",2021-12-23 09:49:30,[],email,3.9,10,0,0,0,0,10,10,10,0,10,0,10,0,0,9,0,0,2,9.0,9.0,2.0,1.0,7.0,0.0,0.0,0.0,211.0,413.0,896.0,3.0
arjunsharda/searchor,https://github.com/arjunsharda/searchor,565,794,2022-08-27,43,122,169,81,81,34,5,https://api.github.com/repos/arjunsharda/searchor/contents/SECURITY.md,"# Security Policy

If you have encountered a security flaw in ANY of Searchor's versions that have not been reported in the ""Security"" section of this repository, please report it privately via email: sharda.aj17@gmail.com or at github.com/ArjunSharda/Searchor/security/advisories/new and keep the vulnerability confidential. If your advisory is accepted, you will be credited.

Please note that Searchor is a open source project and allow some time for a patch and workaround. We appreciate your efforts for helping make Searchor a secure library in Python.
",2023-09-24 14:55:06,['Reporting mechanism'],email_advisory,7.2,10,8,8,0,0,10,10,10,0,10,6,-1,1,8,10,-1,9,10,2.0,20.0,3.0,1.0,0.0,0.0,0.0,1.0,289.0,285.0,372.0,1.0
astropy/astropy,https://github.com/astropy/astropy,38578,4850,2011-07-21,433,11081,17256,4422,4422,1771,141,https://api.github.com/repos/astropy/astropy/contents/SECURITY.md,"# Security Policy

## Supported Versions

The table below indicates which versions of `astropy` are
currently being supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| 7.0.x (main)   | :white_check_mark: |
| 6.1.x   | :white_check_mark: |
| < 6.1   | :x:                |

## Reporting a Vulnerability

[GitHub private security vulnerability reporting](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)
should be enabled for `astropy`. But if that does not work for whatever reason, please report to the
[@astropy/security-team](https://github.com/orgs/astropy/teams/security-team) that is also listed on the [Astropy Team listing](https://www.astropy.org/team).

We will respond as soon as we are able. If vulnerability is accepted, we will work on a hotfix.
The timing depends on the available resources and the severity/risk of the vulnerability.
If a vulnerability is declined, we will take no further action as far as code is concerned. Either way, we will communicate back to you.

Thank you for your help!
",2023-08-21 13:56:05,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_advisory,6.5,10,8,10,0,7,10,0,10,0,10,10,-1,6,7,10,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0,10.0,21.0,0.0
aws/sagemaker-python-sdk,https://github.com/aws/sagemaker-python-sdk,3869,2542,2017-11-14,433,3210,4703,2101,2101,1137,138,https://api.github.com/repos/aws/.github/contents/SECURITY.md,"## Reporting Security Issues

Amazon Web Services (AWS) is dedicated to the responsible disclosure of security vulnerabilities.  
  
We kindly ask that you **do not** open a public GitHub issue to report security concerns.  
  
Instead, please submit the issue to the AWS Vulnerability Disclosure Program via [HackerOne](https://hackerone.com/aws_vdp) or send your report via [email](mailto:aws-security@amazon.com).  
  
For more details, visit the [AWS Vulnerability Reporting Page](http://aws.amazon.com/security/vulnerability-reporting/).  

Thank you in advance for collaborating with us to help protect our customers.
",2019-05-23 23:53:18,['Reporting mechanism'],email_external,6.9,5,8,10,0,6,10,10,10,0,10,10,-1,1,10,10,-1,9,0,2.0,38.0,4.0,4.0,3.0,0.0,0.0,1.0,532.0,824.0,1056.0,10.0
awslabs/autogluon,https://github.com/awslabs/autogluon,2350,1919,2019-07-29,115,2658,4105,7976,7976,925,97,https://api.github.com/repos/awslabs/autogluon/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version       | Supported          |
| ------------- | ------------------ |
| 1.1.1         | :white_check_mark: |
| < 1.1.1       | :x:                |

## How we do security


As much as possible, AutoGluon relies on automated tools to do security scanning. In particular, we support:

1. Dependency Analysis: Using Dependabot
2. Docker Scanning: Using Snyk
3. Code Analysis: Using CodeGuru


## Reporting a Vulnerability

Report any security vulnerabilities to `autogluon-security@amazon.com`. This email directly links to the Autogluon security maintenance team. Once the security vulnerability is confirmed, we will work privately on a patch, aiming to produce a dedicated bugfix release as swiftly as complexity allows.",2024-06-27 16:57:09,"['Generic policy', 'Scope of practice', 'User guideline', 'Reporting mechanism']",email,6.4,10,0,10,0,10,10,10,0,0,10,10,10,0,10,10,-1,0,10,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,15.0,33.0,16.0,0.0
awslabs/sockeye,https://github.com/awslabs/sockeye,836,2700,2017-06-08,52,798,1109,1211,1211,323,50,https://api.github.com/repos/awslabs/.github/contents/SECURITY.md,"## Reporting Security Issues

Amazon Web Services (AWS) is dedicated to the responsible disclosure of security vulnerabilities.  
  
We kindly ask that you **do not** open a public GitHub issue to report security concerns.  
  
Instead, please submit the issue to the AWS Vulnerability Disclosure Program via [HackerOne](https://hackerone.com/aws_vdp) or send your report via [email](mailto:aws-security@amazon.com).  
  
For more details, visit the [AWS Vulnerability Reporting Page](http://aws.amazon.com/security/vulnerability-reporting/).  

Thank you in advance for collaborating with us to help protect our customers.
",2019-05-23 23:53:18,['Reporting mechanism'],email,5.1,10,8,2,0,10,10,10,0,0,10,0,-1,0,0,10,-1,0,7,16.0,146.0,17.0,2.0,1.0,0.0,0.0,12.0,497.0,1484.0,2990.0,6.0
azure/azure-cli,https://github.com/azure/azure-cli,12220,3191,2016-02-04,409,12682,29828,4008,4008,2982,177,https://api.github.com/repos/azure/azure-cli/contents/SECURITY.md,"<!-- BEGIN MICROSOFT SECURITY.MD V0.0.7 BLOCK -->

## Security

Microsoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).

If you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/opensource/security/definition), please report it to us as described below.

## Reporting Security Issues

**Please do not report security vulnerabilities through public GitHub issues.**

Instead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/opensource/security/create-report).

If you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/opensource/security/pgpkey).

You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://aka.ms/opensource/security/msrc). 

Please include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:

  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)
  * Full paths of source file(s) related to the manifestation of the issue
  * The location of the affected source code (tag/branch/commit or direct URL)
  * Any special configuration required to reproduce the issue
  * Step-by-step instructions to reproduce the issue
  * Proof-of-concept or exploit code (if possible)
  * Impact of the issue, including how an attacker might exploit the issue

This information will help us triage your report more quickly.

If you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/opensource/security/bounty) page for more details about our active programs.

## Preferred Languages

We prefer all communications to be in English.

## Policy

Microsoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/opensource/security/cvd).

<!-- END MICROSOFT SECURITY.MD BLOCK -->
",2022-05-19 01:13:23,"['Generic policy', 'Reporting mechanism', 'Additional information', 'User guideline']",email_external,4.8,0,1,9,0,10,10,10,10,0,10,10,-1,0,0,10,0,0,4,,,,,,,,,,,,
benoitc/gunicorn,https://github.com/benoitc/gunicorn,3178,5447,2009-11-30,346,1136,3262,9823,9823,1752,225,https://api.github.com/repos/benoitc/gunicorn/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

**Please note that public Github issues are open for everyone to see!**

If you believe you are found a problem in Gunicorn software, examples or documentation, we encourage you to send your
 report privately via [email](mailto:security@gunicorn.org?subject=Security%20issue%20in%20Gunicorn), or via Github
 using the *Report a vulnerability* button in the [Security](https://github.com/benoitc/gunicorn/security) section.

## Supported Releases

At this time, **only the latest release** receives any security attention whatsoever.

Please target reports against :white_check_mark: or current master. Please understand that :x: will
 not receive further security attention.

| Version | Status          |
| ------- | ------------------ |
| 23.0.0  | :white_check_mark: |
| 22.0.0  | :x: |
| 21.2.0  | :x: |
| 20.0.0  | :x: |
| < 20.0  | :x: |

## Python Versions

Gunicorn runs on Python 3.7+, we *highly recommend* the latest release of a 
[supported series](https://devguide.python.org/versions/) and will not prioritize issues exclusively 
affecting in EoL environments.
",2023-12-15 12:33:31,"['Generic policy', 'Reporting mechanism', 'Scope of practice', 'User guideline']",email_advisory,7.6,10,3,6,0,6,10,10,10,10,9,10,-1,0,0,10,-1,10,10,0.0,6.0,0.0,0.0,1.0,0.0,0.0,0.0,214.0,130.0,40.0,12.0
bentoml/bentoml,https://github.com/bentoml/bentoml,3331,2038,2019-04-02,203,3709,4781,7109,7109,790,78,https://api.github.com/repos/bentoml/bentoml/contents/SECURITY.md,"# Security Policy

## Supported Versions

BentoML is currently under active development and releases a new version
every 2-3 weeks. We always recommend users to move to a newer version
when it became available, and we only provide security updates in the
latest version.

If you are using an older version of BentoML and would like to receive
security patches, let us know via
[BentoML Slack Channel](https://join.slack.bentoml.org)
or [BentoML Discussions](https://github.com/bentoml/BentoML/discussions).


## Reporting a Vulnerability

To report a vulnerability, please do not share it publicly on GitHub
nor the community slack channel. Instead, contact the BentoML team
directly via email first: contact@bentoml.ai
",2020-09-20 21:45:37,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,7.2,10,6,10,0,8,10,10,10,0,10,10,10,0,9,10,-1,0,7,23.0,168.0,15.0,35.0,6.0,0.0,0.0,4.0,1210.0,837.0,748.0,7.0
berriai/litellm,https://github.com/berriai/litellm,18205,461,2023-07-27,324,2890,6332,13356,13356,1567,72,https://api.github.com/repos/berriai/litellm/contents/security.md,"# Data Privacy and Security

## Security Measures

### LiteLLM Github

- All commits run through Github's CodeQL checking

### Self-hosted Instances LiteLLM

- **No data or telemetry is stored on LiteLLM Servers when you self host**
- For installation and configuration, see: [Self-hosting guided](https://docs.litellm.ai/docs/proxy/deploy)
- **Telemetry** We run no telemetry when you self host LiteLLM

### LiteLLM Cloud

- We encrypt all data stored using your `LITELLM_MASTER_KEY` and in transit using TLS.
- Our database and application run on GCP, AWS infrastructure, partly managed by NeonDB.
    - US data region: Northern California (AWS/GCP `us-west-1`) & Virginia (AWS `us-east-1`)
    - EU data region Germany/Frankfurt (AWS/GCP `eu-central-1`)
- All users have access to SSO (Single Sign-On) through OAuth 2.0 with Google, Okta, Microsoft, KeyCloak. 
- Audit Logs with retention policy
- Control Allowed IP Addresses that can access your Cloud LiteLLM Instance

For security inquiries, please contact us at support@berri.ai


For security inquiries, please contact us at support@berri.ai

#### Supported data regions for LiteLLM Cloud

LiteLLM supports the following data regions:

- US, Northern California (AWS/GCP `us-west-1`)
- Europe, Frankfurt, Germany (AWS/GCP `eu-central-1`)

All data, user accounts, and infrastructure are completely separated between these two regions

### Security Vulnerability Reporting Guidelines

We value the security community's role in protecting our systems and users. To report a security vulnerability:

- Email support@berri.ai with details
- Include steps to reproduce the issue
- Provide any relevant additional information

We'll review all reports promptly. Note that we don't currently offer a bug bounty program.
",2024-09-02 14:41:29,"['Generic policy', 'Generic policy', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'Reporting mechanism']",email,5.3,10,0,10,0,0,10,10,10,0,9,10,10,2,9,10,0,0,0,12.0,46.0,3.0,5.0,11.0,0.0,0.0,0.0,1567.0,1315.0,1543.0,6.0
borgbackup/borg,https://github.com/borgbackup/borg,8798,3458,2015-05-12,291,4100,8254,11167,11167,742,150,https://api.github.com/repos/borgbackup/borg/contents/SECURITY.md,"# Security Policy

## Supported Versions

These borg releases are currently supported with security updates.

| Version | Supported          |
|---------|--------------------|
| 2.0.x   | :x: (not released) |
| 1.2.x   | :white_check_mark: |
| 1.1.x   | :x:                |
| < 1.1   | :x:                |

## Reporting a Vulnerability

See there:

https://borgbackup.readthedocs.io/en/latest/support.html#security-contact
",2022-01-22 13:36:31,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.4,10,0,10,2,0,10,10,10,0,9,10,-1,0,10,10,8,0,10,0.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,36.0,42.0,29.0,1.0
caronc/apprise,https://github.com/caronc/apprise,900,2530,2017-11-25,74,593,1151,11868,11868,414,68,https://api.github.com/repos/caronc/apprise/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
| ------- | ------------------ |
| 0.9.x   | :white_check_mark: |
| < 0.9.x | :x:                |

## Reporting a Vulnerability

If you find a vunerability, please notify me at lead2gold@gmail.com. If the vunerability
is severe then please just open a ticket at https://github.com/caronc/apprise/issues
",2021-09-20 21:55:59,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.2,10,1,10,0,1,10,10,0,0,10,10,-1,0,10,10,0,0,10,0.0,45.0,85.0,0.0,5.0,0.0,0.0,1.0,126.0,141.0,104.0,2.0
celery/celery,https://github.com/celery/celery,12707,5667,2009-04-24,395,3568,8673,24776,24776,4664,472,https://api.github.com/repos/celery/celery/contents/SECURITY.md,"# Security Policy

## Supported Versions

Use this section to tell people about which versions of your project are
currently being supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| 5.3.x   | :white_check_mark: |
| 5.2.x   | :x:                |
| 5.1.x   | :x: |
| < 5.0   | :x:                |

## Reporting a Vulnerability

Please reach out to auvipy@gmail.com & omer.drow@gmail.com for reporting security concerns via email.
",2021-11-19 05:47:26,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.2,10,3,10,5,6,10,10,10,0,9,10,-1,0,10,10,-1,0,0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,43.0,21.0,7.0,0.0
certifi/python-certifi,https://github.com/certifi/python-certifi,279,4689,2011-12-28,36,170,319,831,831,250,38,https://api.github.com/repos/certifi/python-certifi/contents/SECURITY.md,"# Reporting Security Issues

To report a security issue, please disclose it at [security advisory](https://github.com/certifi/python-certifi/security/advisories/new).

We will respond within 7 working days of your submission. If the issue is confirmed as a vulnerability, we will open a Security Advisory and acknowledge your contributions as part of it. This project follows a 90 day disclosure timeline.

",2023-03-20 21:35:59,['Reporting mechanism'],advisory,7.5,10,3,8,0,6,10,10,10,0,9,10,10,5,0,10,-1,10,10,0.0,4.0,0.0,0.0,1.0,0.0,0.0,0.0,148.0,135.0,118.0,0.0
ckan/ckan,https://github.com/ckan/ckan,26427,4737,2011-11-10,292,4556,8006,4445,4445,1990,196,https://api.github.com/repos/ckan/ckan/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

If you find a potential security vulnerability please email security@ckan.org, rather than creating a public issue on GitHub.

We aim to respond to all valid reports within three working days.


## Supported Versions

Security updates are offered for the **2 most recent** minor CKAN releases. It is critical to always run the latest patch
release for a minor version. To find out the currently supported version and learn more about CKAN releases see here:

    https://docs.ckan.org/en/latest/maintaining/releases.html

Fixed security vulnerabilites are assigned a CVE and registered using [GitHub Security Advisories](https://github.com/ckan/ckan/security/advisories), and also included in the [CHANGELOG.rst](CHANGELOG.rst).

Again, only the latest patch release contains all security patches applied so please ensure your CKAN instance is running on a supported version to avoid exposing your users and your data.
",2019-11-07 21:22:42,"['Generic policy', 'Reporting mechanism', 'Scope of practice']",email,6.6,10,0,10,0,8,10,10,10,0,9,10,-1,0,10,10,-1,0,7,0.0,15.0,6.0,0.0,5.0,0.0,0.0,2.0,78.0,784.0,297.0,0.0
clinical-genomics/scout,https://github.com/clinical-genomics/scout,10483,3672,2014-10-10,30,2276,4885,151,151,46,15,https://api.github.com/repos/clinical-genomics/scout/contents/security.md,"# Security Policy

## Reporting a Vulnerability

Please report suspected security vulnerabilities to `chiara.rasi [at] scilifelab.se` or `daniel.nilsson [at] scilifelab.se`

We warmly welcome all security feedback. We support the main branch and latest release with hot fixes as needed. Should you find a vulnerability for an older version, obviously please also be in touch, and we will see what we can do, especially if it is one that you know to be deployed in production somewhere.
",2022-03-21 13:17:15,"['Generic policy', 'Reporting mechanism']",email,5.9,10,0,10,0,10,10,10,0,0,10,10,10,0,10,4,-1,0,7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,5.0,18.0,0.0
cobbler/cobbler,https://github.com/cobbler/cobbler,9625,4739,2011-11-08,247,2072,3674,2619,2619,654,137,https://api.github.com/repos/cobbler/cobbler/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version   | Supported                 |
| --------- |---------------------------|
| 4.0.X     | Next API breaking Release |
| 3.4.x     | Current Version: 3.4.0    |
| 3.3.x     | Security only             |
| 3.2.x     | EOL                       |
| 3.1.x     | EOL                       |
| 3.0.x     | EOL                       |
| 2.8.x     | EOL                       |
| 2.6.x     | EOL                       |
| 2.4.x     | EOL                       |
| 2.2.x     | EOL                       |
| < 2.x.x   | EOL                       |

Due to the amount of maintainers we have, we can only support the most current version. Old versions won't be actively
maintained.

## Reporting a Vulnerability

If you find a security vulnerability we would love if you could report this to
[cobbler.project@gmail.com](mailto:cobbler.project@gmail.com). This address is under control of @SchoolGuy currently.

Please be aware that since this project is not professionally managed we may have a hard time fixing this by ourselves.
The more details we get, the more likely it is that we can react to it properly.

Since there is no funding for Cobbler, we can't offer you anything but our deepest thanks for finding a security issue.

## Known problems

All open security problems which are publicly known are to be found at:

> https://github.com/cobbler/cobbler/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity

## Remarks

We don't offer a SELinux profile or an Apparmor profile. Also this tool manages your
DHCP and TFTP server. This implicates that Cobbler has a lot of control of your network, thus we would advise you to
protect it as much as possible. However please be aware of the implications when using it. There is code in there to
automatically download and update files on your local filesystem as well as serving files like bootloaders which have
the potential (if compromised) to do a lot of harm.
",2020-08-01 10:33:39,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'History of vulnerability', 'User guideline']",email,6.9,10,6,10,0,10,10,10,0,0,10,10,10,0,10,10,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.0,10.0,3.0,1.0
codecov/codecov-python,https://github.com/codecov/codecov-python,669,3737,2014-08-06,50,185,340,185,185,139,21,https://api.github.com/repos/codecov/.github/contents/SECURITY.md,"# Codecov Responsible Disclosure Policy

Data security is a top priority for Codecov, and Codecov believes that working with skilled security researchers can identify weaknesses in any technology.

If you believe you’ve found a security vulnerability in Codecov’s service, please notify us; we will work with you to resolve the issue promptly.

Even though we don't have a bug bounty program, we will ensure that your findings gets passed along to the security team for remediation if you’ve found a security vulnerability in Codecov’s service.

## Disclosure Policy

- If you believe you’ve discovered a potential vulnerability, please let us know by emailing us at security@codecov.io . We will acknowledge your email within five business days.
- Provide us with a reasonable amount of time to resolve the issue before disclosing it to the public or a third party. We aim to resolve critical issues within five business days of disclosure.
- Make a good faith effort to avoid violating privacy, destroying data, or interrupting or degrading the Codecov service. Please only interact with accounts you own or for which you have explicit permission from the account holder.

## Exclusions

While researching, we’d like you to refrain from:

- Distributed Denial of Service (DDoS)
- Spamming
- Social engineering or phishing of Codecov employees or contractors
- Any attacks against Codecov’s physical property or data centers
- Thank you for helping to keep Codecov and our users safe!

## Changes

We may revise these guidelines from time to time. The most current version of the guidelines will be available at https://codecov.io/security

## Contact

Codecov is always open to feedback, questions, and suggestions. If you would like to talk to us, please feel free to email us at security@codecov.io, and our PGP key is at https://codecov.io/.well-known/security.txt.
",2022-08-18 14:27:11,"['Generic policy', 'Reporting mechanism', 'User guideline', 'User guideline', 'Information on maintainer']",email,5.2,10,0,0,0,8,10,10,10,0,10,0,-1,0,0,10,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,14.0,5.0,7.0,0.0
codingjoe/django-s3file,https://github.com/codingjoe/django-s3file,353,3641,2014-11-10,14,271,307,79,79,16,10,https://api.github.com/repos/codingjoe/django-s3file/contents/SECURITY.md,"# Security Policy

## Security Considerations

The wake of CVE-2022-24840 revealed the importance to document security considerations.
The following attack vectors have been considered during development. Should there be
a possible vector or consideration missing, please contact the maintainers, as described
below.

We use [pre-signed POST URLs](s3-pre-signed-url) to upload files to AWS S3.
[Django's internal signer](django-signing) is used to sign the upload path and validate
it before fetching files from S3.

Please note, that Django's signer uses the `SECRET_KEY`, rotating the key will void all
signatures. Should you rotate the secret key, between a form GET and POST request, the
form will fail. Similarly, Django will expire all sessions if you rotate the key.

[s3-pre-signed-url]: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/s3-presigned-urls.html
[django-signing]: https://docs.djangoproject.com/en/stable/topics/signing/

### Upload of malicious files

AWS S3 supports MIME type detection and content-type enforcement.
You can limit the upload of malicious files via the MIME type [accept][accept].
However, this is not a security measure, and you should always validate files before
processing them.

[accept]: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept

### Request file injection

Though files can always be included in a request, CVE-2022-24840 revealed that we need
to consider people injecting any files that reside on your S3 bucket. However, we do
presign the upload location and validate it before fetching files from S3.

### Path traversal & timing attacks

We fetch files from your S3 bucket. This behavior could be used to brute force valid
file names. We mitigate this by signing the allowed upload path and validating it.
The upload path is unique for each file input and request. Therefore, an attacker can
not escape and access any files but the one uploaded by the attacker.

## Reporting a Vulnerability

NEVER open an issue or discussion to report a vulnerability.

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure.

You may also contact one of the maintainers of the project either via email or Telegram:

* Email: [johannes@maron.family](mailto:johannes@maron.family)
* Telegram: [@codingjoe](https://t.me/codingjoe)
",2022-06-06 10:38:02,"['Generic policy', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'Reporting mechanism']",email_external,6.3,10,0,10,0,2,10,10,10,0,10,9,-1,1,10,10,-1,0,9,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,3.0,1.0,0.0
cog-creators/red-discordbot,https://github.com/cog-creators/red-discordbot,2871,3223,2016-01-02,169,4122,6230,4803,4803,2305,213,https://api.github.com/repos/cog-creators/red-discordbot/contents/SECURITY.md,"# Security Policy

## Supported Versions

The table below explains the current state of our versions. Currently, only version
3.5 and higher are supported and receive security updates. Versions lower than 3.5
are considered End of Life and will not receive any security updates.

| Version       | Branch     | Security Updates   | End of Life        |
|---------------|------------|--------------------|--------------------|
| < 2.0         | master     | :x:                | :white_check_mark: |
| >= 2.0, < 3.0 | develop    | :x:                | :white_check_mark: |
| >= 3.0, < 3.5 | V3/develop | :x:                | :white_check_mark: |
| >= 3.5        | V3/develop | :white_check_mark: | :x:                |


## Reporting a Vulnerability

For reporting vulnerabilities within Red-DiscordBot we make use of GitHub's
private vulnerability reporting feature (More information can be found
[here](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)).
This ensures that all maintainers and key members have access to the reported
vulnerability.

### Opening a Vulnerability Report

To open a vulnerability report please fill out [this form](https://github.com/Cog-Creators/Red-DiscordBot/security/advisories/new)

You will be asked to provide a summary, details and proof of concept for your vulnerability report.
We ask that you fill out this form to the best of your ability, with as many details as possible.
Furthermore, you'll be asked to provide affected products and severity.
These fields are optional and will be filled appropriately by the maintainers if not provided.

### Timeline

We will try to answer your report within 7 days. If you haven't received an answer by then, we suggest you reach
out to us privately. This can best be done via our [Discord server](https://discord.gg/red), and contacting
a member who has the Staff role.
",2022-12-25 14:40:35,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'Reporting mechanism', 'Projects practice']",advisory,6.3,10,8,10,0,7,10,10,0,0,10,10,10,0,10,10,0,0,10,0.0,34.0,15.0,34.0,13.0,43.0,0.0,0.0,992.0,990.0,4668.0,16.0
croatiacontrolltd/asterix,https://github.com/croatiacontrolltd/asterix,510,4194,2013-05-06,17,88,234,169,169,90,28,https://api.github.com/repos/croatiacontrolltd/asterix/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please report security issues to damir dot salantic at gmail dot com
",2021-10-11 09:53:26,"['Generic policy', 'Reporting mechanism']",email,4.0,10,0,5,0,2,6,10,0,0,10,0,-1,0,8,3,-1,0,10,22.0,48.0,5.0,4.0,2.0,0.0,0.0,0.0,978.0,459.0,364.0,5.0
cure53/dompurify,https://github.com/cure53/dompurify,2030,3907,2014-02-17,99,413,999,13907,13907,717,153,https://api.github.com/repos/cure53/dompurify/contents/SECURITY.md,"## Supported Versions

Always the latest release.

## Reporting a Vulnerability

First of all, please immediately contact us via [email](mailto:mario@cure53.de) so we can work on a fix. [PGP key](https://keyserver.ubuntu.com/pks/lookup?op=vindex&search=0xC26C858090F70ADA)

Also, you probably qualify for a bug bounty! The fine folks over at [Fastmail](https://www.fastmail.com/) use DOMPurify for their services and added our library to their bug bounty scope. So, if you find a way to bypass or weaken DOMPurify, please also have a look at their website and the [bug bounty info](https://www.fastmail.com/about/bugbounty/).
",2019-10-10 17:06:46,"['Scope of practice', 'Reporting mechanism']",email_external,6.5,10,0,10,0,5,10,10,10,0,9,10,-1,3,10,10,-1,0,7,0.0,33.0,2.0,7.0,1.0,4.0,0.0,0.0,199.0,460.0,252.0,0.0
dan1hc/fgr,https://github.com/dan1hc/fgr,53,243,2024-02-29,2,15,41,0,0,0,1,https://api.github.com/repos/dan1hc/fgr/contents/SECURITY.md,"# Security Policy

## Supported Versions

Use this section to tell people about which versions of your project are
currently being supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| 0.x     | :white_check_mark: |

## Reporting a Vulnerability

Please use [this link](https://github.com/dan1hc/fgr/security/advisories/new) to report a vulnerability.

Project maintenance will analyze the situation and respond with 24-48 hours, depending on severity.

If vulnerability is confirmed, it will be patched in a time period commensurate with severity.
",2024-03-02 01:00:43,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,6.1,10,6,6,5,0,3,10,10,0,10,0,10,0,8,10,0,9,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0,10.0,21.0,0.0
dask/distributed,https://github.com/dask/distributed,5918,3334,2015-09-13,305,5177,8812,1576,1576,719,57,https://api.github.com/repos/dask/.github/contents/SECURITY.md,"To report a security vulnerability to Dask, please go to https://tidelift.com/security and follow the instructions there.
",2020-08-26 13:42:16,[],external,6.2,10,0,9,0,7,10,10,10,0,10,10,-1,0,0,9,-1,0,10,13.0,209.0,35.0,5.0,0.0,0.0,0.0,0.0,3327.0,2430.0,518.0,52.0
datadog/guarddog,https://github.com/datadog/guarddog,920,868,2022-06-14,23,332,477,602,602,44,18,https://api.github.com/repos/datadog/guarddog/contents/SECURITY.md,"# Security Policy

## Supported Versions

Latest released major version.

## Reporting a Vulnerability

To report a vulnerability, please use GitHub's built-in ""Report a vulnerability"" feature: https://github.com/DataDog/guarddog/security/advisories/new

Your report will be private and only accessible to maintainers. You can expect to hear back within 1 week, on a best effort basis.
",2022-11-29 10:40:57,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,7.6,10,5,0,0,10,10,10,10,0,10,10,10,0,0,10,-1,10,10,0.0,8.0,0.0,34.0,0.0,0.0,0.0,0.0,119.0,129.0,205.0,3.0
datahub-project/datahub,https://github.com/datahub-project/datahub,10578,3268,2015-11-18,419,9529,11730,9852,9852,2904,251,https://api.github.com/repos/datahub-project/datahub/contents/SECURITY.md,"# Reporting Security Issues

If you think you have found a security vulnerability, please send a report to security@datahubproject.io. This address can be used for all of Acryl Data’s open source and commercial products (including but not limited to DataHub and Acryl Data). We can accept only vulnerability reports at this address.

It's not mandatory, but if you'd like to encrypt your message to us; please use our PGP key. The key fingerprint is:

A50B10A86CC21F4B7BE102E170764C95B4FACEBF

The key is available from [keyserver.ubuntu.com](https://keyserver.ubuntu.com/pks/lookup?search=A50B10A86CC21F4B7BE102E170764C95B4FACEBF&fingerprint=on&op=index).

Acryl Data will send you a response indicating the next steps in handling your report. After the initial reply to your report, the security team will keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.

**Important:** We ask you to not disclose the vulnerability before it have been fixed and announced, unless you received a response from the Acryl Data security team that you can do so.

## Security announcements

We maintain [Security Advisories](https://github.com/datahub-project/datahub/security/advisories) on the DataHub project GitHub repository,
where we will post a summary, remediation, and mitigation details for any patch containing security fixes.
",2022-09-28 03:16:07,"['Reporting mechanism', 'History of vulnerability']",email,5.9,3,0,10,0,10,10,10,10,0,10,10,10,0,10,10,-1,0,0,0.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,17.0,24.0,31.0,5.0
dbt-labs/dbt-core,https://github.com/dbt-labs/dbt-core,6902,3156,2016-03-10,288,4860,10362,9841,9841,1621,139,https://api.github.com/repos/dbt-labs/dbt-core/contents/SECURITY.md,"[About dbt Core versions](https://docs.getdbt.com/docs/dbt-versions/core)
",2024-05-13 13:17:40,[],external,6.5,10,8,10,0,9,10,10,10,0,10,10,-1,0,9,9,0,0,4,2.0,98.0,5.0,1.0,0.0,0.0,0.0,0.0,222.0,230.0,267.0,2.0
deepset-ai/haystack,https://github.com/deepset-ai/haystack,3714,1811,2019-11-14,254,4054,7605,17408,17408,1897,141,https://api.github.com/repos/deepset-ai/haystack/contents/SECURITY.md,"# Security Policy

## Report a Vulnerability

If you found a security vulnerability in Haystack, send a message to
[security@deepset.ai](mailto:security@deepset.ai).

In your message, please include:

1. Reproducible steps to trigger the vulnerability.
2. An explanation of what makes you think there is a vulnerability.
3. Any information you may have on active exploitations of the vulnerability (zero-day).

## Vulnerability Response

We'll review your report within 5 business days and we will do a preliminary analysis
to confirm that the vulnerability is plausible. Otherwise, we'll decline the report.

We won't disclose any information you share with us but we'll use it to get the issue
fixed or to coordinate a vendor response, as needed.

We'll keep you updated of the status of the issue.

Our goal is to disclose bugs as soon as possible once a user mitigation is available.
Once we get a good understanding of the vulnerability, we'll set a disclosure date after
consulting the author of the report and Haystack maintainers.
",2022-09-02 10:00:14,"['Generic policy', 'Reporting mechanism', 'Projects practice']",email,6.1,10,8,10,0,10,10,0,10,0,10,10,-1,0,0,10,-1,0,10,13.0,99.0,12.0,21.0,0.0,0.0,0.0,0.0,849.0,618.0,1594.0,7.0
delgan/loguru,https://github.com/delgan/loguru,846,2632,2017-08-15,49,200,1221,19836,19836,697,142,https://api.github.com/repos/delgan/loguru/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

As an open source product, only  the latest major version will be patched for security vulnerabilities. Previous versions of Loguru will likely not be retroactively patched.

## Reporting a Vulnerability

To report a security issue, please email delgan.py@gmail.com with a description of the issue, the steps you took to create the issue, affected versions, and if known, mitigations for the issue.

You can also use [huntr.dev](https://huntr.dev) for security issues that concern Loguru. If you believe you have found a vulnerability, you can diclose it via [this form](https://huntr.dev/bounties/disclose/?target=https://github.com/delgan/loguru).

Once the vulnerability has been confirmed, it will be fixed as soon as possible if feasible. Alternatively, mitigating solutions will be detailed in the documentation: [Security considerations when using Loguru](https://loguru.readthedocs.io/en/stable/resources/recipes.html#security-considerations-when-using-loguru).
",2022-06-19 08:11:12,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_external,6.3,10,3,10,0,1,0,10,10,0,10,10,-1,0,10,10,-1,0,10,5.0,166.0,174.0,0.0,1.0,0.0,0.0,0.0,359.0,263.0,210.0,5.0
diracgrid/dirac,https://github.com/diracgrid/dirac,37010,4955,2011-04-06,86,6185,7654,114,114,176,18,https://api.github.com/repos/diracgrid/dirac/contents/SECURITY.md,"# Security Policy

## Supported DIRAC Versions

| Version | Supported          |
| ------- | ------------------ |
| >= 8.0  | :white_check_mark: |
| < 8.0   | :x:                |

## Reporting a Vulnerability

Please report any suspected vulnerabilities in https://github.com/DIRACGrid/DIRAC/security.
We will respond to you within 2 working days.
",2021-09-23 17:01:04,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,6.2,10,6,10,0,8,10,10,0,0,10,10,10,0,0,10,-1,0,10,0.0,7.0,1.0,0.0,2.0,0.0,0.0,0.0,229.0,328.0,171.0,8.0
django-helpdesk/django-helpdesk,https://github.com/django-helpdesk/django-helpdesk,2610,5130,2010-10-14,122,531,1185,1552,1552,642,93,https://api.github.com/repos/django-helpdesk/django-helpdesk/contents/SECURITY.md,"# Security Policy

## Supported Versions

The following chart shows versions of `django-helpdesk` that are currently receiving bugfixes and security patches.

| Version | Support History    | Last Date of Support             |
| ------- | ------------------ | -------------------------------- |
| 0.3.x   | :white_check_mark: | will be set after release of 0.4 |
| 0.2.x   | :white_check_mark: | 2021-12-31                       |
| < 0.2   | :x:                | 2016-10-31

## Reporting a Vulnerability

If you believe you have discovered a bug impacting security in a supported version, please DO NOT file a Issue / Bug Report for it publicly.

Instead, please send details to <garret@wassiverse.com>. Please be sure to include ""django-helpdesk security issue"" in the subject line for fastest response.

Once reported, we'll be in touch to confirm the issue and work toward releasing a patch as soon as possible.

After a patch has been released, a new release will be tagged and uploaded to PyPi, etc. At that time, details of the issue will be announced publicly.

Users are always highly encouraged to upgrade to the latest bugfix release as soon as possible.
",2021-09-17 11:57:08,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.6,10,6,10,0,10,10,10,0,0,10,10,10,0,0,10,-1,0,0,0.0,25.0,2.0,0.0,0.0,0.0,0.0,0.0,66.0,39.0,49.0,1.0
django/django,https://github.com/django/django,33019,4568,2012-04-28,395,18679,18679,79844,79844,31753,2290,https://api.github.com/repos/django/django/contents/.github/SECURITY.md,"# Django Security Policies

Please see https://www.djangoproject.com/security/.
",2020-05-07 15:25:46,['Generic policy'],external,6.3,10,3,10,0,9,10,10,0,10,10,10,-1,0,0,9,-1,0,10,14.0,99.0,23.0,4.0,119.0,0.0,0.0,0.0,756.0,1163.0,885.0,19.0
dpgaspar/flask-appbuilder,https://github.com/dpgaspar/flask-appbuilder,3981,4007,2013-11-09,172,994,2280,4681,4681,1359,154,https://api.github.com/repos/dpgaspar/flask-appbuilder/contents/.github/SECURITY.md,"# Security Policy

## Reporting Vulnerabilities

**⚠️ Please do not file GitHub issues for security vulnerabilities as they are public! ⚠️**

If you have any concern or believe you have found a vulnerability in Flask-AppBuilder,
please get in touch privately at
e-mail address [danielvazgaspar@gmail.com](mailto:danielvazgaspar@gmail.com).

We kindly ask you to include the following information in your report:
- Output from `pip freeze`
- Detailed steps to reproduce the vulnerability
",2023-10-27 14:00:56,"['Generic policy', 'Reporting mechanism']",email,5.9,10,8,10,0,3,10,10,10,0,10,7,-1,0,8,10,-1,0,0,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,61.0,19.0,24.0,2.0
dwisiswant0/apkleaks,https://github.com/dwisiswant0/apkleaks,175,1614,2020-05-29,10,30,93,4919,4919,489,79,https://api.github.com/repos/dwisiswant0/apkleaks/contents/.github/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please report (suspected) security vulnerabilities to <b>me@dw1.io</b>. You will receive a response from us within 48 hours. If the issue is confirmed, we will release a patch as soon as possible depending on complexity but historically within a few days.

## Comments on this Policy

If you have suggestions on how this process could be improved please submit a pull request.
",2021-03-14 15:24:32,"['Generic policy', 'Reporting mechanism', 'User guideline']",email,4.7,10,0,2,0,1,10,10,0,0,10,2,10,0,7,10,-1,0,10,0.0,3.0,0.0,0.0,0.0,0.0,0.0,1.0,23.0,19.0,43.0,0.0
elastic/apm-agent-python,https://github.com/elastic/apm-agent-python,3697,2665,2017-07-13,196,1416,2145,412,412,219,236,https://api.github.com/repos/elastic/apm-agent-python/contents/SECURITY.md,"# Security Policy

Thanks for your interest in the security of our products.
Our security policy can be found at [https://www.elastic.co/community/security](https://www.elastic.co/community/security).

## Reporting a Vulnerability
Please send security vulnerability reports to security@elastic.co.
",2021-06-28 10:44:52,"['Generic policy', 'Reporting mechanism']",external,7.2,10,5,10,0,10,10,10,10,0,10,10,10,2,0,10,-1,0,10,22.0,48.0,5.0,4.0,2.0,0.0,0.0,0.0,972.0,459.0,364.0,5.0
element-hq/synapse,https://github.com/element-hq/synapse,24316,321,2023-12-13,372,839,17881,1482,1482,182,18,https://api.github.com/repos/element-hq/.github/contents/SECURITY.md,"# Reporting a Vulnerability

**If you've found a security vulnerability in Element software, please report it to security@element.io.**

For more information on our security disclosure policy, visit https://element.io/security/security-disclosure-policy.
",2020-09-08 20:31:18,['Reporting mechanism'],email,6.3,10,3,10,0,8,10,10,10,0,10,10,10,0,0,10,0,0,10,19.0,60.0,86.0,4.0,4.0,6.0,0.0,2.0,1036.0,1012.0,1863.0,7.0
encode/django-rest-framework,https://github.com/encode/django-rest-framework,8827,4990,2011-03-02,387,4759,8682,28354,28354,6839,627,https://api.github.com/repos/encode/django-rest-framework/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Security issues are handled under the supervision of the [Django security team](https://www.djangoproject.com/foundation/teams/#security-team).

 **Please report security issues by emailing security@djangoproject.com**.

 The project maintainers will then work with you to resolve any issues where required, prior to any public disclosure.
",2019-05-29 08:57:07,"['Generic policy', 'Reporting mechanism']",email,6.9,10,6,10,0,9,10,10,10,0,9,10,-1,0,0,10,-1,0,10,1.0,154.0,19.0,1.0,1.0,0.0,0.0,0.0,194.0,257.0,134.0,12.0
encode/httpx,https://github.com/encode/httpx,1482,2035,2019-04-04,214,1624,2489,13211,13211,838,115,https://api.github.com/repos/encode/.github/contents/SECURITY.md,"# Security Policy

If you think you have identified a security issue with an Encode project, **do not open a public issue**.

To responsibly report a security issue, please navigate to the Security tab for the repo and click ""Report a vulnerability.""

![Screenshot of repo security tab showing ""Report a vulnerability"" button](https://github.com/encode/.github/raw/master/img/github-demos-private-vulnerability-reporting.png)

Be sure to include as much detail as necessary in your report. As with reporting normal issues, a minimal reproducible example will help the maintainers address the issue faster.

Thank you.
",2022-10-12 12:43:13,['Reporting mechanism'],advisory,7.4,10,8,10,0,6,10,10,10,10,10,10,-1,0,0,10,-1,0,10,0.0,1.0,0.0,0.0,3.0,0.0,0.0,0.0,41.0,51.0,34.0,0.0
encode/starlette,https://github.com/encode/starlette,1393,2318,2018-06-25,268,1546,2273,10210,10210,930,104,https://api.github.com/repos/encode/.github/contents/SECURITY.md,"# Security Policy

If you think you have identified a security issue with an Encode project, **do not open a public issue**.

To responsibly report a security issue, please navigate to the Security tab for the repo and click ""Report a vulnerability.""

![Screenshot of repo security tab showing ""Report a vulnerability"" button](https://github.com/encode/.github/raw/master/img/github-demos-private-vulnerability-reporting.png)

Be sure to include as much detail as necessary in your report. As with reporting normal issues, a minimal reproducible example will help the maintainers address the issue faster.

Thank you.
",2022-10-12 12:43:13,['Reporting mechanism'],advisory,6.6,10,8,10,0,3,10,10,10,0,10,10,-1,0,0,10,-1,0,10,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,11.0,10.0,5.0,0.0
encode/uvicorn,https://github.com/encode/uvicorn,1308,2708,2017-05-31,179,1385,2071,8504,8504,740,93,https://api.github.com/repos/encode/.github/contents/SECURITY.md,"# Security Policy

If you think you have identified a security issue with an Encode project, **do not open a public issue**.

To responsibly report a security issue, please navigate to the Security tab for the repo and click ""Report a vulnerability.""

![Screenshot of repo security tab showing ""Report a vulnerability"" button](https://github.com/encode/.github/raw/master/img/github-demos-private-vulnerability-reporting.png)

Be sure to include as much detail as necessary in your report. As with reporting normal issues, a minimal reproducible example will help the maintainers address the issue faster.

Thank you.
",2022-10-12 12:43:13,['Reporting mechanism'],advisory,6.7,10,8,9,0,5,10,10,10,0,10,10,-1,0,0,10,-1,0,10,0.0,4.0,1.0,8.0,7.0,0.0,0.0,0.0,79.0,216.0,449.0,9.0
ericsson/codechecker,https://github.com/ericsson/codechecker,6344,3424,2015-06-15,94,2918,4302,2252,2252,377,53,https://api.github.com/repos/ericsson/codechecker/contents/SECURITY.md,"# Security Policy

## Supported Versions

Only the latest release version of _CodeChecker_ is supported by security updates.

| Version            | Supported          |
| ------------------ | ------------------ |
| Latest Release     | :white_check_mark: |
| Earlier Releases   | :x:                |

## Reporting a Vulnerability

If you find a vulnerability in _CodeChecker_, please report it as a security vulnerability on GitHub
https://github.com/Ericsson/codechecker/security/advisories/new
",2023-08-22 11:56:25,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,6.4,10,1,4,0,7,10,10,10,0,10,10,10,0,0,10,-1,10,0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,28.0,62.0,50.0,1.0
esphome/esphome,https://github.com/esphome/esphome,7718,2398,2018-04-06,473,6950,7217,8457,8457,3620,171,https://api.github.com/repos/esphome/.github/contents/SECURITY.md,"# Security Policy

If you have found a vulnerability in ESPHome, please be sure to [responsibly disclose](https://en.wikipedia.org/wiki/Coordinated_vulnerability_disclosure)
it to us by [reporting a vulnerability using GitHub’s Security Advisory](https://github.com/esphome/esphome/security/advisories/new).

**DO NOT MAKE A PUBLIC ISSUE FOR SECURITY VULNERABILITIES!**

For the sake of the security of our users, please 🙏 do not make vulnerabilities public without notifying us and 
giving us at least 90 days to release a fixed version. We will do our best to respond to your report within 
7 days and also to keep you informed of the progress of our efforts to resolve the issue, 
but understand that ESPHome, like many open source projects, is relying heavily on 
volunteers that aren’t full-time resources. We may not be able to respond as quickly as you 
would like due to other responsibilities.

## SUPPORTED VERSIONS

We only accept reports against the latest stable & official versions of ESPHome or any versions 
beyond that are currently in development or beta test. 
The latest version can be found on our [GitHub releases page](https://github.com/esphome/esphome/releases).

We do not accept reports against forks of ESPHome.

## PUBLIC DISCLOSURE & CVE ASSIGNMENT

We will publish GitHub Security Advisories and through those, will also request CVEs, 
for valid vulnerabilities that meet the following criteria:

- The vulnerability is in ESPHome itself, not any third-party library or external component.
- The vulnerability is not already known to us.
- The vulnerability is not already known to the public.
- CVEs will only be requested for vulnerabilities with a severity of medium or higher.

## BOUNTIES
As an open source project, ESPHome cannot offer bounties for security vulnerabilities. 
However, if so desired, we of course will credit the discoverer of a vulnerability.
",2024-04-30 08:51:59,"['Reporting mechanism', 'Scope of practice', 'Projects practice', 'User guideline']",advisory,6.8,10,2,10,0,9,10,10,10,0,9,10,10,0,7,10,-1,0,6,5.0,123.0,7.0,0.0,0.0,0.0,0.0,0.0,1850.0,386.0,68.0,2.0
ethyca/fides,https://github.com/ethyca/fides,2619,1363,2021-02-04,60,3261,5364,359,359,72,22,https://api.github.com/repos/ethyca/fides/contents/SECURITY.md,"# Reporting a Vulnerability

If you believe you’ve discovered a potential vulnerability, please let us know by emailing us at security@ethyca.com.

Although Ethyca does not currently operate a bug bounty program, we welcome the submission of vulnerability reports and aim to acknowlege your email within one week.
",2022-11-08 16:22:11,['Reporting mechanism'],email,6.4,10,0,10,0,10,10,10,10,0,10,10,10,0,10,10,-1,0,0,2.0,142.0,7.0,1.0,0.0,0.0,0.0,0.0,237.0,680.0,315.0,2.0
eventlet/eventlet,https://github.com/eventlet/eventlet,2547,4340,2012-12-11,140,437,982,1245,1245,324,63,https://api.github.com/repos/eventlet/eventlet/contents/SECURITY.md,"# Security Policy

## Supported Versions

master branch and latest release get priority support. You should expect all known problems fixed in master.

All other released versions receive security updates per request.
If you use some old version and can not upgrade for any or no reason, ask for security update release, most likely you will get it.

## Reporting a Vulnerability

Contact current maintainers. At 2021-03: temotor@gmail.com or https://t.me/temotor
If that doesn't work, open Github issue just asking for private communication channel.

This is volunteer maintained project, all issues are processed on best effort basis, no deadlines promised. Of course, security vulnerabilities get priority over regular issues.

You can expect fame in history or maybe you prefer anonymity - say what you prefer.

Thank you for responsible handling of security problems. Your attention and effort are appreciated.
",2021-03-31 20:44:04,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.2,10,8,10,0,10,10,10,0,0,9,6,10,0,0,10,-1,0,10,2.0,38.0,4.0,4.0,3.0,0.0,0.0,1.0,532.0,824.0,1056.0,10.0
executablebooks/markdown-it-py,https://github.com/executablebooks/markdown-it-py,320,1679,2020-03-25,27,240,323,720,720,67,22,https://api.github.com/repos/executablebooks/markdown-it-py/contents/SECURITY.md,"# Security Policy

## Supported Versions

We generally only support the latest major release,
although critical bug fixes can be released for older versions.

## Reporting a Vulnerability

To report a security issue, please email <executablebooks@gmail.com> with a description of the issue,
the steps you took to create the issue, affected versions, and, if known, mitigations for the issue.
Our team will respond within 3 working days of your email.
If the issue is confirmed as a vulnerability, we will open a Security Advisory.
This project follows a 90 day disclosure timeline.
",2023-02-22 05:32:13,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.1,10,8,4,0,2,10,10,10,10,10,0,-1,0,0,10,-1,0,10,0.0,87.0,1.0,7.0,0.0,0.0,0.0,3.0,132.0,232.0,212.0,2.0
fabric/fabric,https://github.com/fabric/fabric,1605,5661,2009-05-01,17,555,2314,14873,14873,1939,462,https://api.github.com/repos/fabric/fabric/contents/SECURITY.md,"# Security Policy

## Security contact information

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure.
",2024-01-26 22:08:21,"['Generic policy', 'Reporting mechanism']",external,3.7,10,0,-1,0,0,10,-1,0,0,10,0,-1,-1,0,10,-1,-1,10,17.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,503.0,619.0,384.0,4.0
facebook/zstd,https://github.com/facebook/zstd,10801,3567,2015-01-24,311,2721,4135,23636,23636,2099,409,https://api.github.com/repos/facebook/zstd/contents/SECURITY.md,"# Reporting and Fixing Security Issues

Please do not open GitHub issues or pull requests - this makes the problem immediately visible to everyone, including malicious actors. Security issues in this open source project can be safely reported via the Meta Bug Bounty program:

https://www.facebook.com/whitehat

Meta's security team will triage your report and determine whether or not is it eligible for a bounty under our program.

# Receiving Vulnerability Notifications

In the case that a significant security vulnerability is reported to us or discovered by us---without being publicly known---we will, at our discretion, notify high-profile, high-exposure users of Zstandard ahead of our public disclosure of the issue and associated fix.

If you believe your project would benefit from inclusion in this list, please reach out to one of the maintainers.

<!-- Note to maintainers: this list is kept [here](https://fburl.com/wiki/cgc1l62x). -->
",2024-02-13 16:50:55,"['Reporting mechanism', 'Projects practice']",external,7.0,10,1,10,0,3,10,10,10,10,9,10,-1,8,0,10,8,0,10,0.0,2.0,3.0,1.0,7.0,0.0,0.0,0.0,70.0,116.0,313.0,1.0
facebookresearch/parlai,https://github.com/facebookresearch/parlai,4358,2745,2017-04-24,192,3401,4945,10483,10483,2095,283,https://api.github.com/repos/facebookresearch/.github/contents/SECURITY.md,"# Reporting and Fixing Security Issues

Please do not open GitHub issues or pull requests - this makes the problem immediately visible to everyone, including malicious actors. Security issues in this open source project can be safely reported via the Meta Bug Bounty program:

https://www.facebook.com/whitehat

Meta's security team will triage your report and determine whether or not is it eligible for a bounty under our program.
",2020-09-21 22:57:11,['Reporting mechanism'],external,5.1,10,6,2,0,10,10,10,10,0,10,0,-1,0,0,9,-1,0,0,0.0,2.0,0.0,1.0,1.0,0.0,0.0,0.0,42.0,62.0,52.0,0.0
facelessuser/pymdown-extensions,https://github.com/facelessuser/pymdown-extensions,1806,3630,2014-11-21,45,2030,2413,958,958,254,7,https://api.github.com/repos/facelessuser/pymdown-extensions/contents/SECURITY.md,"# Security Vulnerabilities

Our policy for security related issues is to fix related issues within our power on the most recent major release.

## Versioning

Versioning follows [PEP440](https://peps.python.org/pep-0440/): `major.minior.patch`.

Versions | Description
-------- | -----------
Major    | This reserved for releases that introduce breaking features.
Minor    | This reserved for releases that introduce new functionality.
Patch    | This is reserved for releases that only include bug fixes.

Example

```
8.0
8.1
8.1.3
```

## Create Security Vulnerability Report

If you have found a security vulnerability, you can create a draft ""security advisory"" on the GitHub repository,
[instructions here](https://docs.github.com/en/code-security/security-advisories/repository-security-advisories/creating-a-repository-security-advisory).
Such advisories are kept private as the issue is explored.

## Security Vulnerability Workflow

We will strive to acknowledge the report in about two business days.

Reports will be kept private until the issue is properly understood.

If the report is accepted we will notify Tidelift (who we've partnered with), request a CVE from GitHub, and work with
the reporter to find a resolution. Work will be done privately, and the final commit will not mention the security
issue.

The fix, announcement, and release will be negotiated with the reporter.

Afterwards, a release will be made and the vulnerability will be made public as close to each other as possible.
",2023-03-02 22:08:56,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'Projects practice']",advisory,5.4,10,1,10,0,0,6,10,10,0,9,10,10,0,0,10,-1,0,4,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,11.0,24.0,51.0,3.0
fief-dev/fief,https://github.com/fief-dev/fief,1254,1030,2022-01-03,14,121,207,561,561,50,5,https://api.github.com/repos/fief-dev/fief/contents/SECURITY.md,"# Security Policy

## Supported Versions

We provide support for the latest version and recommend to upgrade as soon as a new version is released.

## Reporting a Vulnerability

If you have identified a vulnerability, please report it using [GitHub Security Advisory](https://github.com/fief-dev/fief/security/advisories/new) tool, to ensure confidentiality and security.

We'll review it as soon as possible and publish a fix accordingly.
",2023-01-07 10:02:24,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,5.7,10,0,9,0,0,10,10,10,0,9,10,-1,0,9,10,0,0,10,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,4.0,16.0,119.0,0.0
flask-admin/flask-admin,https://github.com/flask-admin/flask-admin,3326,4608,2012-03-18,308,1117,2557,5785,5785,1571,154,https://api.github.com/repos/pallets-eco/.github/contents/SECURITY.md,"# Security Policy

If you believe you have identified a security issue with a Pallets-Eco project,
**do not open a public issue**. To responsibly report a security issue, use
GitHub's [security advisory system][gh-docs]. From the project's repository,
click ""Security"" at the top, then click ""Advisories"" at the left, then click the
green ""New draft security advisory"" button. Alternatively, you may email
[security@palletsprojects.com](mailto:security@palletsprojects.com), and we will
convert that to a GitHub security advisory.

Be sure to include as much detail as necessary in your report. As with reporting
normal issues, a minimal reproducible example will help the maintainers address
the issue faster. Information about why the issue is a security issue is also
helpful. If you are able, you may also provide a fix for the issue.

A maintainer will reply acknowledging the report and how to continue. We will
obtain a CVE id as well, please do not do this on your own. We will work with
you to attempt to understand the issue and decide on its validity. Maintainers
are volunteers working in their free time, and therefore cannot guarantee any
specific timeline. Please be patient during this process.

The current feature release will receive security fixes. Fixes to older versions
may be considered based on usage information and severity, but are not
guaranteed. After fixing an issue, we will make a new release.

[gh-docs]: https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/creating-a-repository-security-advisory
",2024-02-09 20:30:27,['Generic policy'],email_advisory,6.6,10,0,10,0,3,10,10,10,0,10,10,10,6,0,9,10,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,28.0,10.0,1.0,0.0
fonttools/fonttools,https://github.com/fonttools/fonttools,12013,4115,2013-07-24,121,1887,3548,4332,4332,458,117,https://api.github.com/repos/fonttools/fonttools/contents/SECURITY.md,"# Security Policy

If you have discovered a security vulnerability in this project, please report it
privately. **Do not disclose it as a public issue.** This gives us time to work with you
to fix the issue before public exposure, reducing the chance that the exploit will be
used before a patch is released.

You may submit the report in the following ways:

- send an email to cosimo@anthrotype.com, behdad@behdad.org and fonttools-admin@googlegroups.com; and/or
- send us a [private vulnerability report](https://github.com/fonttools/fonttools/security/advisories/new)

Please provide the following information in your report:

- A description of the vulnerability and its impact
- How to reproduce the issue

Please allow us 90 days to work on a fix before public disclosure.
",2023-10-03 10:47:25,['Reporting mechanism'],email_advisory,6.5,10,3,8,0,6,10,10,10,0,10,10,10,0,0,10,-1,0,10,5.0,53.0,16.0,0.0,2.0,0.0,0.0,1.0,436.0,391.0,509.0,12.0
fortra/impacket,https://github.com/fortra/impacket,4040,3485,2015-04-15,188,867,1828,13480,13480,3567,374,https://api.github.com/repos/fortra/impacket/contents/SECURITY.md,"Security Policy
===============

Although this initiative is not meant to be used in productive environments,
if you consider that you have identified an issue that might affect the
security of its users, or you understand that the tool is being abused,
you can contact us at https://www.coresecurity.com/about/contact.
",2021-06-11 14:25:16,[],external,4.8,10,3,7,0,4,10,10,0,0,9,10,-1,0,0,9,0,0,9,0.0,3.0,0.0,0.0,0.0,0.0,0.0,1.0,23.0,19.0,43.0,0.0
freetakteam/freetakserver,https://github.com/freetakteam/freetakserver,1917,1728,2020-02-05,36,190,703,674,674,170,60,https://api.github.com/repos/freetakteam/freetakserver/contents/SECURITY.md,"# Security Policy

## Supported Versions

FTS is currently supporting those versions with security updates.

| Version | Supported          |
| ------- | ------------------ |
| >1.8.x  | :x:                |
| 1.9.x   | :white_check_mark: |
| < 2.X   | :white_check_mark: |

## Reporting a Vulnerability

please report a vulnerability as an issue, our team will evaluate it and address in the proper time
",2023-01-06 21:50:36,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",issue,6.0,10,0,8,0,2,10,10,10,0,10,10,10,0,9,4,-1,0,8,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,23.0,99.0,1.0
froggo8311/phoenix,https://github.com/froggo8311/phoenix,102,930,2022-04-13,1,1,1,2,2,0,1,https://api.github.com/repos/froggo8311/phoenix/contents/SECURITY.md,"# Security Policy

All security updates will apply to the latest version of Phoenix webserver.

/*
## Supported Versions

Use this section to tell people about which versions of your project are
currently being supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| 5.1.x   | :white_check_mark: |
| 5.0.x   | :x:                |
| 4.0.x   | :white_check_mark: |
| < 4.0   | :x:                |
*/
## Reporting a Vulnerability
/*
Use this section to tell people how to report a vulnerability.

Tell them where to go, how often they can expect to get an update on a
reported vulnerability, what to expect if the vulnerability is accepted or
declined, etc.
*/

If you encounter any vulnerabilities, please create a vulnerability report in the issues tab.
",2022-11-03 16:46:45,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",issue,4.4,5,0,0,0,0,0,10,10,0,10,0,-1,4,10,4,0,9,6,6.0,75.0,61.0,2.0,13.0,0.0,0.0,7.0,1667.0,1006.0,4618.0,17.0
gallopsled/pwntools,https://github.com/gallopsled/pwntools,4437,4201,2013-04-29,237,1422,2478,12074,12074,1709,288,https://api.github.com/repos/gallopsled/pwntools/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version       | Supported          |
| ------------- | ------------------ |
| latest dev    | :white_check_mark: |
| latest beta   | :white_check_mark: |
| latest stable | :white_check_mark: |
| anything else | :x: |

## Reporting a Vulnerability

The aim of pwntools is exploiting software vulnerabilities, which is an unusual position, but it nevertheless can have its own security issues.
Especially that an attacker (=re-victim) is usually not prepared to be attacked back (by the re-attacker).

The first question to ask yourself is: is this an actual vulnerability?
- can it be triggered by a re-attacker (malicious honeypot pretending to be a vulnerable service)?
- does it impact the attacker (=re-victim)?
- is it serious?
  * *availability: medium* means *at least* exhausting RAM or disk space of the attacker (=re-victim)
  * *confidentiality: medium* means *at least* reading the filesystem of the attacker (=re-victim)
  * *integrity: medium* means *at least* performing uncontrolled actions or data corruption on behalf of the attacker (=re-victim)
  * if crucial for some sophisticated exploit chain, it is always serious
  * `safe_eval` bypasses **are** serious.
  * an example of what was **kind of** serious: [#1732](https://github.com/Gallopsled/pwntools/pull/1732)
- can it be fixed without compromising on Pwntools' usability?

If at least one of the answers is no, then this is NOT a vulnerability, so just file a bug report or feature request, without the weird confidential disclosure dance.

Just e-mail the maintainers.  Arusekk is the one that is currently the most excited to fix vulnerabilities.
Or create a CTF task!  Prove a point the good old hacker way!
",2022-12-29 00:58:19,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,4.6,0,2,10,0,2,10,10,10,0,9,10,10,0,0,10,-1,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,3.0,1.0,0.0
geekan/metagpt,https://github.com/geekan/metagpt,4643,487,2023-06-30,109,867,1533,44643,44643,5320,895,https://api.github.com/repos/geekan/metagpt/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
|---------|--------------------|
 | 0.7.x   | :x:                |
 | 0.6.x   | :x:                |
| < 0.6.x | :x:                |


## Reporting a Vulnerability

If you have any vulnerability reports, please contact alexanderwu@deepwisdom.ai .",2024-03-07 03:10:17,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,3.8,10,0,10,0,10,10,0,0,0,10,10,-1,0,0,10,-1,0,0,3.0,12.0,4.0,0.0,0.0,0.0,0.0,3.0,42.0,114.0,185.0,0.0
geonode/geonode,https://github.com/geonode/geonode,18974,5262,2010-06-03,238,8258,12653,1450,1450,1126,111,https://api.github.com/repos/geonode/geonode/contents/SECURITY.md,"# Security Policy

## Supported Versions

GeoNode versions supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| 4.0.x   | :white_check_mark: |
| < 4.0   | :x:                |

## Reporting a Vulnerability

- **DO NOT** send a security alert on the public mailing list or any other public channel
- **SEND** the report to geonode-psc@lists.osgeo.org and be prapred to collaborate with the GeoNode PSC

Thanks for you support and help!
",2022-11-22 09:18:23,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.5,9,6,10,0,9,10,10,10,0,9,10,-1,0,10,10,-1,0,0,7.0,67.0,24.0,4.0,0.0,0.0,0.0,0.0,630.0,359.0,189.0,7.0
geopython/owslib,https://github.com/geopython/owslib,2315,4673,2012-01-13,118,559,954,388,388,275,27,https://api.github.com/repos/geopython/owslib/contents/SECURITY.md,"# OWSLib Security Policy

## Reporting

Security/vulnerability reports **should not** be submitted through GitHub issues or public discussions, but instead please send your report 
to **geopython-security nospam @ lists.osgeo.org** - (remove the blanks and 'nospam').  

## Supported Versions

The OWSLib developer team will release patches for security vulnerabilities for the following versions:

| Version | Supported          |
| ------- | ------------------ |
| latest stable version | :white_check_mark: |
| previous versions | :x:                |
",2021-08-16 12:51:31,"['Generic policy', 'Reporting mechanism', 'Scope of practice']",email,4.8,10,0,7,0,5,10,10,0,0,10,10,-1,0,0,4,-1,0,9,0.0,3.0,2.0,0.0,0.0,0.0,0.0,0.0,69.0,79.0,96.0,3.0
geopython/pycsw,https://github.com/geopython/pycsw,3261,4797,2011-09-11,48,556,1035,206,206,155,20,https://api.github.com/repos/geopython/pycsw/contents/SECURITY.md,"# pycsw Security Policy

## Reporting

Security/vulnerability reports **should not** be submitted through GitHub issues or public discussions, but instead please send your report 
to **geopython-security nospam @ lists.osgeo.org** - (remove the blanks and 'nospam').  

Please follow the [contributor guidelines](https://github.com/geopython/pycsw/blob/master/CONTRIBUTING.rst#bugs) when submitting a vulnerability report.

## Supported Versions

The pycsw Project Steering Committee (PSC) will release patches for security vulnerabilities for the following versions:

| Version | Supported          |
| ------- | ------------------ |
| 2.6.x   | :white_check_mark: |
| 2.4.x   | :white_check_mark: |
| 2.2.x   | :white_check_mark: |
| 2.0.x   | :white_check_mark: |
| < 2.0   | :x:                |
",2021-08-03 20:19:46,"['Generic policy', 'Reporting mechanism', 'Scope of practice']",email,5.9,10,0,9,0,10,10,10,0,0,10,10,10,0,0,10,-1,0,10,1.0,80.0,25.0,4.0,4.0,0.0,0.0,0.0,254.0,452.0,595.0,3.0
geopython/pywps,https://github.com/geopython/pywps,2236,4508,2012-06-26,44,398,692,176,176,117,21,https://api.github.com/repos/geopython/pywps/contents/SECURITY.md,"# PyWPS Security Policy

## Reporting

Security/vulnerability reports **should not** be submitted through GitHub issues or public discussions, but instead please send your report 
to **geopython-security nospam @ lists.osgeo.org** - (remove the blanks and 'nospam').  

## Supported Versions

The PyWPS Project Steering Committee will release patches for security vulnerabilities for the following versions:

| Version | Supported          |
|---------|--------------------|
| 4.5.x   | :white_check_mark: |
| 4.4.x   | :white_check_mark: |
| < 4.4   | previous versions  |
",2021-08-13 20:09:05,"['Generic policy', 'Reporting mechanism', 'Scope of practice']",email,4.8,10,6,3,0,9,10,10,0,0,10,0,-1,0,0,4,-1,0,10,2.0,12.0,1.0,0.0,8.0,0.0,0.0,0.0,185.0,63.0,99.0,3.0
gerapy/gerapy,https://github.com/gerapy/gerapy,631,2678,2017-06-30,10,100,314,3345,3345,643,125,https://api.github.com/repos/gerapy/gerapy/contents/SECURITY.md,"# Security Policy

## Supported Versions

Use this section to tell people about which versions of your project are
currently being supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| 0.9.8   | Fixed issue of remote executing, https://github.com/Gerapy/Gerapy/issues/219 |

## Reporting a Vulnerability

Please open an issue or send mail to `cqc@cuiqingcai.com`, thanks.
",2021-12-26 10:58:35,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_issue,5.2,10,0,8,0,4,10,10,10,0,10,0,10,2,9,10,-1,0,0,0.0,6.0,9.0,0.0,1.0,0.0,0.0,0.0,34.0,62.0,12.0,0.0
getsentry/sentry,https://github.com/getsentry/sentry,75508,5174,2010-08-30,340,64897,78750,39030,39030,4188,685,https://api.github.com/repos/getsentry/.github/contents/SECURITY.md,"# Security

## Reporting Security Issues

If you've found a security issue in Sentry or in our supported SDKs, you can submit your report to `security[@]sentry.io` via email.

Please include as much information as possible in your report to better help us understand and resolve the issue:

- Where the security issue exists (ie. Sentry SaaS, a Sentry-supported SDK, infrastructure, etc.)
- The type of issue (ex. SQL injection, cross-site scripting, missing authorization, etc.)
- Full paths or links to the source files where the security issue exists, if possible
- Any special configuration required to reproduce the issue
- Step-by-step instructions to reproduce the issue
- Proof of concept or exploit code, if available

If you need to encrypt sensitive information sent to us, please use [our PGP key](https://pgp.mit.edu/pks/lookup?op=vindex&search=0x641D2F6C230DBE3B):

```
E406 C27A E971 6515 A1B1 ED86 641D 2F6C 230D BE3B
```
",2022-07-12 19:35:24,"['Generic policy', 'Reporting mechanism']",email,7.6,6,8,10,0,10,10,10,10,0,9,10,10,9,9,10,-1,0,6,0.0,6.0,0.0,0.0,1.0,0.0,0.0,0.0,214.0,130.0,40.0,12.0
getsentry/sentry-python,https://github.com/getsentry/sentry-python,2737,2325,2018-06-18,235,2187,3638,1895,1895,499,76,https://api.github.com/repos/getsentry/.github/contents/SECURITY.md,"# Security

## Reporting Security Issues

If you've found a security issue in Sentry or in our supported SDKs, you can submit your report to `security[@]sentry.io` via email.

Please include as much information as possible in your report to better help us understand and resolve the issue:

- Where the security issue exists (ie. Sentry SaaS, a Sentry-supported SDK, infrastructure, etc.)
- The type of issue (ex. SQL injection, cross-site scripting, missing authorization, etc.)
- Full paths or links to the source files where the security issue exists, if possible
- Any special configuration required to reproduce the issue
- Step-by-step instructions to reproduce the issue
- Proof of concept or exploit code, if available

If you need to encrypt sensitive information sent to us, please use [our PGP key](https://pgp.mit.edu/pks/lookup?op=vindex&search=0x641D2F6C230DBE3B):

```
E406 C27A E971 6515 A1B1 ED86 641D 2F6C 230D BE3B
```
",2022-07-12 19:35:24,"['Generic policy', 'Reporting mechanism']",email,6.0,10,8,10,0,8,10,0,10,0,10,10,-1,0,10,10,0,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,5.0,4.0,0.0
gitpython-developers/gitpython,https://github.com/gitpython-developers/gitpython,4159,5082,2010-11-30,275,745,1775,4623,4623,907,105,https://api.github.com/repos/gitpython-developers/gitpython/contents/SECURITY.md,"# Security Policy

## Supported Versions

Only the latest version of GitPython can receive security updates. If a vulnerability is discovered, a fix can be issued in a new release.

| Version | Supported          |
| ------- | ------------------ |
| 3.x.x   | :white_check_mark: |
| < 3.0   | :x:                |

## Reporting a Vulnerability

Please report private portions of a vulnerability to <https://github.com/gitpython-developers/GitPython/security/advisories/new>. Doing so helps to receive updates and collaborate on the matter, without disclosing it publicliy right away.
",2022-02-12 03:55:57,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,8.1,10,6,10,0,10,10,10,10,10,10,10,-1,0,10,10,-1,0,10,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,40.0,11.0,8.0,0.0
google/protobuf,https://github.com/google/protobuf,19026,3717,2014-08-26,372,12517,18832,65587,65587,15483,2049,https://api.github.com/repos/google/protobuf/contents/SECURITY.md,"To report security concerns or vulnerabilities within protobuf, please use
Google's official channel for reporting these.

https://www.google.com/appserve/security-bugs/m2/new
",2021-08-13 18:29:56,[],external,6.0,10,6,10,0,4,10,0,10,10,9,10,-1,0,0,10,0,10,7,0.0,3.0,2.0,1.0,1.0,0.0,0.0,0.0,70.0,65.0,261.0,5.0
gotomain/libosdp,https://github.com/gotomain/libosdp,1151,1872,2019-09-14,19,61,188,139,139,72,15,https://api.github.com/repos/gotomain/libosdp/contents/SECURITY.md,"# Security Policy

There are many users using LibOSDP in some capacity in production. If you think
you found a bug that may have security implications, please follow the usual
responsible disclosure protocols. Any issue reported in this channel will be
acknowledged withing 3 business days.

If an issue has been confirmed  by a maintainer, we request the reporter to
respect a 90 day embargo period before making the issue public.

## Supported Versions

LibOSDP will support the last 2 [releases][1] for security and bug fixes.

| Version | Branch | Supported          |
| ------- | -------|------------------- |
| <= 1.5  | N/A    | :x:                |
| 2.4.x   | 2.4.x  | :white_check_mark: |
| latest  | master | :white_check_mark: |

## Reporting a Vulnerability

Please send an email to sidcha.dev@gmail.com ([GPG]([2])).

## Security Mailing List

If you are a vendor using LibOSDP in a product (or any production capacity),
please send an email to sidcha.dev@gmail.com to get added to a private mailing
list which will be used to notify about critical incidents such as
vulnerabilities and potential fixes or workarounds before the issue has been made
public.

You can also follow the [security advisories][3] page but this will be updated
only after the issue has been made public.

Note: For very obvious reasons, not everyone can be added to this list. You
should be able to prove that you are indeed using LibOSDP in production.

[1]: https://github.com/goToMain/libosdp/releases
[2]: https://github.com/sidcha.gpg
[3]: https://github.com/goToMain/libosdp/security/advisories
",2021-06-29 21:43:52,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'Reporting mechanism']",email_advisory,5.2,10,3,-1,0,0,10,10,0,0,10,10,10,0,0,10,-1,0,10,0.0,15.0,6.0,0.0,5.0,0.0,0.0,2.0,78.0,784.0,297.0,0.0
gradio-app/gradio,https://github.com/gradio-app/gradio,7171,2141,2018-12-19,327,4551,9479,33529,33529,2540,174,https://api.github.com/repos/gradio-app/gradio/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

If you discover a security vulnerability, we would be very grateful if you could email us at gradio-team@huggingface.co. This is the preferred approach instead of opening a public issue. We take all vulnerability reports seriously, and will work to patch the vulnerability immediately. Whenever possible, we will credit the person or people who report the security vulnerabilities after it has been patched.
",2021-12-14 18:32:33,"['Generic policy', 'Reporting mechanism']",email,5.4,10,1,10,0,6,10,10,10,0,10,10,-1,0,0,10,-1,0,0,106.0,292.0,11.0,6.0,0.0,0.0,0.0,0.0,4130.0,2530.0,1068.0,65.0
h2oai/h2o-3,https://github.com/h2oai/h2o-3,32545,3893,2014-03-03,174,6892,16337,6907,6907,1996,386,https://api.github.com/repos/h2oai/h2o-3/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please report (suspected) security vulnerabilities to support@h2o.ai. You will receive a response from us within 48 hours. 
If the issue is confirmed, we will release a patch as soon as possible depending on complexity but historically within a few days.
",2021-10-13 12:07:32,"['Generic policy', 'Reporting mechanism']",email,6.5,8,8,9,0,5,10,10,10,0,10,10,-1,0,0,10,-1,0,10,2.0,20.0,3.0,1.0,0.0,0.0,0.0,1.0,289.0,285.0,372.0,1.0
home-assistant/core,https://github.com/home-assistant/core,85030,4060,2013-09-17,410,75446,128704,73043,73043,30555,1337,https://api.github.com/repos/home-assistant/.github/contents/SECURITY.md,"# Security Policy

Information on Home Assistant's security policies and guidelines
can be found on our website:

<https://www.home-assistant.io/security>
",2023-10-19 07:51:35,['Generic policy'],advisory,7.2,10,6,9,0,10,10,10,10,0,10,10,10,0,7,9,-1,0,7,0.0,34.0,15.0,34.0,13.0,43.0,0.0,0.0,992.0,990.0,4668.0,16.0
horazont/aioxmpp,https://github.com/horazont/aioxmpp,2006,3725,2014-08-18,14,157,157,218,218,49,21,https://api.github.com/repos/horazont/aioxmpp/contents/SECURITY.md,"# Security Policy

## Supported Versions

This is an overview of the security support status of aioxmpp
releases. For the supported versions, we provide backports of security
relevant patches ASAP after we become aware of them.

**Note:** Distributors of aioxmpp may also support older versions.

| Version  | Supported          |
| -------- | ------------------ |
| 0.10.x   | :white_check_mark: |
| < 0.10.0 | :x:                |

## Reporting a Vulnerability

To report a vulnerability, you can send a GPG encrypted message to the
main maintainer of aioxmpp, [Jonas Schäfer](mailto:jonas@wielicki.name).
The GPG key ID is 0xE5EDE5AC679E300F (full fingerprint: AA5A 78FF 508D
8CF4 F355  F682 E5ED E5AC 679E 300F).

If you prefer to report vulnerabilities publicly right away, you can do
so like you would report normal issues; that is, here on GitHub, in our
chat room or on the mailing list (see the README for details).

When you report a security vulnerability, we will handle it with the
highest priority and work, possibly with you, to create a fix. Please
provide as much information as possible in the initial report so that
we can get to the core of the issue right away.

We will keep you posted on progress of fixing the issue via a
communication channel we negotiate when you first report it.
",2019-05-23 20:28:16,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_issue,4.2,10,3,0,0,2,10,10,0,0,10,0,-1,0,0,10,-1,0,10,11.0,21.0,6.0,1.0,0.0,0.0,0.0,0.0,269.0,682.0,1236.0,4.0
horovod/horovod,https://github.com/horovod/horovod,1340,2638,2017-08-09,160,1602,3844,14243,14243,2235,335,https://api.github.com/repos/horovod/horovod/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please report security vulnerabilities to horovod-security@lists.lfaidata.foundation.

Anyone can post to this mailing list, however, only active maintainers of the Horovod project will be able to read to the message.
",2022-01-13 21:08:59,"['Generic policy', 'Reporting mechanism']",email,5.1,10,1,1,0,8,10,0,10,0,9,0,10,0,8,4,-1,9,7,0.0,2.0,4.0,0.0,0.0,0.0,0.0,0.0,133.0,59.0,294.0,1.0
httpie/cli,https://github.com/httpie/cli,1787,4630,2012-02-25,149,615,1491,33780,33780,3676,85,https://api.github.com/repos/httpie/cli/contents/SECURITY.md,"# Security policy

## Reporting a vulnerability

When you identify a vulnerability in HTTPie, please report it privately using one of the following channels:

- Email to [`security@httpie.io`](mailto:security@httpie.io)
- Report on [huntr.dev](https://huntr.dev/)

In addition to the description of the vulnerability, include the following information:

- A short reproducer to verify it (it can be a small HTTP server, shell script, docker image, etc.)
- Your deemed severity level of the vulnerability (`LOW`/`MEDIUM`/`HIGH`/`CRITICAL`)
- [CWE](https://cwe.mitre.org/) ID, if available.
",2022-03-07 20:29:48,"['Generic policy', 'Reporting mechanism']",email_external,4.6,10,0,3,0,3,10,10,10,0,10,1,-1,0,0,10,0,0,10,19.0,140.0,3.0,8.0,6.0,0.0,0.0,0.0,347.0,885.0,671.0,8.0
httpie/httpie,https://github.com/httpie/httpie,1787,4630,2012-02-25,149,615,1491,33780,33780,3676,85,https://api.github.com/repos/httpie/httpie/contents/SECURITY.md,"# Security policy

## Reporting a vulnerability

When you identify a vulnerability in HTTPie, please report it privately using one of the following channels:

- Email to [`security@httpie.io`](mailto:security@httpie.io)
- Report on [huntr.dev](https://huntr.dev/)

In addition to the description of the vulnerability, include the following information:

- A short reproducer to verify it (it can be a small HTTP server, shell script, docker image, etc.)
- Your deemed severity level of the vulnerability (`LOW`/`MEDIUM`/`HIGH`/`CRITICAL`)
- [CWE](https://cwe.mitre.org/) ID, if available.
",2022-03-07 20:29:48,"['Generic policy', 'Reporting mechanism']",email_external,4.6,10,0,3,0,3,10,10,10,0,10,1,-1,0,0,10,0,0,10,1.0,0.0,94.0,1.0,0.0,0.0,0.0,0.0,44.0,51.0,8.0,0.0
httplib2/httplib2,https://github.com/httplib2/httplib2,551,3163,2016-03-02,58,123,242,488,488,184,27,https://api.github.com/repos/httplib2/httplib2/contents/SECURITY.md,"# Security Policy

## Supported Versions

master branch and latest release get priority support. You should expect all known problems fixed in master.

All other released versions receive security updates per request.
If you use some old version and can not upgrade for any or no reason, ask for security update release, most likely you will get it.

## Reporting a Vulnerability

Contact current maintainers. At 2020-05: temotor@gmail.com or https://t.me/temotor
If that doesn't work, open Github issue just asking for private communication channel.

This is volunteer maintained project, all issues are processed on best effort basis, no deadlines promised. Of course, security vulnerabilities get priority over regular issues.

You can expect fame in history or maybe you prefer anonymity - say what you prefer.

Thank you for responsible handling of security problems. Your attention and effort are appreciated.
",2020-05-20 17:44:00,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.7,10,3,0,0,4,10,10,10,10,9,0,-1,0,0,10,-1,0,10,6.0,6.0,0.0,1.0,1.0,0.0,0.0,0.0,366.0,267.0,161.0,6.0
huggingface/transformers,https://github.com/huggingface/transformers,17290,2192,2018-10-29,431,17968,33999,134179,134179,26832,1125,https://api.github.com/repos/huggingface/transformers/contents/SECURITY.md,"# Security Policy

## Hugging Face Hub, remote artefacts, and remote code

Transformers is open-source software that is tightly coupled to the Hugging Face Hub. While you have the ability to use it
offline with pre-downloaded model weights, it provides a very simple way to download, use, and manage models locally.

When downloading artefacts that have been uploaded by others on any platform, you expose yourself to risks. Please
read below for the security recommendations in order to keep your runtime and local environment safe.

### Remote artefacts

Models uploaded on the Hugging Face Hub come in different formats. We heavily recommend uploading and downloading
models in the [`safetensors`](https://github.com/huggingface/safetensors) format (which is the default prioritized
by the transformers library), as developed specifically to prevent arbitrary code execution on your system.

To avoid loading models from unsafe formats(e.g. [pickle](https://docs.python.org/3/library/pickle.html), you should use the `use_safetensors` parameter. If doing so, in the event that no .safetensors file is present, transformers will error when loading the model.

### Remote code

#### Modeling

Transformers supports many model architectures, but is also the bridge between your Python runtime and models that
are stored in model repositories on the Hugging Face Hub.

These models require the `trust_remote_code=True` parameter to be set when using them; please **always** verify
the content of the modeling files when using this argument. We recommend setting a revision in order to ensure you
protect yourself from updates on the repository.

#### Tools

Through the `Agent` framework, remote tools can be downloaded to be used by the Agent. You're to specify these tools
yourself, but please keep in mind that their code will be run on your machine if the Agent chooses to run them.

Please inspect the code of the tools before passing them to the Agent to protect your runtime and local setup.

## Reporting a Vulnerability

Feel free to submit vulnerability reports to [security@huggingface.co](mailto:security@huggingface.co), where someone from the HF security team will review and recommend next steps. If reporting a vulnerability specific to open source, please note [Huntr](https://huntr.com) is a vulnerability disclosure program for open source software.
",2023-10-26 10:26:47,"['Generic policy', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'Reporting mechanism']",email_external,4.9,10,1,10,0,10,10,0,10,0,10,10,10,0,0,10,-1,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.0,10.0,3.0,1.0
hyperledger/aries-cloudagent-python,https://github.com/hyperledger/aries-cloudagent-python,9708,1954,2019-06-24,131,2025,3320,417,417,514,30,https://api.github.com/repos/hyperledger/aries-cloudagent-python/contents/SECURITY.md,"# Hyperledger Security Policy

## Reporting a Security Bug

If you think you have discovered a security issue in any of the Hyperledger projects, we'd love to
hear from you. We will take all security bugs seriously and if confirmed upon investigation we will
patch it within a reasonable amount of time and release a public security bulletin discussing the
impact and credit the discoverer.

There are two ways to report a security bug. The easiest is to email a description of the flaw and
any related information (e.g. reproduction steps, version) to
[security at hyperledger dot org](mailto:security@hyperledger.org).

The other way is to file a confidential security bug in our
[JIRA bug tracking system](https://jira.hyperledger.org). Be sure to set the “Security Level” to
“Security issue”.

The process by which the Hyperledger Security Team handles security bugs is documented further in
our [Defect Response page](https://wiki.hyperledger.org/display/SEC/Defect+Response) on our
[wiki](https://wiki.hyperledger.org).
",2019-09-27 10:16:59,"['Generic policy', 'Reporting mechanism']",email,7.1,10,0,10,0,10,10,10,10,0,10,10,10,0,10,9,-1,0,10,0.0,10.0,0.0,2.0,0.0,0.0,0.0,1.0,38.0,90.0,127.0,0.0
hyperledger/indy-node,https://github.com/hyperledger/indy-node,4921,2869,2016-12-21,82,1787,1881,683,683,656,69,https://api.github.com/repos/hyperledger/indy-node/contents/SECURITY.md,"# Hyperledger Security Policy

## Reporting a Security Bug

If you think you have discovered a security issue in any of the Hyperledger
projects, we'd love to hear from you. We will take all security bugs
seriously and if confirmed upon investigation we will patch it within a
reasonable amount of time and release a public security bulletin discussing
the impact and credit the discoverer.

There are two ways to report a security bug. The easiest is to email a
description of the flaw and any related information (e.g. reproduction
steps, version) to
[security at hyperledger dot org](mailto:security@hyperledger.org).

The other way is to file a confidential security bug in our
[JIRA bug tracking system](https://jira.hyperledger.org).
Be sure to set the “Security Level” to “Security issue”.

The process by which the Hyperledger Security Team handles security bugs
is documented further in our
[Defect Response](https://wiki.hyperledger.org/display/HYP/Defect+Response)
page on our [wiki](https://wiki.hyperledger.org).
",2019-10-11 20:25:56,"['Generic policy', 'Reporting mechanism']",email_external,5.8,9,8,9,5,10,10,10,10,0,10,0,-1,0,0,9,0,0,10,16.0,146.0,17.0,2.0,1.0,0.0,0.0,12.0,497.0,1484.0,2990.0,6.0
ibis-project/ibis,https://github.com/ibis-project/ibis,8923,3483,2015-04-17,177,7022,10180,5240,5240,592,85,https://api.github.com/repos/ibis-project/ibis/contents/SECURITY.md,"# Security Policy

## Supported Versions

Security updates are provided by releasing a new version of Ibis.

## Reporting a Vulnerability

- Privately send security reports to [the security
  team](ibis-security.fc04057de4d981273b23058268b61817.show-sender@streams.zulipchat.com)
  Emails sent to this address are sent to a private Zulip channel where only
  members of the Ibis security team can see them.
- Vulnerability reports are published on GitHub at https://github.com/ibis-project/ibis/security/advisories
- If a vulnerability is accepted we will attempt to address it as soon as possible, by cutting a new release.
",2023-12-23 10:36:45,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.1,10,1,10,0,7,10,0,10,0,10,10,-1,0,7,10,0,0,9,3.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,49.0,79.0,204.0,2.0
identitypython/pysaml2,https://github.com/identitypython/pysaml2,3605,4542,2012-05-23,135,533,971,560,560,422,31,https://api.github.com/repos/identitypython/pysaml2/contents/SECURITY.md,"# Security Policy

You can find more information on security incidents
on the [IdPy security webpage](https://idpy.org/security/).

You read on the [incident response policy](https://github.com/IdentityPython/Governance/blob/master/idpy-incidentresponse.md)
under the [governance documentation](https://github.com/IdentityPython/Governance).


## Incident report / Reporting a Vulnerability

Anyone can submit a potential security vulnerability to `incident-response@idpy.org`.
The incident-response team will verify the issue and contact you on how this will be
handled.


## Public Discussions

When a new vulnerability is reported and verified, a new security advisory is created on
GitHub and the issue is assigned a CVE identifier. Progress on the mitigation is tracked
on a private fork, where the incident-response team and developers communicate to fix
the issue.

When the fix is ready, a release plan is prepared and all communication channels are
used to notify the community of the presence of a new issue and the expected release
plan. This allows the community time to prepare for a security upgrade. (Notice that
security fixes are not backported at the moment.)

When the advisory is published, GitHub automatically notifies all associated projects of
the published advisory. Projects that use IdPy projects as dependencies should
automatically get Pull Requests by dependabot. Additionally, all communication channels
are used again, to notify the community of the release of a new version of the affected
software that contains the relevant fixes that mitigate the reported issue.


## Supported versions

Notice, that security fixes are not backported at the moment to older releases than the
latest. The team does not have the capacity to guarantee that these backports will exist.
You are advised to be prepared to upgrade to the latest version once the fix is out.
",2022-10-01 15:12:32,"['Generic policy', 'Reporting mechanism', 'Projects practice', 'Scope of practice']",email,4.2,10,3,0,0,3,10,-1,10,0,10,0,-1,-1,0,10,-1,-1,0,3.0,18.0,3.0,87.0,0.0,0.0,0.0,0.0,317.0,269.0,476.0,3.0
ietf-tools/xml2rfc,https://github.com/ietf-tools/xml2rfc,2633,997,2022-02-05,18,175,1131,69,69,38,14,https://api.github.com/repos/ietf-tools/.github/contents/SECURITY.md,"Refer to the [IETF Infrastructure and Services Vulnerability Disclosure](https://www.ietf.org/about/administration/policies-procedures/vulnerability-disclosure/) on how to disclose vulnerabilities in a secure manner.
",2022-01-26 23:15:31,[],external,5.3,10,3,10,0,7,10,10,0,0,10,10,10,0,10,10,0,0,1,0.0,46.0,7.0,1.0,0.0,0.0,0.0,0.0,243.0,176.0,39.0,17.0
ikus060/rdiffweb,https://github.com/ikus060/rdiffweb,1544,4390,2012-10-22,7,18,18,122,122,28,17,https://api.github.com/repos/ikus060/rdiffweb/contents/SECURITY.md,"# Reporting a Vulnerability

If you discover a security vulnerability in Rdiffweb please disclose it via [our huntr page](https://huntr.dev/repos/ikus060/rdiffweb). Bounty eligibility, CVE assignment, response times and past reports are all there.

You may alos contact-us directly by email `info@ikus-soft.com`

Thank you for improving the security of Rdiffweb.
",2021-09-20 11:56:06,['Reporting mechanism'],email,3.5,10,0,-1,2,0,3,-1,0,0,10,2,-1,0,0,10,-1,-1,10,0.0,4.0,0.0,0.0,1.0,0.0,0.0,0.0,148.0,135.0,118.0,0.0
in-toto/in-toto,https://github.com/in-toto/in-toto,2228,3081,2016-05-24,38,630,799,872,872,137,40,https://api.github.com/repos/in-toto/in-toto/contents/SECURITY.md,"# Security Issues and Bugs

Please **report security issues confidentially** via GitHub [**""Report new
vulnerability""**](https://github.com/in-toto/in-toto/security/advisories/new) form.

Alternatively, you can email reports to torresariass@gmail.com, optionally encrypted
with PGP using this key (fingerprint):
> 903B AB73 640E B6D6 5533 EFF3 468F 122C E816 2295

Please **do not use the GitHub issue tracker** to submit vulnerability reports. The issue
tracker is intended for bug reports and to make feature requests. Major feature
requests, such as design changes to the specification, should be proposed via [in-toto
Enhancement](https://github.com/in-toto/ITE/blob/master/ITE/1/README.adoc) (ITE).
",2022-11-03 05:33:15,['Reporting mechanism'],email_advisory,7.7,10,8,10,10,10,10,10,10,0,9,4,10,4,0,10,3,10,10,7.0,67.0,24.0,4.0,0.0,0.0,0.0,0.0,630.0,359.0,189.0,7.0
includesecurity/safeurl-python,https://github.com/includesecurity/safeurl-python,19,2993,2016-08-19,4,4,6,11,11,4,0,https://api.github.com/repos/includesecurity/safeurl-python/contents/SECURITY.md,"# Security Policy

## Reporting a Security Concern
Please do not report security vulnerabilities through public GitHub issues.

Instead, report security vulnerabilities to **[security@includesecurity.com](mailto:security@includesecurity.com)**. You should receive a response from us within 48 hours. If the issue is confirmed, we will release a patch as soon as possible.

## Past Reports
Thank you to [dir0x](https://github.com/dir0x) for reporting a vulnerability that could allow an attacker to bypass a domain whitelist in certain circumstances, fixed in [this commit](https://github.com/IncludeSecurity/safeurl-python/commit/42dd0c8e5fc84e17e1d3578d18aaea169eece474).
",2023-01-26 18:27:16,"['Generic policy', 'Reporting mechanism', 'History of vulnerability']",email,3.8,10,0,0,0,5,0,-1,0,0,10,0,-1,-1,0,10,-1,-1,10,0.0,91.0,3.0,10.0,0.0,0.0,0.0,0.0,84.0,49.0,15.0,0.0
indico/indico,https://github.com/indico/indico,25267,4843,2011-07-27,101,2973,6569,1771,1771,428,62,https://api.github.com/repos/indico/indico/contents/SECURITY.md,"# Security Policy

## Supported Versions

Indico uses the second part of the version number for major feature releases, ie.
3.1, 3.2, ...

**Bugfixes are generally only released for the latest major version (e.g. 3.1.1 to
fix bugs discovered in 3.1).**

**For security releases we usually follow the same schema.** In exceptional cases
where the previous version (e.g. 3.0) is still somewhat recent and thus widely
used AND no suitable workarounds exist, we may also create a patch release for
that version.

## Reporting a Vulnerability

Please report it privately using GitHub's [""Report a Vulnerability""][gh-vuln] option.
In case you do not have a GitHub account, you can also email indico-team@cern.ch.


[gh-vuln]: https://github.com/indico/indico/security/advisories/new
",2021-04-09 14:22:47,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_advisory,5.9,10,1,10,0,5,10,10,10,0,10,10,10,1,10,10,0,0,2,1.0,27.0,21.0,0.0,0.0,4.0,0.0,0.0,27.0,125.0,69.0,10.0
inventree/inventree,https://github.com/inventree/inventree,15987,2778,2017-03-23,92,5082,7729,4242,4242,764,70,https://api.github.com/repos/inventree/inventree/contents/SECURITY.md,"# Security Policy

The InvenTree team take all security vulnerabilities seriously. Thank you for improving the security of our open source software.
We appreciate your efforts and responsible disclosure and will make every effort to acknowledge your contributions.

## Reporting a Vulnerability

Please report security vulnerabilities by emailing the InvenTree team at:

```
security@inventree.org
```

Someone from the InvenTree development team will acknowledge your email as soon as possible, and indicate the next steps in handling your security report.


The team will endeavour to keep you informed of the progress towards a fix for the issue, and subsequent release to the stable and development code branches. Where possible, the issue will be resolved within 90 days of reporting.
",2022-06-13 22:09:51,"['Generic policy', 'Reporting mechanism']",email,7.8,10,1,10,0,2,10,10,10,0,10,10,10,8,10,10,10,9,8,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,51.0,40.0,59.0,1.0
ipython/ipython,https://github.com/ipython/ipython,27181,5286,2010-05-10,421,7131,14495,16303,16303,4443,742,https://api.github.com/repos/ipython/ipython/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

All IPython and Jupyter security are handled via security@ipython.org. 
You can find more information on the Jupyter website. https://jupyter.org/security

## Tidelift

You can report security concerns for IPython via the [Tidelift platform](https://tidelift.com/security). 
",2022-01-17 14:28:28,"['Generic policy', 'Reporting mechanism', 'Reporting mechanism']",email,6.5,10,3,10,2,7,10,10,10,10,10,10,-1,0,0,9,0,0,10,1.0,293.0,1.0,3.0,10.0,0.0,0.0,0.0,149.0,319.0,104.0,3.0
irrdnet/irrd,https://github.com/irrdnet/irrd,893,2427,2018-03-08,21,570,933,154,154,50,18,https://api.github.com/repos/irrdnet/irrd/contents/SECURITY.rst,"Security Policy
===============

Reporting a Vulnerability
-------------------------

If you have found an issue, strange behaviour, possible oversight,
or anything else that may have security implications, please do not
report it in the GitHub repository, but email irrd@reliablycoded.nl.

Supported Versions
------------------

The current main branch, latest minor version (currently 4.4.x) and one older
minor version are always supported for security updates. Older versions
may be supported for longer in support contracts or specific agreements.

.. list-table::
   :header-rows: 1

   * - Version
     - Supported
   * - Main branch
     - Yes
   * - 4.4.x
     - Yes
   * - 4.3.x
     - Yes
   * - 4.2.x
     - No
   * - 4.1.x
     - No
   * - 4.0.x
     - No

Versions older than 4.0 are an
`entirely different project <https://github.com/irrdnet/irrd-legacy/>`_.

Security process and disclosure
-------------------------------

* Upon receiving a notification of a possible security issue,
  the maintainers will investigate the issue to determine whether
  there is an impact and what kind of impact.
* The reporter will receive this initial assessment within one week,
  but generally sooner.
* If the issue has a security impact, the maintainers will implement
  as resolution as soon as reasonable. The time frame for this depends
  on the complexity, but will usually be in the order of
  a few days to a few weeks.
* Once a fix for the issue is ready, the maintainer will assess whether a
  coordinated deployment plan is warranted. In that case, external stakeholders
  may receive details, patches and/or pre-releases, before the public release.
* Reporters will be credited if desired.

Security issues in IRRd deployments
-----------------------------------

The maintainers do not run production deployments of IRRd. For issues
with particular instances, rather than the IRRd software, contact
the security contact of the respective IRRd operator.

Best effort
-----------

Note that, like all IRRd maintenance, this process is best effort, except
where otherwise agreed in a separate support contract.
The existence of this policy does not negate the disclaimers regarding warranty,
liability etc., in the IRRd
`license <https://github.com/irrdnet/irrd/blob/main/LICENSE>`_.
",2022-04-04 11:49:00,[],email,6.0,10,3,10,0,1,10,10,10,0,9,7,-1,0,7,10,0,9,5,2.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,155.0,112.0,80.0,9.0
jamestheawesomedude/pypqc,https://github.com/jamestheawesomedude/pypqc,1542,383,2023-10-12,25,2,23,0,0,1,1,https://api.github.com/repos/jamestheawesomedude/pypqc/contents/SECURITY.md,"# Security Policy

## Supported Versions

* 0.7.X

## Reporting a Vulnerability

### Vulnerabilities in the implementations

First, check to see if our upstream, PQClean, has issued any updates, and open a
ticket with them if necessary according to their policy:
https://github.com/PQClean/PQClean/security/policy

If they claim no patch is available, you may have to escalate to the creators/implementors:

* Classic McEliece: https://classic.mceliece.org/nist/mceliece-submission-20221023.pdf#:~:text=E%2Dmail%20address,%2Eyp%2Eto

* Kyber: https://github.com/pq-crystals/kyber/issues?q=security

* HQC: https://pqc-hqc.org/contact.html

* SPHINCS+: https://github.com/sphincs/sphincsplus/issues?q=security

* Dilithium: https://github.com/pq-crystals/dilithium/issues?q=security

* Falcon: https://falcon-sign.info/falcon.pdf#:~:text=Zhang-,falcon,ens%2Efr

If upstream has already issued an update, but we have not included it,
please open a ticket on our issue tracker about that.

If you want this process to occur faster, contributions are currently being sought
via [ticket #19](https://github.com/JamesTheAwesomeDude/pypqc/issues/19) on our
issue tracker.

### Security flaws in the actual algorithms

First, check to see if the flaw has already been publicly disclosed:
https://csrc.nist.gov/Projects/post-quantum-cryptography/email-list

If the flaw has already been reported on, please proceed with the ""Vulnerabilities
in the implementations"" process above.

If the flaw has **not** been reported on yet:

- For algorithms which have **not** been standardized yet, please publish your
findings on that mailing list.

- For algorithms which **have** been standardized already (see the NIST page on
[Post-Quantum Cryptography Standardization](https://csrc.nist.gov/Projects/post-quantum-cryptography/Post-Quantum-Cryptography-Standardization)
for the current list), please contact the algorithm's creators/implementors directly
as soon as possible.

### Vulnerabilities in the bindings

If the vulnerability is *not* with the implementation, or with the actual algorithms,
but with our Python bindings, please open a ticket on our issue tracker about that.

## Reporting a Supply-Chain Compromise

If you suspect some element of the supply chain has been compromised
(e.g. pypqc has merged fake commits, or the PyPI project page has been
compromised, etc.), please e-mail james{{dot}}edington{{?}}uah.edu ASAP.
",2024-02-16 02:07:51,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'Projects practice', 'Reporting mechanism', 'Reporting mechanism', 'Reporting mechanism']",external,3.9,10,0,-1,0,0,10,10,0,0,9,0,-1,0,0,10,-1,0,10,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,47.0,67.0,33.0,0.0
janeczku/calibre-web,https://github.com/janeczku/calibre-web,4332,3376,2015-08-02,220,692,3207,12945,12945,1385,167,https://api.github.com/repos/janeczku/calibre-web/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please report security issues to ozzie.fernandez.isaacs@googlemail.com

## Supported Versions

To receive fixes for security vulnerabilities it is required to always upgrade to the latest version of Calibre-Web. See https://github.com/janeczku/calibre-web/releases/latest for the latest release.

## History

| Fixed in      | Description                                                                                                                    |CVE number |
|---------------|--------------------------------------------------------------------------------------------------------------------------------|---------|
| 3rd July 2018 | Guest access acts as a backdoor                                                                                                ||
| V 0.6.7       | Hardcoded secret key for sessions                                                                                              |CVE-2020-12627 |
| V 0.6.13      | Calibre-Web Metadata cross site scripting                                                                                      |CVE-2021-25964|
| V 0.6.13      | Name of Shelves are only visible to users who can access the corresponding shelf Thanks to @ibarrionuevo                       ||
| V 0.6.13      | JavaScript could get executed in the description field. Thanks to @ranjit-git  and Hagai Wechsler (WhiteSource)                ||
| V 0.6.13      | JavaScript could get executed in a custom column of type ""comment"" field                                                       ||
| V 0.6.13      | JavaScript could get executed after converting a book to another format with a title containing javascript code                ||
| V 0.6.13      | JavaScript could get executed after converting a book to another format with a username containing javascript code             ||
| V 0.6.13      | JavaScript could get executed in the description series, categories or publishers title                                        ||
| V 0.6.13      | JavaScript could get executed  in the shelf title                                                                              ||
| V 0.6.13      | Login with the old session cookie after logout. Thanks to @ibarrionuevo                                                        ||
| V 0.6.14      | CSRF was possible. Thanks to @mik317 and Hagai Wechsler (WhiteSource)                                                          |CVE-2021-25965|
| V 0.6.14      | Migrated some routes to POST-requests (CSRF protection). Thanks to @scara31                                                    |CVE-2021-4164|
| V 0.6.15      | Fix for ""javascript:"" script links in identifier. Thanks to @scara31                                                           |CVE-2021-4170|
| V 0.6.15      | Cross-Site Scripting vulnerability on uploaded cover file names. Thanks to @ibarrionuevo                                       ||
| V 0.6.15      | Creating public shelfs is now denied if user is missing the edit public shelf right. Thanks to @ibarrionuevo                   ||
| V 0.6.15      | Changed error message in case of trying to delete a shelf unauthorized. Thanks to @ibarrionuevo                                ||
| V 0.6.16      | JavaScript could get executed on authors page. Thanks to @alicaz                                                               |CVE-2022-0352|
| V 0.6.16      | Localhost can no longer be used to upload covers. Thanks to @scara31                                                           |CVE-2022-0339|
| V 0.6.16      | Another case where public shelfs could be created without permission is prevented. Thanks to @nhiephon                         |CVE-2022-0273|
| V 0.6.16      | It's prevented to get the name of a private shelfs. Thanks to @nhiephon                                                        |CVE-2022-0405|
| V 0.6.17      | The SSRF Protection can no longer be bypassed via an HTTP redirect. Thanks to @416e6e61                                        |CVE-2022-0767|
| V 0.6.17      | The SSRF Protection can no longer be bypassed via 0.0.0.0 and it's ipv6 equivalent. Thanks to @r0hanSH                         |CVE-2022-0766|
| V 0.6.18      | Possible SQL Injection is prevented in user table  Thanks to Iman Sharafaldin (Forward Security)                               |CVE-2022-30765|
| V 0.6.18      | The SSRF protection no longer can be bypassed by IPV6/IPV4 embedding. Thanks to  @416e6e61                                     |CVE-2022-0939|
| V 0.6.18      | The SSRF protection no longer can be bypassed to connect to other servers in the local network. Thanks to @michaellrowley      |CVE-2022-0990|
| V 0.6.20      | Credentials for emails are now stored encrypted                                                                                ||
| V 0.6.20      | Login is rate limited                                                                                                          ||
| V 0.6.20      | Passwordstrength can be forced                                                                                                 ||
| V 0.6.21      | SMTP server credentials are no longer returned to client                                                                       ||
| V 0.6.21      | Cross-site scripting (XSS) stored in href bypasses filter using data wrapper no longer possible                                ||
| V 0.6.21      | Cross-site scripting (XSS) is no longer possible via pathchooser                                                               ||
| V 0.6.21      | Error Handling at non existent rating, language, and user downloaded books was fixed                                           ||
| V 0.6.22      | Upload mimetype is checked to prevent malicious file content in the books library                                              ||
| V 0.6.22      | Cross-site scripting (XSS) stored in comments section is prevented better (switching from lxml to bleach for sanitizing strings) ||
| V 0.6.23      | Cookies are no longer stored for opds basic authentication and proxy authentication                                            ||




## Statement regarding Log4j (CVE-2021-44228 and related)

Calibre-web is not affected by bugs related to Log4j. Calibre-Web is a python program, therefore not using Java, and not using the Java logging feature log4j. 
",2021-07-27 11:22:24,"['Generic policy', 'Reporting mechanism', 'Scope of practice', 'History of vulnerability', 'User guideline']",email,5.3,10,0,0,0,1,10,-1,10,0,10,10,-1,-1,0,10,0,-1,10,37.0,77.0,7.0,1.0,10.0,0.0,0.0,0.0,262.0,396.0,449.0,1.0
jaraco/keyring,https://github.com/jaraco/keyring,2249,3535,2015-02-24,101,176,697,1257,1257,159,21,https://api.github.com/repos/jaraco/keyring/contents/SECURITY.md,"# Security Contact

To report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.
",2023-07-08 01:48:23,['Reporting mechanism'],external,6.5,10,0,5,0,2,10,10,10,0,10,10,-1,0,0,10,-1,10,10,5.0,72.0,14.0,2.0,6.0,0.0,0.0,0.0,377.0,312.0,145.0,6.0
jazzband/djangorestframework-simplejwt,https://github.com/jazzband/djangorestframework-simplejwt,630,2734,2017-05-05,104,354,829,4003,4003,662,56,https://api.github.com/repos/jazzband/.github/contents/SECURITY.md,"# Security Policy

In case you have found a security issue with ANY Jazzband project
please **do NOT open public GitHub issues, pull requests or anything
that could leak sensitive information to the public**.

Jazzband asks you to instead responsibly report the security issue
by email to security@jazzband.co.

Your email is sent to the Jazzband roadies, the people that maintain
the Jazzband organization. A member of the roadies will respond to
you acknowledging your initial email and then, depending on the
action to be taken, further followup emails afterwards.

If you would like to optionally encrypt the email to security@jazzband.co
please use the PGP key with the fingerprint:

```
02DE 8F84 2900 411A DD70  B137 4D87 558A F652 A00F
```

The key's short ID is `F652A00F` and can be fetched from many public
key servers.
",2021-04-21 21:24:54,['Reporting mechanism'],email,5.4,10,6,4,0,10,10,10,0,0,10,0,10,0,0,10,-1,0,10,3.0,106.0,30.0,5.0,6.0,0.0,0.0,0.0,4351.0,1192.0,509.0,13.0
jazzband/tablib,https://github.com/jazzband/tablib,1206,4965,2011-03-28,110,345,601,4613,4613,593,134,https://api.github.com/repos/jazzband/.github/contents/SECURITY.md,"# Security Policy

In case you have found a security issue with ANY Jazzband project
please **do NOT open public GitHub issues, pull requests or anything
that could leak sensitive information to the public**.

Jazzband asks you to instead responsibly report the security issue
by email to security@jazzband.co.

Your email is sent to the Jazzband roadies, the people that maintain
the Jazzband organization. A member of the roadies will respond to
you acknowledging your initial email and then, depending on the
action to be taken, further followup emails afterwards.

If you would like to optionally encrypt the email to security@jazzband.co
please use the PGP key with the fingerprint:

```
02DE 8F84 2900 411A DD70  B137 4D87 558A F652 A00F
```

The key's short ID is `F652A00F` and can be fetched from many public
key servers.
",2021-04-21 21:24:54,['Reporting mechanism'],email,5.8,10,6,10,0,10,10,10,0,0,10,3,10,0,0,10,-1,0,10,1.0,80.0,25.0,4.0,4.0,0.0,0.0,0.0,254.0,452.0,595.0,3.0
jelmer/dulwich,https://github.com/jelmer/dulwich,4621,5700,2009-03-22,190,860,1373,2056,2056,395,52,https://api.github.com/repos/jelmer/dulwich/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version  | Supported          |
| -------- | ------------------ |
| 0.21.x   | :white_check_mark: |
| 0.20.x   | :white_check_mark: |
| < 0.20.x | :x:                |

## Reporting a Vulnerability

Please report security issues by e-mail to jelmer@jelmer.uk, ideally PGP
encrypted to the key at <https://jelmer.uk/D729A457.asc>
",2020-10-23 20:42:54,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.0,10,3,10,0,0,10,10,10,10,9,10,10,0,0,10,-1,0,2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0,13.0,28.0,0.0
jhpyle/docassemble,https://github.com/jhpyle/docassemble,4273,3483,2015-04-18,30,432,799,783,783,254,50,https://api.github.com/repos/jhpyle/docassemble/contents/SECURITY.md,"## Reporting security issues

To report a security issue, email jhpyle@gmail.com and include the
phrase ""docassemble security"" in the subject line.

You will receive a response indicating the next steps in handling your
report. After the initial reply to your report, you will be kept
informed of the progress towards a fix and full announcement, and you
may be asked for additional information or guidance.

Report security bugs in third-party modules to the person or team
maintaining the module.

To learn more about ensuring security in **docassemble**, please see
the [Security] section in the [documentation].

[Security]: https://docassemble.org/docs/security.html
[documentation]: https://docassemble.org/docs.html
",2018-09-18 13:04:08,['Reporting mechanism'],email,6.9,10,0,10,0,0,10,10,10,0,10,10,-1,0,10,9,-1,9,10,0.0,2.0,3.0,0.0,0.0,0.0,0.0,0.0,27.0,60.0,18.0,2.0
jpadilla/pyjwt,https://github.com/jpadilla/pyjwt,872,4996,2011-02-24,147,556,1000,5143,5143,687,59,https://api.github.com/repos/jpadilla/pyjwt/contents/SECURITY.md,"# Security Policy

## Supported Versions

The following versions of this project are currently being supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| 2.9.x   | :white_check_mark: |
| < 2.8   | :x:                |

## Reporting a Vulnerability
In order for the vulnerability reports to reach maintainers as soon as possible, the preferred way is to use the ""Report a vulnerability"" button under the ""Security"" tab of the associated GitHub project. This creates a private communication channel between the reporter and the maintainers.

If you are absolutely unable to or have strong reasons not to use GitHub's vulnerability reporting workflow, please reach out to [security@jpadilla.com](mailto:security@jpadilla.com).
",2024-09-07 11:36:35,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_advisory,7.2,10,6,10,0,4,10,10,10,10,10,10,10,0,0,10,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,5.0,18.0,0.0
jquery/jquery,https://github.com/jquery/jquery,6736,5688,2009-04-03,294,3045,5383,59212,59212,20589,3170,https://api.github.com/repos/jquery/jquery/contents/SECURITY.md,"# Security Policy

## Supported Versions

The [latest released version](https://github.com/jquery/jquery/releases) of jQuery is supported.

## Reporting a Vulnerability

Please email security@jquery.com, and we will respond as quickly as possible.

If the vulnerability is considered valid and accepted, a patch will be made for the latest jQuery version.
If the vulnerability is deemed invalid, no further action is required.
",2020-05-12 18:33:45,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,8.0,10,8,10,0,9,10,10,10,0,10,10,-1,8,10,10,-1,0,10,4.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,130.0,71.0,47.0,15.0
jsonpickle/jsonpickle,https://github.com/jsonpickle/jsonpickle,1573,5437,2009-12-10,63,211,530,1255,1255,175,33,https://api.github.com/repos/jsonpickle/jsonpickle/contents/SECURITY.md,"# Security Policy

## Security contact information

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure.

## Reporting a vulnerability

Even when unsure whether the bug in question is an exploitable
vulnerability, it is recommended to send the report and not to
discuss the issue anywhere else.

Vulnerabilities are expected to be discussed _only_ via email,
and not in public, until an official release to address the
vulnerability is available.

Examples for details to include:

- Ideally a short description (or a script) to demonstrate an
  exploit.
- The affected platforms and scenarios.
- The name and affiliation of the security researchers who are
  involved in the discovery, if any.
- Whether the vulnerability has already been disclosed.
- How long an embargo would be required to be safe.

## Supported Versions

There are no official ""Long Term Support"" versions in jsonpickle.
Instead, the maintenance track (i.e. the versions based on the
most recently published feature release, also known as "".0""
version) sees occasional updates with bug fixes.

Fixes to vulnerabilities are made for the maintenance track for
the latest feature release. The jsonpickle project makes no formal
guarantee for any older maintenance tracks to receive updates.
In practice, though, critical vulnerability fixes can be applied not
only to the most recent track, but to at least a couple more
maintenance tracks if requested by users.

## Security

The jsonpickle module **is not secure**.  Only unpickle data you trust.

It is possible to construct malicious pickle data which will **execute
arbitrary code during unpickling**.  Never unpickle data that could have come
from an untrusted source, or that could have been tampered with.

Consider signing data with an HMAC if you need to ensure that it has not
been tampered with.

Safer deserialization approaches, such as reading JSON directly,
may be more appropriate if you are processing untrusted data.
",2024-06-09 09:13:24,"['Generic policy', 'Reporting mechanism', 'Reporting mechanism', 'Scope of practice', 'User guideline']",external,5.8,10,0,10,0,5,10,10,0,10,10,10,-1,0,0,10,-1,0,10,10.0,54.0,1.0,3.0,0.0,0.0,0.0,0.0,905.0,470.0,286.0,2.0
jupyter-lsp/jupyterlab-lsp,https://github.com/jupyter-lsp/jupyterlab-lsp,2945,1900,2019-08-17,43,537,1101,1805,1805,148,20,https://api.github.com/repos/jupyter-lsp/.github/contents/SECURITY.md,"Security Policy

## Reporting a Vulnerability

If you find a security vulnerability in Jupyter, please report it to security@ipython.org.

See more information in our [docs](https://jupyter-server.readthedocs.io/en/stable/operators/security.html).
",2021-08-08 10:57:26,['Reporting mechanism'],email,4.9,10,0,10,0,1,10,10,10,0,10,3,-1,0,10,10,-1,0,0,0.0,14.0,8.0,0.0,0.0,0.0,0.0,0.0,143.0,209.0,158.0,0.0
jupyter-server/jupyter_server,https://github.com/jupyter-server/jupyter_server,12760,2960,2016-09-21,397,1003,1457,486,486,302,38,https://api.github.com/repos/jupyter-server/.github/contents/SECURITY.md," Security Policy

## Reporting a Vulnerability

If you find a security vulnerability in Jupyter, please report it to security@ipython.org.

See more information in our [docs](https://jupyter.org/security).
",2021-08-08 10:54:20,['Reporting mechanism'],email,5.8,10,3,10,0,6,10,10,10,10,10,2,-1,0,0,10,0,0,9,4.0,523.0,4.0,2.0,0.0,0.0,0.0,0.0,233.0,565.0,915.0,4.0
jupyter/jupyter_core,https://github.com/jupyter/jupyter_core,641,3506,2015-03-25,55,274,402,196,196,181,40,https://api.github.com/repos/jupyter/.github/contents/SECURITY.md,"Security Policy

## Reporting a Vulnerability

If you find a security vulnerability in Jupyter, please report it to security@ipython.org.

See more information in our [docs](https://jupyter.org/security).
",2022-05-30 14:04:22,['Reporting mechanism'],email,5.1,10,3,10,0,0,10,10,10,0,10,0,-1,0,7,10,0,0,10,0.0,6.0,9.0,0.0,1.0,0.0,0.0,0.0,34.0,62.0,12.0,0.0
jupyter/nbconvert,https://github.com/jupyter/nbconvert,4065,3491,2015-04-09,248,991,2185,1735,1735,567,50,https://api.github.com/repos/jupyter/.github/contents/SECURITY.md,"Security Policy

## Reporting a Vulnerability

If you find a security vulnerability in Jupyter, please report it to security@ipython.org.

See more information in our [docs](https://jupyter.org/security).
",2022-05-30 14:04:22,['Reporting mechanism'],email,6.0,10,3,10,0,4,10,10,10,10,10,6,-1,0,0,10,0,0,10,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0,12.0,87.0,1.0
jupyter/nbdime,https://github.com/jupyter/nbdime,2142,3270,2015-11-16,43,429,774,2672,2672,160,42,https://api.github.com/repos/jupyter/.github/contents/SECURITY.md,"Security Policy

## Reporting a Vulnerability

If you find a security vulnerability in Jupyter, please report it to security@ipython.org.

See more information in our [docs](https://jupyter.org/security).
",2022-05-30 14:04:22,['Reporting mechanism'],email,5.0,10,3,10,0,4,10,10,10,0,9,10,-1,0,0,10,0,0,0,5.0,19.0,4.0,3.0,3.0,0.0,0.0,1.0,293.0,422.0,281.0,1.0
jupyter/notebook,https://github.com/jupyter/notebook,13574,3491,2015-04-09,374,2468,7406,11707,11707,4942,325,https://api.github.com/repos/jupyter/.github/contents/SECURITY.md,"Security Policy

## Reporting a Vulnerability

If you find a security vulnerability in Jupyter, please report it to security@ipython.org.

See more information in our [docs](https://jupyter.org/security).
",2022-05-30 14:04:22,['Generic policy'],email,5.0,10,3,10,0,3,10,10,10,0,10,10,-1,0,0,10,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,4.0,1.0,0.0
jupyterhub/jupyterhub,https://github.com/jupyterhub/jupyterhub,7741,3792,2014-06-12,315,2423,4856,7779,7779,2013,267,https://api.github.com/repos/jupyterhub/jupyterhub/contents/SECURITY.md,"# Reporting a Vulnerability

If you believe you’ve found a security vulnerability in a Jupyter
project, please report it to security@ipython.org. If you prefer to
encrypt your security reports, you can use [this PGP public key](https://jupyter-notebook.readthedocs.io/en/stable/_downloads/1d303a645f2505a8fd283826fafc9908/ipython_security.asc).
",2021-04-24 06:12:51,['Reporting mechanism'],email,5.9,10,3,10,0,6,10,10,10,0,9,10,10,0,0,10,-1,0,2,0.0,2.0,3.0,0.0,0.0,0.0,0.0,0.0,27.0,60.0,18.0,2.0
jupyterlab/jupyterlab,https://github.com/jupyterlab/jupyterlab,26181,3070,2016-06-03,362,8288,16811,14162,14162,3380,306,https://api.github.com/repos/jupyterlab/.github/contents/SECURITY.md,"Security Policy

## Reporting a Vulnerability

If you find a security vulnerability in Jupyter, please report it to security@ipython.org.

See more information in our [docs](https://jupyter.org/security).
",2021-08-08 10:57:26,['Reporting mechanism'],email,5.8,10,3,10,2,8,10,10,10,0,9,10,-1,0,9,10,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,3.0,4.0,0.0
keylime/keylime,https://github.com/keylime/keylime,1921,2932,2016-10-19,62,1189,1670,423,423,151,23,https://api.github.com/repos/keylime/keylime/contents/docs/security.rst,"================
Securing Keylime
================

.. warning::
    This page is still under development and not complete. It will be so until
    this warning is removed.

System Hardening
----------------

TLS configuration
----------------

Reporting an issue
------------------

Please contact us directly at security@keylime.groups.io for any bug that might
impact the security of this project. Do not use a github issue to report any
potential security bugs.
",2022-06-08 14:05:16,[],email,7.1,10,6,10,0,10,10,10,10,0,10,10,10,6,9,9,-1,0,0,0.0,34.0,15.0,34.0,13.0,43.0,0.0,0.0,992.0,990.0,4668.0,16.0
kiwitcms/kiwi,https://github.com/kiwitcms/kiwi,6984,2714,2017-05-25,76,2897,3825,982,982,294,50,https://api.github.com/repos/kiwitcms/.github/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
| ------- | ------------------ |
| latest  | :heavy_check_mark: |

## Supported resources

- All repositories published under https://github.com/kiwitcms/
- Our GitHub Marketplace integration at https://github.com/marketplace/kiwi-tcms/
- Our GitHub integration App accessible at https://github.com/apps/kiwi-tcms
- Public Demo SaaS at https://public.tenant.kiwitcms.org


**IMPORTANT:** if you are performing a security scan on behalf of a third party
please install a self-hosted instance of the `kiwitcms/Kiwi` container before
probbing any of our digital properties!


## Reporting a Vulnerability

In case you have found a security problem with any of the resources mentioned
above **DO NOT** report it into GitHub Issues!

Email the Kiwi TCMS team directly at *info@kiwitcms.org* to coordinate the fix
and discloser of the issue.


Alternatively you can go to
[https://tidelift.com/security](https://tidelift.com/security)
and follow the instructions there. Kiwi TCMS is a registered partner of Tidelift
and will be notified when you report the security problem with them!


## Security process

Here are the steps we follow:

1. The person discovering an issue (the reporter) privately reports it to info@kiwitcms.org.
1. The Kiwi TCMS team will reply to the reporter within 24 hours to acknowledge receipt.
1. The Kiwi TCMS team will start investigating the report.
1. The Kiwi TCMS team & reporter will keep the report confidential.
   This means avoiding public GitHub issues or commits.
1. Once a report has been investigated, the Kiwi TCMS team will notify the reporter whether
   the report has been accepted or rejected, with an explanation.
1. If a report is rejected, there is nothing else to do. If accepted, the process continues.
1. The Kiwi TCMS team will notify GitHub within 24 hours of a confirmed report.
   Note: per our GitHub Marketplace agreement!
1. The Kiwi TCMS team will prepare a fix and an accompanying announcement.
1. The Kiwi TCMS team will share the fix and draft announcement with the reporter.
1. Kiwi TCMS and the reporter will negotiate the fix, announcement, and release schedule.
1. With an announcement plan in place, we'll commit the fix and publish fixed release(s).
   The commits and releases will be made as close to the announcement as possible, and
   will not mention that they address a security vulnerability.
1. Release announcements for the new version(s) will go out as normal.

## Rewards

Kiwi TCMS currently does not offer rewards for disclosing security vulnerabilities.
",2019-11-10 16:23:35,"['Generic policy', 'Scope of practice', 'User guideline', 'Reporting mechanism', 'Projects practice', 'User guideline']",email,8.0,9,8,10,0,7,10,10,10,0,10,10,10,0,10,10,-1,10,7,4.0,72.0,10.0,0.0,1.0,0.0,0.0,1.0,413.0,283.0,233.0,8.0
kjd/idna,https://github.com/kjd/idna,351,4173,2013-05-27,23,99,197,247,247,91,15,https://api.github.com/repos/kjd/idna/contents/SECURITY.md,"# Security Policy

## Supported Versions

Security updates are applied only to the latest release.

## Reporting a Vulnerability

If you have discovered a security vulnerability in this project, please
report it privately. **Do not disclose it as a public issue.** This gives
us time to work with you to fix the issue before public exposure, reducing
the chance that the exploit will be used before a patch is released.

Please disclose your issue through Github's
[security advisory facility](https://github.com/kjd/idna/security/advisories/new).

We will endeavor to prioritize review, remediation and disclosure of
vulnerabilites. However, be mindful that this project is maintained by a
team of volunteers who work on a best effort basis.",2023-05-31 20:07:58,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,7.0,10,6,10,0,0,10,10,0,10,10,10,10,5,8,10,0,10,10,23.0,168.0,15.0,35.0,6.0,0.0,0.0,4.0,1210.0,837.0,748.0,7.0
langchain-ai/langchain,https://github.com/langchain-ai/langchain,11712,744,2022-10-17,480,15636,23432,94112,94112,15205,688,https://api.github.com/repos/langchain-ai/langchain/contents/SECURITY.md,"# Security Policy

## Reporting OSS Vulnerabilities

LangChain is partnered with [huntr by Protect AI](https://huntr.com/) to provide 
a bounty program for our open source projects. 

Please report security vulnerabilities associated with the LangChain 
open source projects by visiting the following link:

[https://huntr.com/bounties/disclose/](https://huntr.com/bounties/disclose/?target=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flangchain&validSearch=true)

Before reporting a vulnerability, please review:

1) In-Scope Targets and Out-of-Scope Targets below.
2) The [langchain-ai/langchain](https://python.langchain.com/docs/contributing/repo_structure) monorepo structure.
3) LangChain [security guidelines](https://python.langchain.com/docs/security) to
   understand what we consider to be a security vulnerability vs. developer
   responsibility.

### In-Scope Targets

The following packages and repositories are eligible for bug bounties:

- langchain-core
- langchain (see exceptions)
- langchain-community (see exceptions)
- langgraph
- langserve

### Out of Scope Targets

All out of scope targets defined by huntr as well as:

- **langchain-experimental**: This repository is for experimental code and is not
  eligible for bug bounties, bug reports to it will be marked as interesting or waste of
  time and published with no bounty attached.
- **tools**: Tools in either langchain or langchain-community are not eligible for bug
  bounties. This includes the following directories
  - langchain/tools
  - langchain-community/tools
  - Please review our [security guidelines](https://python.langchain.com/docs/security)
    for more details, but generally tools interact with the real world. Developers are
    expected to understand the security implications of their code and are responsible
    for the security of their tools.
- Code documented with security notices. This will be decided done on a case by
  case basis, but likely will not be eligible for a bounty as the code is already
  documented with guidelines for developers that should be followed for making their
  application secure.
- Any LangSmith related repositories or APIs see below.

## Reporting LangSmith Vulnerabilities

Please report security vulnerabilities associated with LangSmith by email to `security@langchain.dev`.

- LangSmith site: https://smith.langchain.com
- SDK client: https://github.com/langchain-ai/langsmith-sdk

### Other Security Concerns

For any other security concerns, please contact us at `security@langchain.dev`.
",2023-08-21 17:39:59,"['Generic policy', 'Reporting mechanism', 'User guideline', 'Scope of practice', 'Reporting mechanism', 'Information on maintainer']",email_external,5.7,10,3,10,0,5,10,10,10,0,10,10,10,0,0,10,-1,0,0,3.0,51.0,27.0,23.0,1.0,0.0,0.0,9.0,521.0,996.0,549.0,4.0
latchset/jwcrypto,https://github.com/latchset/jwcrypto,330,3527,2015-03-04,36,185,338,437,437,118,19,https://api.github.com/repos/latchset/jwcrypto/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
| ------- | ------------------ |
| 1.5.1+  | :white_check_mark: |
| < 1.5.1 | :x:                |

## Reporting a Vulnerability

Please use the GitHub feature to report security vulnerabilities.

Expect a response within 2 business days (not on week ends or holidays).

If the vulnerbaility is confirmed and accepted you will be given instruction on any embargo or disclosure timeline.
",2021-06-09 19:02:52,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,4.1,10,6,8,0,2,10,10,0,0,10,0,10,0,9,4,0,0,2,4.0,16.0,0.0,20.0,2.0,0.0,0.0,0.0,76.0,178.0,650.0,0.0
litestar-org/litestar,https://github.com/litestar-org/litestar,2945,1058,2021-12-06,208,2457,3597,5493,5493,374,40,https://api.github.com/repos/litestar-org/.github/contents/SECURITY.md,"# Security Policy

Thanks for helping make Litestar safe for everyone.

## Security

Litestar takes the security of our projects and services seriously, including all of the repositories managed by the [litestar organization](https://github.com/litestar-org).

We will ensure that your finding gets escalated to the appropriate maintainer(s) for remediation.

## Reporting Security Issues

**Please do not report security vulnerabilities through public GitHub issues, discussions, or pull requests.**

[Click to Open a Security Advisory Privately](https://github.com/litestar-org/litestar/security/advisories/new)

If you believe you have found a security vulnerability in any Litestar-managed repository, please report it to us through coordinated disclosure:

- In the affected repository, browse to the **Security** tab, select **Advisories**, select ""Report a vulnerability""
  - ![image](https://user-images.githubusercontent.com/45884264/217041010-8fd6b96b-329d-4d8e-8838-9b5bf4e1a78d.png)
- Please do **NOT** create an issue in the affected repository
- Please do **NOT** send a private message to and/or tag the ""@maintainer"" role on our [Discord server](https://discord.gg/MmcwxztmQb)

Please include as much of the information listed below as you can to help us better understand and resolve the issue:

- The type of issue (e.g., buffer overflow, SQL injection, or cross-site scripting)
- Full paths of source file(s) related to the manifestation of the issue
- The location of the affected source code (tag/branch/commit or direct URL)
- Any special configuration required to reproduce the issue
- Step-by-step instructions to reproduce the issue
- Proof-of-concept or exploit code (if possible)
- Impact of the issue, including how an attacker might exploit the issue

This information will help us triage your report more quickly.
",2023-02-05 18:19:48,"['Generic policy', 'Generic policy', 'Reporting mechanism']",advisory,7.4,10,4,10,0,10,10,10,10,0,10,10,10,0,9,10,-1,0,10,80.0,72.0,27.0,47.0,19.0,0.0,0.0,1.0,2805.0,2029.0,2363.0,28.0
locustio/locust,https://github.com/locustio/locust,5385,5003,2011-02-17,267,1233,2910,24910,24910,2983,427,https://api.github.com/repos/locustio/locust/contents/SECURITY.md,"# Security Policy

## Supported Versions

Only latest version is actively supported, but issues reported for earlier minor will be considered if they are serious.

## Reporting a Vulnerability

Reported using regular GitHub issues. If there is some reason an issue cannot be made public before a fix has been made, contact @cyberw directly.

## How to use Locust safely

Locust is not intended to be deployed on a public-facing server. By default the web UI is only exposed on localhost, so normally this is not a problem.

Do not give someone access to the web UI unless you trust them with everything else that is on that machine.

## How to use Locust nicely

Do not load test public web sites/services that you do not own.
",2023-08-29 19:46:26,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'User guideline', 'User guideline']",issue,4.8,10,3,8,0,2,10,0,10,0,10,10,10,0,0,3,-1,10,0,2.0,27.0,1957.0,0.0,1.0,0.0,0.0,0.0,2166.0,955.0,1552.0,2.0
lxml/lxml,https://github.com/lxml/lxml,6407,5009,2011-02-11,154,383,383,2693,2693,569,82,https://api.github.com/repos/lxml/lxml/contents/SECURITY.md,"# Security Policy

If you have discovered a security vulnerability in this project, please report it
privately. **Do not disclose it as a public issue.** This gives us time to work with you
to fix the issue before public exposure, reducing the chance that the exploit will be
used before a patch is released.

Please submit the report through the
[Launchpad bug-tracker](https://bugs.launchpad.net/lxml/+filebug) (you may need to
create an account and log in). Make sure to mark the ""🔒 This bug is a security
vulnerability"" checkbox before submitting the report. This ensures the bug can only be
seen by the security group.

Please provide the following information in your report:

- A description of the vulnerability and its impact
- How to reproduce the issue

This project is maintained by a few maintainers on a reasonable-effort basis. As such,
we ask that you give us 90 days to work on a fix before public exposure.
",2023-06-16 07:26:19,['Reporting mechanism'],external,6.8,10,3,7,0,1,10,10,10,10,9,10,-1,1,0,10,0,10,10,0.0,6.0,0.0,1.0,0.0,0.0,0.0,0.0,115.0,57.0,116.0,0.0
man-group/dtale,https://github.com/man-group/dtale,819,1933,2019-07-15,24,299,889,4760,4760,405,75,https://api.github.com/repos/man-group/dtale/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

**Please do not report security vulnerabilities through public GitHub issues.**

Instead, report security vulnerabilities by email to [`arcticdb@man.com`](mailto:arcticdb@man.com).

### Email content

Please include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:

  * Type of issue (e.g. unsafe code, known vulnerabilities in dependencies, arbitrary code execution)
  * Full paths of the (source) file(s) related to the manifestation of the issue
  * The location of the affected source code (tag/branch/commit or direct URL)
  * The commit which introduced the vulnerability, if applicable
  * Any special configuration required to reproduce the issue
  * Step-by-step instructions to reproduce the issue
  * Proof-of-concept or exploit code (if possible)
  * Impact of the issue, including how an attacker might exploit the issue

Reporters will receive a response within 48 hours. If the vulnerability is confirmed, we will release a patch as soon as possible.

## Preferred Languages

We prefer all communications to be in English.
",2023-09-29 15:06:15,"['Generic policy', 'Reporting mechanism', 'Reporting mechanism', 'Additional information']",email,4.7,10,0,10,0,0,0,-1,10,0,10,10,-1,0,0,10,-1,-1,4,2.0,35.0,4.0,4.0,3.0,0.0,0.0,1.0,456.0,686.0,791.0,9.0
mansuf/mangadex-downloader,https://github.com/mansuf/mangadex-downloader,1060,1372,2021-01-26,8,25,117,509,509,43,3,https://api.github.com/repos/mansuf/mangadex-downloader/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

To make a report, you can email me at security@mansuf.link

Optionally, you can encrypt your report with GPG, using key [6ABF0FF73964A699](https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x6abf0ff73964a699)

```
-----BEGIN PGP PUBLIC KEY BLOCK-----
Comment: Hostname: 
Version: Hockeypuck 2.1.0-189-g15ebf24

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
bAmWc6A=
=dgk/
-----END PGP PUBLIC KEY BLOCK-----
```
",2022-09-14 03:55:17,"['Generic policy', 'Reporting mechanism']",email,3.8,10,3,0,0,0,6,10,0,0,10,4,10,0,0,10,0,0,4,9.0,9.0,2.0,1.0,7.0,0.0,0.0,0.0,211.0,413.0,896.0,3.0
mar10/wsgidav,https://github.com/mar10/wsgidav,919,3964,2013-12-22,44,131,317,978,978,150,23,https://api.github.com/repos/mar10/wsgidav/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

These project versions are currently being supported with security updates:

| Version | Supported          |
| ------- | ------------------ |
| 4.0.x   | :white_check_mark: |
| < 4.0   | :x:                |


## Reporting a Vulnerability

<!--
Use this section to tell people how to report a vulnerability.

Tell them where to go, how often they can expect to get an update on a
reported vulnerability, what to expect if the vulnerability is accepted or
declined, etc.
-->

Thank you for reporting a security related issue using a private channel 
instead of opening a public issue!

The security team (i.e. me) will try to acknowledge and respond as quick as 
possible.

To report a security issue, please email 

> security(at)wwwendt.de

and, to your best knowledge, please

- Include your name and affiliation (if any).
- Include the scope of the vulnerability. Let us know who could use this exploit.
- Mention the affected versions.
- Document steps to identify the vulnerability. It is important that we can 
  reproduce your findings.
- Describe how to exploit vulnerability, give us an attack scenario.
- If known, describe mitigations for the issue.

This project follows a 90 day disclosure timeline.

(See also [Vulnerability Disclosure Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Vulnerability_Disclosure_Cheat_Sheet.html#initial-report).)
",2022-11-05 18:16:27,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.4,10,0,10,0,0,3,10,10,0,10,10,-1,0,10,10,0,0,8,11.0,91.0,3.0,24.0,4.0,0.0,0.0,0.0,381.0,351.0,931.0,6.0
marshmallow-code/webargs,https://github.com/marshmallow-code/webargs,1746,3908,2014-02-17,60,690,982,1376,1376,158,22,https://api.github.com/repos/marshmallow-code/webargs/contents/SECURITY.md,"# Security Contact Information

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure.
",2024-01-30 16:51:09,['Reporting mechanism'],external,6.5,10,3,10,0,5,10,10,10,0,10,10,10,0,0,10,-1,0,10,0.0,22.0,0.0,0.0,28.0,0.0,0.0,46.0,61.0,38.0,24.0,0.0
materialsproject/pymatgen,https://github.com/materialsproject/pymatgen,25725,4755,2011-10-23,248,2704,4048,1505,1505,864,111,https://api.github.com/repos/materialsproject/pymatgen/contents/SECURITY.md,"# Security Policy

## Supported Versions

We only provide active support for the [latest release](https://pypi.org/project/pymatgen).

## Reporting a Vulnerability

Please submit any vulnerabilities or bug reports via [GitHub private vulnerability reporting](https://github.com/materialsproject/pymatgen/security/advisories/new).

## Previously Known Vulnerabilities

* [CVE-2024-23346](https://github.com/materialsproject/pymatgen/security/advisories/GHSA-vgv8-5cpj-qj2f)
",2020-08-19 19:57:47,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'History of vulnerability']",advisory,7.0,10,3,10,0,2,10,10,10,0,9,10,10,0,1,10,-1,10,9,0.0,22.0,0.0,0.0,28.0,0.0,0.0,46.0,61.0,38.0,24.0,0.0
matrix-org/sydent,https://github.com/matrix-org/sydent,891,3732,2014-08-11,40,416,590,297,297,83,36,https://api.github.com/repos/matrix-org/.github/contents/SECURITY.md,"# Reporting a Vulnerability

**If you've found a security vulnerability, please report it to security@matrix.org**.

For more information on our security disclosure policy, visit https://www.matrix.org/security-disclosure-policy/.
",2020-09-08 20:31:18,['Reporting mechanism'],email,4.6,10,1,7,0,3,10,10,10,0,10,0,10,0,0,10,-1,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,15.0,23.0,22.0,0.0
matrix-org/synapse,https://github.com/matrix-org/synapse,23441,3732,2014-08-11,376,10053,16616,11821,11821,2130,244,https://api.github.com/repos/matrix-org/.github/contents/SECURITY.md,"# Reporting a Vulnerability

**If you've found a security vulnerability, please report it to security@matrix.org**.

For more information on our security disclosure policy, visit https://www.matrix.org/security-disclosure-policy/.
",2020-09-08 20:31:18,['Reporting mechanism'],email,4.8,10,3,10,0,4,10,10,10,0,10,0,10,0,5,10,0,0,0,2.0,12.0,1.0,0.0,8.0,0.0,0.0,0.0,185.0,63.0,99.0,3.0
mattupstate/flask-security,https://github.com/mattupstate/flask-security,933,4619,2012-03-07,107,351,881,1631,1631,512,66,https://api.github.com/repos/pallets-eco/.github/contents/SECURITY.md,"# Security Policy

If you believe you have identified a security issue with a Pallets-Eco project,
**do not open a public issue**. To responsibly report a security issue, use
GitHub's [security advisory system][gh-docs]. From the project's repository,
click ""Security"" at the top, then click ""Advisories"" at the left, then click the
green ""New draft security advisory"" button. Alternatively, you may email
[security@palletsprojects.com](mailto:security@palletsprojects.com), and we will
convert that to a GitHub security advisory.

Be sure to include as much detail as necessary in your report. As with reporting
normal issues, a minimal reproducible example will help the maintainers address
the issue faster. Information about why the issue is a security issue is also
helpful. If you are able, you may also provide a fix for the issue.

A maintainer will reply acknowledging the report and how to continue. We will
obtain a CVE id as well, please do not do this on your own. We will work with
you to attempt to understand the issue and decide on its validity. Maintainers
are volunteers working in their free time, and therefore cannot guarantee any
specific timeline. Please be patient during this process.

The current feature release will receive security fixes. Fixes to older versions
may be considered based on usage information and severity, but are not
guaranteed. After fixing an issue, we will make a new release.

[gh-docs]: https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/creating-a-repository-security-advisory
",2024-02-09 20:30:27,['Generic policy'],email_advisory,5.1,10,6,0,0,9,10,-1,0,0,10,0,-1,-1,0,9,-1,-1,10,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,38.0,146.0,411.0,0.0
microchiptech/cryptoauthlib,https://github.com/microchiptech/cryptoauthlib,127,2538,2017-11-17,8,83,389,379,379,221,40,https://api.github.com/repos/microchiptech/cryptoauthlib/contents/SECURITY.md,"# Security Policy

We take the security of cryptoauthlib very seriously. Please submit security vulnerabilities to
the Microchip Product Security Incident Response Team (PSIRT) which is responsible for receiving
and responding to reports of potential security vulnerabilities in our products, as well as in 
any related hardware, software, firmware, and tools. Please see below for instructions on how
to submit your report.

## Supported Versions

The previous API version is maintained for a year after a new version is released.

| Version | Supported          | Notes |
| ------- | ------------------ | ----- |
| 3.7.x   | :heavy_check_mark: |       |
| 3.6.x   | :heavy_check_mark: | Support Ends September 8 2024  |
| 3.5.x   | :heavy_check_mark: | Support Ends April 4 2024  |
| 3.4.x   | :heavy_check_mark: | Support Ends March 14 2024 |
| 3.3.x   | :x:                |       |
| 3.2.x   | :x:                |       |
| < 3.2   | :x:                |       |

## Reporting a Vulnerability

[How to Report Potential Product Security Vulnerabilities](https://www.microchip.com/design-centers/embedded-security/how-to-report-potential-product-security-vulnerabilities)

Once a report is received, the PSIRT will take the necessary steps to review the issue
and determine what actions might be required to address any potential impacts to our products.
Microchip PSIRT follows a coordinated vulnerability responsible disclosure policy that is available
for review.

Please use the above instructions to securely submit your findings - We ask that you refrain from 
reporting vulnerabilties through the public github issues system.
",2021-03-21 03:07:46,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",external,5.9,10,6,0,0,0,3,10,10,0,9,10,10,0,0,10,-1,0,10,0.0,39.0,0.0,1.0,2.0,0.0,0.0,0.0,60.0,11.0,11.0,0.0
microcosm-cc/bluemonday,https://github.com/microcosm-cc/bluemonday,356,3996,2013-11-20,28,94,204,3195,3195,175,37,https://api.github.com/repos/microcosm-cc/bluemonday/contents/SECURITY.md,"# Security Policy

## Supported Versions

Latest tag and tip are supported.

Changes are not backported, please verify any issue against the latest tag and tip.

## Reporting a Vulnerability

Report vulnerabilities either via [GitHub's private reporting flow](https://github.com/microcosm-cc/bluemonday/security/advisories/new) or via email to the security@ alias of geomys.org.

There is no bug bounty program but security issues will be taken seriously and resolved as soon as possible.
",2021-03-29 08:09:19,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_advisory,5.8,10,0,7,0,2,10,10,10,0,10,0,-1,0,0,10,-1,10,10,0.0,54.0,6.0,0.0,2.0,0.0,0.0,0.0,308.0,397.0,244.0,1.0
microsoft/mssql-django,https://github.com/microsoft/mssql-django,813,1470,2020-10-20,43,204,416,347,347,112,24,https://api.github.com/repos/microsoft/mssql-django/contents/SECURITY.md,"# Security

Microsoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).

If you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc751383(v=technet.10)), please report it to us as described below.

## Reporting Security Issues

**Please do not report security vulnerabilities through public GitHub issues.**

Instead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://msrc.microsoft.com/create-report).

If you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://www.microsoft.com/en-us/msrc/pgp-key-msrc).

You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). 

Please include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:

  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)
  * Full paths of source file(s) related to the manifestation of the issue
  * The location of the affected source code (tag/branch/commit or direct URL)
  * Any special configuration required to reproduce the issue
  * Step-by-step instructions to reproduce the issue
  * Proof-of-concept or exploit code (if possible)
  * Impact of the issue, including how an attacker might exploit the issue

This information will help us triage your report more quickly.

If you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://microsoft.com/msrc/bounty) page for more details about our active programs.

## Preferred Languages

We prefer all communications to be in English.

## Policy

Microsoft follows the principle of [Coordinated Vulnerability Disclosure](https://www.microsoft.com/en-us/msrc/cvd).

<!-- END MICROSOFT SECURITY.MD BLOCK -->",2020-11-30 22:12:08,"['Generic policy', 'Reporting mechanism', 'Additional information', 'User guideline']",email_external,5.6,10,6,10,0,7,10,10,0,0,9,0,-1,0,10,10,-1,0,10,23.0,168.0,15.0,35.0,6.0,0.0,0.0,4.0,1210.0,837.0,748.0,7.0
microsoft/onefuzz,https://github.com/microsoft/onefuzz,2167,1555,2020-07-27,33,2666,3594,2825,2825,199,90,https://api.github.com/repos/microsoft/onefuzz/contents/SECURITY.md,"<!-- BEGIN MICROSOFT SECURITY.MD V0.0.5 BLOCK -->

## Security

Microsoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).

If you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc751383(v=technet.10)), please report it to us as described below.

## Reporting Security Issues

**Please do not report security vulnerabilities through public GitHub issues.**

Instead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://msrc.microsoft.com/create-report).

If you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://www.microsoft.com/en-us/msrc/pgp-key-msrc).

You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). 

Please include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:

  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)
  * Full paths of source file(s) related to the manifestation of the issue
  * The location of the affected source code (tag/branch/commit or direct URL)
  * Any special configuration required to reproduce the issue
  * Step-by-step instructions to reproduce the issue
  * Proof-of-concept or exploit code (if possible)
  * Impact of the issue, including how an attacker might exploit the issue

This information will help us triage your report more quickly.

If you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://microsoft.com/msrc/bounty) page for more details about our active programs.

## Preferred Languages

We prefer all communications to be in English.

## Policy

Microsoft follows the principle of [Coordinated Vulnerability Disclosure](https://www.microsoft.com/en-us/msrc/cvd).

<!-- END MICROSOFT SECURITY.MD BLOCK -->",2020-07-27 22:23:46,"['Generic policy', 'Reporting mechanism', 'Additional information', 'User guideline']",email_external,6.0,9,8,10,2,10,10,10,10,10,10,0,-1,1,7,10,0,0,0,0.0,4.0,1.0,0.0,0.0,0.0,0.0,0.0,34.0,25.0,106.0,0.0
miguelgrinberg/python-engineio,https://github.com/miguelgrinberg/python-engineio,694,3418,2015-06-21,45,150,360,233,233,148,13,https://api.github.com/repos/miguelgrinberg/python-engineio/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

If you think you've found a vulnerability on this project, please send me (Miguel Grinberg) an email at mailto:miguel.grinberg@gmail.com with a description of the problem. I will personally review the issue and respond to you with next steps.

If the issue is highly sensitive, you are welcome to encrypt your message. Here is my [PGP key](http://pgp.mit.edu/pks/lookup?search=miguel.grinberg%40gmail.com&op=index).

Please do not disclose vulnerabilities publicly before discussing how to proceed with me.
",2021-07-04 11:03:21,"['Generic policy', 'Reporting mechanism']",email,4.4,10,0,0,0,0,3,10,10,0,10,10,-1,0,0,10,-1,0,0,5.0,127.0,12.0,1.0,1.0,0.0,0.0,0.0,186.0,609.0,231.0,1.0
mindsdb/mindsdb,https://github.com/mindsdb/mindsdb,18769,2280,2018-08-02,385,5532,9585,26703,26703,4869,400,https://api.github.com/repos/mindsdb/mindsdb/contents/SECURITY.md,"# MindsDB Security Policy

At MindsDB, we consider the security of our systems a top priority. However, no matter how much effort we put into system security, there can still be vulnerabilities present.
Supported Versions

MindsDB only offers security patches for the following versions

| Version | Supported          |
| ------- | ------------------ |
| >=23.6.1.1  | :white_check_mark: |

### Reporting a Vulnerability

If you discover a security vulnerability, we appreciate your efforts to responsibly disclose your findings by sending an email to hello@mindsdb.com, providing as much detail as you can. Please do not publicly disclose these details without express consent from us.

Upon receiving your email, our security team will assess and respond to your report. We strive to keep all communication channels open with you to address your report effectively.
Disclosure Policy

Once we have received and evaluated your vulnerability report, MindsDB commits to:

* Confirm the receipt of your report
* Assess the vulnerability report to confirm its validity
* Work on a fix and update the impacted versions
* Publicly disclose the vulnerability after it has been addressed, giving credit to the reporter if they wish

### Comments on this Policy

If you have any suggestions to improve this policy, please let us know. We are committed to ensuring that our policy works effectively for everyone involved.

Thank you for helping to make MindsDB safer for everyone.
",2023-06-19 11:29:48,"['Scope of practice', 'Reporting mechanism', 'User guideline']",email,5.1,10,4,10,0,10,10,0,10,0,9,10,-1,0,3,10,-1,0,0,0.0,6.0,0.0,0.0,1.0,0.0,0.0,0.0,214.0,130.0,40.0,12.0
mirahezebots/mirahezebots,https://github.com/mirahezebots/mirahezebots,1751,2650,2017-07-28,19,823,823,11,11,11,9,https://api.github.com/repos/mirahezebots/mirahezebots/contents/SECURITY.md,"# Security Policy

## Supported Versions

We currently support with security releases: the lastest PyPi version on the Release branch, and the Dev branch when running sopel 7.1.2 - 8.0 on python 3.8+.


## Reporting a Vulnerability


To report a Security Vulnerability or issue, we ask that you please email any applicable information to: staff[at]fossbots.org.

Please note that by doing this you agree to disclose your email address, and/or any information provided in the email header.

At a minimum, we ask that you provide, context to the finding of the vulnerability/issue, steps to recreate the vulnerability/issue, and if you have a potiental solution.

Please do note every effort will be done to respect your privacy, however, please do note the following:

By using this project or contacting us, you agree that your details can be used in accordance with our Privacy Policy (https://fossbots.org/privacy.html).
",2019-10-04 18:29:26,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,4.9,10,3,0,0,0,10,10,10,0,9,0,-1,0,7,10,-1,0,7,0.0,25.0,1.0,0.0,0.0,0.0,0.0,0.0,109.0,295.0,75.0,1.0
mirahezebots/sopel-channelmgnt,https://github.com/mirahezebots/sopel-channelmgnt,389,1486,2020-10-04,8,306,306,0,0,3,2,https://api.github.com/repos/mirahezebots/sopel-channelmgnt/contents/SECURITY.md,"# Security Policy

## Supported Versions

We currently support with security releases: the lastest PyPi version on the Release branch, and the Dev branch when running sopel 7.0.7 - 8.0 on python 3.7, 3.8, 3.9 and 3.10.


## Reporting a Vulnerability


To report a Security Vulnerability or issue, we ask that you please email any applicable information to: staff[at]fossbots.org.

Please note that by doing this you agree to disclose your email address, and/or any information provided in the email header.

At a minimum, we ask that you provide, context to the finding of the vulnerability/issue, steps to recreate the vulnerability/issue, and if you have a potiental solution.

Please do note every effort will be done to respect your privacy, however, please do note the following:

By using this project or contacting us, you agree that your details can be used in accordance with our Privacy Policy (https://fossbots.org/privacy).
",2020-11-28 17:48:35,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.2,10,3,0,0,0,10,10,10,0,9,0,-1,0,7,10,-1,0,10,0.0,2.0,0.0,2.0,2.0,0.0,0.0,0.0,71.0,209.0,94.0,1.0
misp/misp-maltego,https://github.com/misp/misp-maltego,131,3169,2016-02-25,4,4,61,170,170,46,26,https://api.github.com/repos/misp/misp-maltego/contents/SECURITY.md,"For security issues, please refer to the instructions in the main MISP repository: https://github.com/MISP/MISP/
",2021-10-29 11:40:30,[],external,3.0,10,0,0,0,0,3,-1,0,0,10,0,-1,0,0,9,-1,-1,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,13.0,23.0,0.0
mitmproxy/mitmproxy,https://github.com/mitmproxy/mitmproxy,10749,5369,2010-02-16,403,2987,6368,36625,36625,4026,625,https://api.github.com/repos/mitmproxy/mitmproxy/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version             | Supported          |
| ------------------- | ------------------ |
| main branch         | :white_check_mark: |
| most recent release | :white_check_mark: |
| older releases      | :x:                |

## Reporting a Vulnerability

We ask that you do not report security issues to our normal GitHub issue tracker.

If you believe you've identified a security issue with mitmproxy,
please report it to [@mhils](https://github.com/mhils), [@Kriechi](https://github.com/Kriechi), and/or [@cortesi](https://github.com/cortesi) 
via the email addresses listed on their GitHub profiles.

Once you've submitted an issue via email, 
you should receive an acknowledgment within 48 hours, and depending on the action to be taken, you may receive further follow-up emails.
",2021-09-13 14:34:33,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.2,6,3,10,0,8,10,10,10,0,10,10,10,2,3,10,-1,0,4,5.0,21.0,2.0,1.0,0.0,0.0,0.0,0.0,492.0,216.0,364.0,2.0
miurahr/py7zr,https://github.com/miurahr/py7zr,1825,2054,2019-03-17,47,377,583,458,458,72,13,https://api.github.com/repos/miurahr/py7zr/contents/docs/SECURITY.rst,"Security Policy
===============

Supported Versions
------------------

+---------+---------------------+
| Version | Status              |
+=========+=====================+
| 1.0.x   | Stable version      |
+---------+---------------------+
| < 1.0.0 | not supported       |
+---------+---------------------+

Reporting a Vulnerability
-------------------------

Please disclose security vulnerabilities privately at miurahr@linux.com
",2022-11-14 05:21:33,[],email,6.7,8,3,8,0,4,10,10,10,0,10,10,10,0,9,10,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0,203.0,58.0,0.0
mlflow/mlflow,https://github.com/mlflow/mlflow,6682,2338,2018-06-05,455,9370,13292,18636,18636,4221,303,https://api.github.com/repos/mlflow/mlflow/contents/SECURITY.md,"# Security Policy

MLflow and its community take security bugs seriously. We appreciate efforts to improve the security of MLflow
and follow the [GitHub coordinated disclosure of security vulnerabilities](https://docs.github.com/en/code-security/security-advisories/about-coordinated-disclosure-of-security-vulnerabilities#about-reporting-and-disclosing-vulnerabilities-in-projects-on-github)
for responsible disclosure and prompt mitigation. We are committed to working with security researchers to
resolve the vulnerabilities they discover.

## Supported Versions

The latest version of MLflow has continued support. If a critical vulnerability is found in the current version
of MLflow, we may opt to backport patches to previous versions.

## Reporting a Vulnerability

When finding a security vulnerability in MLflow, please perform the following actions:

- [Open an issue](https://github.com/mlflow/mlflow/issues/new?assignees=&labels=bug&template=bug_report_template.md&title=%5BBUG%5D%20Security%20Vulnerability) on the MLflow repository. Ensure that you use `[BUG] Security Vulnerability` as the title and _do not_ mention any vulnerability details in the issue post.
- Send a notification [email](mailto:mlflow-oss-maintainers@googlegroups.com) to `mlflow-oss-maintainers@googlegroups.com` that contains, at a minimum:
  - The link to the filed issue stub.
  - Your GitHub handle.
  - Detailed information about the security vulnerability, evidence that supports the relevance of the finding and any reproducibility instructions for independent confirmation.

This first stage of reporting is to ensure that a rapid validation can occur without wasting the time and effort of a reporter. Future communication and vulnerability resolution will be conducted after validating
the veracity of the reported issue.

An MLflow maintainer will, after validating the report:

- Acknowledge the [bug](ISSUE_POLICY.md#bug-reports) during [triage](ISSUE_TRIAGE.rst)
- Mark the issue as `priority/critical-urgent`
- Open a draft [GitHub Security Advisory](https://docs.github.com/en/code-security/security-advisories/creating-a-security-advisory)
  to discuss the vulnerability details in private.

The private Security Advisory will be used to confirm the issue, prepare a fix, and publicly disclose it after the fix has been released.
",2022-02-11 06:57:43,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_issue,7.2,10,4,10,0,9,10,10,10,0,10,10,10,-1,0,10,-1,9,0,0.0,1.0,0.0,0.0,6.0,0.0,0.0,0.0,22.0,25.0,90.0,0.0
mobsf/mobile-security-framework-mobsf,https://github.com/mobsf/mobile-security-framework-mobsf,1966,3559,2015-01-31,84,885,2373,17347,17347,3224,578,https://api.github.com/repos/mobsf/mobile-security-framework-mobsf/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
| ------- | ------------------ |
| 1.0.x   | :x:                |
| 2.0.x   | :x:                |
| 3.0.x   | :white_check_mark: |
| 4.0.x   | :white_check_mark: |


## Reporting a Vulnerability

Please report all security issues [here](https://github.com/MobSF/Mobile-Security-Framework-MobSF/issues) or email ajin25(gmail). We believe in coordinated and responsible disclosure.

## Past Security Issues

| Vulnerability | Affected Versions |
| ------- | ------------------ |
| [Zip Slip Vulnerability in .a extraction](https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-4hh3-vj32-gr6j) | `<=4.0.6` |
| [Open Redirect in Login redirect](https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-8m9j-2f32-2vx4) | `<=4.0.4` |
| [SSRF in firebase database check](https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-wpff-wm84-x5cx) | `<=3.9.7` |
| [SSRF in AppLink check via abusing url redirect](https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-m435-9v6r-v5f6) | `<=3.9.6` |
| [SSRF in AppLink check via crafted android:host](https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-wfgj-wrgh-h3r3) | `<=3.9.5`|
| [Arbitrary Local file read in APK icon resource](https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/a58f8a8c0aa49e1581d97e19e8e2255ca96cd838)  | `>=1.0.4, <=3.9.2` |
| [Remote Code Execution via arbitrary file overwrite vulnerability in apktool <2.9.2](https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/19c1b55c2c59596f2d43439926c9dc976cbeaec4),  [[CVE-2024-21633]](https://github.com/0x33c0unt/CVE-2024-21633) | `<=3.9.1` |
| [Arbitrary Local file read regression](https://github.com/MobSF/Mobile-Security-Framework-MobSF/issues/1197)  | `<3.0.0` |
| [Upload a malicious zip file can overwrite arbitary files](https://github.com/MobSF/Mobile-Security-Framework-MobSF/issues/358)  | `>=0.9.3.2, <=0.9.4.1` |
| [Arbitrary Local file read](https://github.com/MobSF/Mobile-Security-Framework-MobSF/pull/166) | `<=0.9.2` |

",2021-01-17 06:47:49,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'History of vulnerability']",email_issue,6.5,2,8,10,0,1,10,10,10,0,10,10,10,0,10,10,-1,0,10,18.0,943.0,67.0,9.0,3.0,4.0,0.0,2.0,2777.0,9323.0,5064.0,8.0
modoboa/modoboa,https://github.com/modoboa/modoboa,4992,4214,2013-04-16,86,1065,2903,3050,3050,395,92,https://api.github.com/repos/modoboa/modoboa/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
| ------- | ------------------ |
| 2.x     | :white_check_mark: |
| 1.x     | :x:                |

## Reporting a Vulnerability

Due to sensitive nature of security issues, we ask that they not be publicly reported using Github issues. Instead, if you believe 
you’ve found something in Modoboa which has security implications, please send a description of the issue via email to security@modoboa.org.

Once you’ve submitted an issue via email, you should receive an acknowledgment from the team as soon as possible, 
and depending on the action to be taken, you may receive further followup emails.
",2023-01-17 08:35:46,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.2,9,3,2,0,2,10,10,10,0,10,10,10,0,0,10,-1,0,0,3.0,32.0,1.0,4.0,13.0,0.0,0.0,1.0,2741.0,1097.0,342.0,28.0
moggers87/django-sendfile2,https://github.com/moggers87/django-sendfile2,188,2415,2018-03-20,21,37,62,83,83,15,6,https://api.github.com/repos/moggers87/django-sendfile2/contents/SECURITY.rst,"Security
========

django-sendfile2 is written in as secure a manner as possible and assumes that
it is operating in a hostile environment. If you find django-sendfile2 doesn't
behave correctly given that constraint then please email
`security@moggers87.co.uk <security@moggers87.co.uk>`__. If you want to send an
encrypted report, then please use key id 0x878B5A2A1D47C084.

django-sendfile2 follows the same security reporting model that has worked for
other open source projects: If you report a security vulnerability, it will be
acted on immediately and a fix with complete full disclosure will go out to
everyone at the same time.
",2019-10-04 23:31:48,[],email,3.8,10,3,0,0,1,10,10,0,0,10,0,-1,0,0,10,0,0,10,3.0,9.0,1.0,6.0,59.0,0.0,0.0,0.0,636.0,267.0,373.0,11.0
moinwiki/moin,https://github.com/moinwiki/moin,5357,2266,2018-08-16,63,722,1784,305,305,92,26,https://api.github.com/repos/moinwiki/moin/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported                         |
| ------- | --------------------------------- |
| 2.0.x   | :x: (still in alpha/beta testing) |

## Reporting a Vulnerability

Please report vulnerabilities privately via Github:

https://github.com/moinwiki/moin/security

We will try to give you feedback and fix issues as soon as possible.
",2024-04-04 21:27:31,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,5.8,10,3,10,0,7,10,10,0,0,9,10,-1,0,0,10,8,0,10,5.0,53.0,16.0,0.0,2.0,0.0,0.0,1.0,436.0,391.0,509.0,12.0
mozilla/bleach,https://github.com/mozilla/bleach,925,5367,2010-02-19,66,358,736,2651,2651,252,45,https://api.github.com/repos/mozilla/bleach/contents/SECURITY.md,"# Security Policy

## Supported Versions

Use this section to tell people about which versions of your project are
currently being supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| 4.1.x   | :white_check_mark: |
| < 4     | :x:                |

## Reporting a Vulnerability

If you believe that you've found a security vulnerability, please [file a secure
bug report in our bug tracker](https://bugzilla.mozilla.org/enter_bug.cgi?assigned_to=nobody%40mozilla.org&product=Webtools&component=Bleach-security&groups=webtools-security) or send an email to *security AT mozilla DOT org*.

For more information on security-related bug disclosure and the PGP key to use
for sending encrypted mail or to verify responses received from that address,
please read our wiki page at https://www.mozilla.org/en-US/security/#For_Developers
",2019-12-03 22:17:09,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_external,6.8,10,8,9,0,0,10,10,10,10,9,10,-1,0,0,10,-1,0,10,1.0,54.0,8.0,3.0,0.0,0.0,0.0,0.0,523.0,501.0,633.0,31.0
mysql/mysql-connector-python,https://github.com/mysql/mysql-connector-python,1225,3742,2014-08-01,17,98,98,876,876,299,67,https://api.github.com/repos/mysql/mysql-connector-python/contents/SECURITY.md,"# Reporting security vulnerabilities

Oracle values the independent security research community and believes that
responsible disclosure of security vulnerabilities helps us ensure the security
and privacy of all our users.

Please do NOT raise a GitHub Issue to report a security vulnerability. If you
believe you have found a security vulnerability, please submit a report to
secalert_us@oracle.com preferably with a proof of concept. Please review
some additional information on how to report security vulnerabilities to Oracle
(see https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html)
We encourage people who contact Oracle Security to use email encryption using
our encryption key (see https://www.oracle.com/security-alerts/encryptionkey.html)

We ask that you do not use other channels or contact the project maintainers
directly.

# Security updates, alerts and bulletins

Security updates will be released on a regular cadence. Many of our projects
will typically release security fixes in conjunction with the Oracle Critical Patch
Update program. Additional information, including past advisories, is available on our
security alerts page at https://www.oracle.com/security-alerts/

# Security-related information

We will provide security related information such as a threat model, considerations
for secure use, or any known security issues in our documentation. Please note
that labs and sample code are intended to demonstrate a concept and may not be
sufficiently hardened for production use.",2024-09-13 15:01:19,"['Reporting mechanism', 'Projects practice', 'User guideline']",email,4.4,10,0,-1,0,0,10,-1,0,0,9,10,-1,0,0,10,-1,-1,10,91.0,968.0,27.0,513.0,19.0,0.0,0.0,0.0,1853.0,3424.0,523.0,69.0
nautobot/nautobot,https://github.com/nautobot/nautobot,11065,1348,2021-02-19,248,3038,6099,1046,1046,277,38,https://api.github.com/repos/nautobot/nautobot/contents/SECURITY.md,"# Nautobot Security Policy

## Security Announcements

Join the #nautobot channel in the Network to Code Slack for messages about security and release announcements.

## Report a Vulnerability

We appreciate the time security researchers and users contribute to reporting vulnerabilities to the Nautobot Community.

If you feel your report is safe for public disclosure (a CVE related to a dependency, or a low-risk bug) please feel free to open a bug [issue on GitHub](https://github.com/nautobot/nautobot/issues/new/choose).

If you are unsure of the severity of your report or you feel it should not be publicly disclosed until a fix has been released, you can also email [security@nautobot.com](mailto:security@nautobot.com) with the security details.

You may encrypt your email with the GPG keys of the security response members below. While accepted, encryption using GPG is NOT mandatory to make a disclosure.

## When Should I Report a Vulnerability?

- You think you discovered a potential security vulnerability in Nautobot
- You are unsure how a vulnerability affects Nautobot
- You think you discovered a vulnerability in another project that Nautobot depends on

## When Should I NOT Report a Vulnerability?

- You need help configuring Nautobot security settings (such as external auth)
- You need help applying security related updates
- Your issue is not security related

## Security Vulnerability Response

Each report is acknowledged and analyzed by security response members within five (5) working days.

Any vulnerability information shared with security response members stays within the Nautobot project and will not be disseminated to other projects unless it is necessary to get the issue fixed.

As the security issue moves from triage, to identified fix, to release planning we will keep the reporter updated.

## Public Disclosure Timing

A public disclosure date is negotiated by the Nautobot maintainers and the bug submitter. We prefer to fully disclose the bug as soon as possible once a user mitigation is available. It is reasonable to delay disclosure when the bug or the fix is not yet fully understood, the solution is not well-tested, or for vendor coordination. The timeframe for disclosure is from immediate (especially if it's already publicly known) to a few weeks. For a vulnerability with a straightforward mitigation, we expect report date to disclosure date to be on the order of ten (10) days. The Nautobot maintainers hold the final say when setting a disclosure date.

Disclosures, regardless of outcome, [will be published on GitHub](https://github.com/nautobot/nautobot/issues?q=label%3A%22security+disclosure%22) with the label ""security disclosure"".

## Team

Below are the current team members responsible for receiving and triaging Nautobot security issues.

- Glenn Matthews (**[@glennmatthews](https://github.com/glennmatthews)**) `<glenn.matthews@networktocode.com>` [[4096R/C3DF1C5D9727F82ACF8F743238BF0D0E68B9F76C]](https://keybase.io/glennmatthews/pgp_keys.asc)
- Bryan Culver (**[@bryanculver](https://github.com/bryanculver)**) `<bryan.culver@networktocode.com>` [[4096R/810BA9FC788A8B2C9EB9559C834D7494DEDB1DD8]](https://keybase.io/bryanculver/pgp_keys.asc)
- John Anderson (**[@lampwins](https://github.com/lampwins)**) `<john.anderson@networktocode.com>`
- Jonathan Swisher (**[@LoneStar-Swish](https://github.com/LoneStar-Swish)**) `<jonathan.swisher@networktocode.com>` [[4096R/E0B0E95E80BF2E652BABA4C67BC452A3795882D6]](https://keybase.io/jswisher/pgp_keys.asc)
",2022-01-24 19:23:27,"['Generic policy', 'User guideline', 'Reporting mechanism', 'User guideline', 'User guideline', 'Projects practice', 'Projects practice', 'Information on maintainer']",email,6.8,10,8,10,0,10,10,10,10,0,10,10,10,0,0,10,0,0,10,4.0,325.0,28.0,7.0,0.0,0.0,0.0,0.0,831.0,3505.0,5281.0,12.0
nautobot/nautobot-plugin-device-onboarding,https://github.com/nautobot/nautobot-plugin-device-onboarding,646,1348,2021-02-20,34,154,263,44,44,31,18,https://api.github.com/repos/nautobot/.github/contents/SECURITY.md,"# Nautobot Security Policy

Security policy can be found in [the Nautobot project repo](https://github.com/nautobot/nautobot/blob/develop/SECURITY.md).
",2022-05-05 19:34:39,['Generic policy'],email_issue,6.0,10,1,10,0,8,10,10,10,0,9,10,10,0,0,9,0,0,9,2.0,15.0,0.0,1.0,31.0,0.0,0.0,0.0,42.0,74.0,79.0,0.0
nebari-dev/nebari,https://github.com/nebari-dev/nebari,1779,1670,2020-04-03,64,1153,2588,279,279,91,16,https://api.github.com/repos/nebari-dev/nebari/contents/SECURITY.md,"# Security Policy

## Supported Versions

We support only the latest version, and we use [CalVer](https://calver.org/) for versioning.

You should feel comfortable upgrading if you're using our documented public APIs and pay attention to `DeprecationWarnings`. Whenever there is a need to break compatibility, it is announced in the [Changelog](https://www.nebari.dev/docs/references/RELEASE) and will raise a `DeprecationWarning` before it's finally really broken.

## Reporting a Vulnerability

If you think you found a vulnerability, please report it at [nebari/security](https://github.com/nebari-dev/nebari/security/advisories/new). Please do not report security vulnerabilities on our public issue tracker. Exposing vulnerabilities publicly without giving maintainers a chance to release a fix puts users at risk.
",2024-03-21 00:48:49,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,7.6,10,6,10,0,10,10,10,10,0,10,10,10,0,9,10,-1,0,10,80.0,72.0,27.0,47.0,19.0,0.0,0.0,1.0,2805.0,2029.0,2363.0,28.0
netflix/lemur,https://github.com/netflix/lemur,6483,3423,2015-06-16,120,4386,4927,1721,1721,323,424,https://api.github.com/repos/netflix/lemur/contents/docs/security.rst,"Security
========

We take the security of ``lemur`` seriously. The following are a set of
policies we have adopted to ensure that security issues are addressed in a
timely fashion.

Reporting a security issue
--------------------------

We ask that you do not report security issues to our normal GitHub issue
tracker.

If you believe you've identified a security issue with ``lemur``, please
report it using GitHub's `private vulnerability reporting process`_
in the [Lemur repository](https://github.com/Netflix/lemur/security/advisories/new).

Once you've submitted a report, you should receive an acknowledgment
within 48 hours, and depending on the action to be taken, you may receive
further follow-up.

Supported Versions
------------------

At any given time, we will provide security support for the `main`_ branch
as well as the most recent release.

Disclosure Process
------------------

Our process for taking a security issue from private discussion to public
disclosure involves multiple steps. Our standard process utilizes a GitHub Security Advisory.

The general process is as follows:

1. Receive a private report of a security issue via the `private vulnerability reporting process`_
2. Acknowledge receipt of the report
3. Post advance notice to the GitHub repo indicating that a security issue exists
4. Prepare a `GitHub Security Advisory`_
5. Merge code fix
6. Make Security Advisory public

**Private report**

After receiving a private report of a security issue, the reporter will receive notification
of the date on which we plan to make the issue public.

**Advance Notice**

Approximately one week before full public disclosure, we will provide advance notification that a security issue exists.
This will take the form of an issue posted to the Lemur repository.
The notification should contain the following, as appropriate
(details will only be shared to the extent that they do not highlight an unpatched vulnerability):

* A description of the potential impact
* The affected versions of ``lemur``
* The steps we will be taking to remedy the issue
* The date on which the ``lemur`` team will apply these patches, issue
  new releases, and publicly disclose the issue

If a reported issue is believed to be particularly time-sensitive – due to a
known exploit in the wild, for example – the time between advance notification
and public disclosure may be shortened considerably.

**GitHub Security Advisory**

During the (approximate) week between advance notice and public disclosure, we will prepare
a description of the security issue using a `GitHub Security Advisory`_.
The fix for the issue should also be prepared using the private fork provided by the security advisory.

**Day of Disclosure**

On the day of disclosure, we will take the following steps:

1. Merge relevant patches to the ``lemur`` repository (from the security advisory fork)
2. Issue an updated release
3. Make the security advisory public

.. _`main`: https://github.com/Netflix/lemur
.. _GitHub Security Advisory: https://docs.github.com/en/code-security/security-advisories/repository-security-advisories/about-repository-security-advisories
.. _private vulnerability reporting process: https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability

Credential Rotation
-------------------
When the jwt signing key (`LEMUR_TOKEN_SECRET`) is rotated (due to compromise or as a regular operational task), there are a few options for migration to ensure the
security of the system:

1. **Immediate Key Replacement**: You can immediately replace the `LEMUR_TOKEN_SECRET` with a new securely generated
version. This will instantly invalidate all existing user sessions and API keys. While this might be necessary in case
of an active compromise, it is not the recommended approach due to the disruption it can cause to users and services.

2. **Gradual Key Rotation** (Recommended): This involves a more gradual and controlled process of secret rotation.
   - First, securely generate a new version of the secret.
   - Next, set `LEMUR_TOKEN_SECRETS` to a list containing both the new and the old secret, respectively.
   - Once this configuration is deployed, new user sessions will gradually start using the new secret as their sessions expire. The expiration of sessions is controlled by the `LEMUR_TOKEN_EXPIRATION` configuration option.
   - You can monitor this transition using `jwt_decode` metrics, which include tags for `kid` and `fingerprint`. These metrics can help in monitoring the versioned migration of sessions to the new secret.
   - For long lived (or infinite TTL API keys), you will need to create equivalent API keys and distribute them to your clients once the new token secret is added to the beginning of LEMUR_TOKEN_SECRETS. Again, you can monitor migration with the provided kid and fingerprint metrics. Additionally, all claims of the jwt are added as metric tags so you can monitor migration of individual API keys.
   - Once the metrics indicate that the old secret is no longer in use, or the TTL (Time to Live) for all sessions and API keys derived from the old secret has been exceeded, you can safely remove the old secret from the `LEMUR_TOKEN_SECRETS` configuration.

This approach ensures a smooth transition to the new secret without disrupting active user sessions or API keys. It also provides a way to monitor the migration and ensure that the old secret is completely phased out before it is removed.
",2015-10-24 18:18:27,[],advisory,7.5,10,8,10,0,10,10,10,10,0,10,10,10,0,10,10,-1,0,6,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,23.0,18.0,9.0,0.0
neutronx/django-markdownx,https://github.com/neutronx/django-markdownx,462,3650,2014-11-01,27,111,274,856,856,153,24,https://api.github.com/repos/neutronx/django-markdownx/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

To report a vulnerability please send an e-mail to: nawalnica_spluczka0b@icloud.com
",2022-02-22 09:48:18,"['Generic policy', 'Reporting mechanism']",email,4.6,10,0,6,0,0,3,10,10,0,9,1,-1,0,0,10,-1,0,10,12.0,69.0,190.0,9.0,0.0,0.0,0.0,2.0,1323.0,806.0,369.0,6.0
nfstream/nfstream,https://github.com/nfstream/nfstream,1856,1838,2019-10-18,13,46,175,1082,1082,120,27,https://api.github.com/repos/nfstream/nfstream/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

NFStream following versions are currently being supported with security updates.

| Version   | Supported          |
| --------- | ------------------ |
| >=6.2.2   | :white_check_mark: |

## Reporting a Vulnerability

Please contact NFStream authors by emails on: aouinizied@gmail.com
",2020-11-15 04:10:23,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.1,10,6,4,0,2,10,10,10,10,10,0,-1,0,7,10,-1,0,8,91.0,968.0,27.0,513.0,19.0,0.0,0.0,0.0,1853.0,3424.0,523.0,69.0
ni/measurementlink-python,https://github.com/ni/measurementlink-python,771,1029,2022-01-04,34,853,1011,19,19,15,12,https://api.github.com/repos/ni/measurementlink-python/contents/SECURITY.md,"<!-- Begin NI SECURITY.md V1.0 -->

# Security

NI views the security of our software products as an important part of our commitment to our users.  This includes source code repositories managed through the [NI](https://github.com/ni) GitHub organization.

## Reporting Security Issues

We encourage you to report security vulnerabilities to us privately so we can follow the principle of [Coordinated Vulnerability Disclosure (CVD)](https://vuls.cert.org/confluence/display/CVD).  This allows us time to thoroughly investigate security issues and publicly disclose them when appropriate.

**Please do not report security vulnerabilities through public GitHub issues.**

Instead, please report them by sending an email to [security@ni.com](mailto:security@ni.com) with sufficient details about the type of issue, the impact of the issue, and how to reproduce the issue.  You may use the [NI PGP key](https://www.ni.com/en/support/security/pgp.html) to encrypt any sensitive communications you send to us. When you notify us of a potential security issue, our remediation process includes acknowledging receipt and coordinating any necessary response activities with you. 

## Learn More

To learn more about NI Security, please see [https://ni.com/security](https://ni.com/security)

<!-- End NI SECURITY.md -->",2024-01-04 20:15:16,"['Generic policy', 'Reporting mechanism', 'User guideline']",email,6.6,10,8,10,0,10,10,10,10,0,10,10,-1,0,0,10,0,0,10,0.0,16.0,5.0,0.0,0.0,0.0,0.0,0.0,141.0,5879.0,121.0,13.0
nicolargo/glances,https://github.com/nicolargo/glances,5930,4713,2011-12-04,161,893,2800,26719,26719,1529,502,https://api.github.com/repos/nicolargo/glances/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Support security updates |
| ------- | ------------------------ |
| 4.x     | :white_check_mark:       |
| < 4.0   | :x:                      |

## Reporting a Vulnerability

If there are any vulnerabilities in {{cookiecutter.project_name}}, don't hesitate to report them.

    1. Describe the vulnerability.

      * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)
      * Full paths of source file(s) related to the manifestation of the issue
      * The location of the affected source code (tag/branch/commit or direct URL)
      * Any special configuration required to reproduce the issue
      * Step-by-step instructions to reproduce the issue
      * Proof-of-concept or exploit code (if possible)
      * Impact of the issue, including how an attacker might exploit the issue

    2. If you have a fix, that is most welcome -- please attach or summarize it in your message!

    3. We will evaluate the vulnerability and, if necessary, release a fix or mitigating steps to address it. We will contact you to let you know the outcome, and will credit you in the report.

    4. Please do not disclose the vulnerability publicly until a fix is released!

Once we have either a) published a fix, or b) declined to address the vulnerability for whatever reason, you are free to publicly disclose it.
",2022-10-29 10:04:03,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",external,6.1,10,0,7,2,1,10,10,10,0,9,10,10,0,9,4,-1,0,10,4.0,6.0,2.0,2.0,0.0,0.0,0.0,0.0,269.0,161.0,224.0,1.0
nltk/nltk,https://github.com/nltk/nltk,14681,5531,2009-09-07,371,1494,3305,13564,13564,2887,463,https://api.github.com/repos/nltk/nltk/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please report security issues to `nltk.team@gmail.com`
",2021-09-24 12:22:07,"['Generic policy', 'Reporting mechanism']",email,5.2,10,0,9,0,5,10,10,0,0,10,10,-1,0,0,9,-1,0,10,0.0,3.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,3.0,1.0,0.0
nsupdate-info/nsupdate.info,https://github.com/nsupdate-info/nsupdate.info,1353,4045,2013-10-02,23,183,566,1041,1041,115,50,https://api.github.com/repos/nsupdate-info/nsupdate.info/contents/docs/security.rst,"=======================
Security considerations
=======================

Transmission security
=====================

Use https for the web interface as well as for the update client (if possible).

Otherwise, your username / password (FQDN / update secret) will be transmitted
in clear text (unencrypted).

The web interface will warn you if you use it via http. If WE_HAVE_TLS is
set to True, it will suggest you better use the https site and link there.

Additionally, the service administrator can implement a redirect from the
http to the https site within the webserver configuration for the WWW_HOST.
The redirect should **not** be implemented for WWW_IPV4_HOST and WWW_IPV6_HOST
as it is unknown whether all update clients can deal with a redirect (and
support TLS).

For the router / update client configuration examples we show when creating a
update secret, we use update URLs with https: (and we also tell why it might
not work).

On the hosts overview page, we show whether we received the last update via TLS.

Please note that if you like security, you also need to use https (with
certificate verification) if you use the web-based method to query your IP
address. If you use http, a powerful attacker could MITM your request and
tell you a wrong IP, which your updater then would happily write into DNS.


Login with remote vs. local Account
===================================

If you use a already existing remote account to log in into our service, you
don't need to create a local profile (with username, E-Mail and password).

That way, we need to store less information about you - especially no password
hash (and you also don't need to create a new password just for our service).
So, this is a little more safe if you just consider our service.

BUT: If you use some external service to log in, you of course need to trust
them for this purpose as *they* are telling ""yes, this is really you"".

Also, if you cancel the account on that external service and you don't have
a local profile (login, E-Mail, password) with us, you will be unable to log
in afterwards or recover access to your hosts/domains.

So maybe the best way is to first create a local profile (username, E-Mail,
password), then log in and associate your other remote accounts with that
local profile.


Passwords / Secrets / Keys
==========================

Interactive login password
--------------------------

We recommend that you use a rather strong and not guessable password for this.
Do not re-use passwords, use a password system or a password manager.

The interactive login password for the web site is stored using Django's
default hasher mechanism, which is currently pbkdf2 (a very strong and
intentionally slow password hash). Brute-Force attacks against such hashes are
very slow, much slower than against simple hashes like (s)sha1/sha256 etc.

It is NOT stored in clear text by nsupdate.info.

If you lose the password, you'll have to do a password reset via e-mail.


Automated update secret
-----------------------

The automated update secret for routers or other update clients is a
random and automatically generated secret. We store it using the sha1 hasher
of Django (which in fact is salted-sha1, a not very strong, but fast-to-compute
hash).

Considering that a lot of routers or update clients store this secret in clear
text in their configuration and often transmit it using unencrypted http (and
not https), this secret is not too safe anyway. We also wanted to save some cpu
cycles here and rather not use pbkdf2 for this regularly and automatically used
secret.

It is not stored in clear text by nsupdate.info.

If you lose the secret, you'll have to generate a new one and change it in your
update client also.

We use a random and automatically generated update secret to avoid that users
enter a bad password here (like reusing a password they use somewhere else,
choosing a too simple password) and to avoid disclosure of such user-chosen
passwords in case the hashes ever get stolen and brute forced.


Nameserver Update Secret (backend, RFC 2136)
--------------------------------------------

We currently store this secret (which is basically a base64 encoded shared secret,
one per dynamic zone) ""as is"" into the database (""Domain"" records there).

This is somehow critical, but also hard to do better - encryption would only
help very little here as we would need to decrypt the update secret before using it,
so we would need the unlocked decryption key on the same machine.

Make sure no unauthorized person gets that secret or he/she will be able to update
ANY record in the respective zone / nameserver directly (without going over
nsupdate.info software / service).

We support creating a random update secret, so you don't need an extra tool for this.


Other Services Update Secret (dyndns2 client)
---------------------------------------------

We need to store this secret ""as is"" into the database for the same reasons as
outlined above.

But: we tell you in the services overview whether we'll use TLS to transmit the
update, so at least if TLS is enabled, it won't go unencrypted over the wire.


CSRF protection
===============

We use Django's CSRF protection middleware.


Clickjacking protection
=======================

We use Django's clickjacking protection middleware.


XSS protection
==============

Django's templating engine html-escapes inputs by default.


Cookies
=======

The software (""as is"") uses these cookies:

* ""csrftoken"" (host-only, for CSRF protection)
* ""sessionid"" (host-only, to keep the session when you have logged-in to the
  web interface)

If you have set WE_HAVE_TLS to True (because you run the software on a https
site), you should also set *_COOKIE_SECURE to True to avoid the cookies getting
transmitted via http.

We use a session cookie by default (gets cleared when you close the browser).
If you check the ""Keep me logged in"" checkbox on the login screen, then we'll
set a permanent cookie with a lifetime as configured by the site admin
(SESSION_COOKIE_AGE, default: 14 days).

Be careful with domain cookies
------------------------------

The software (""as is"") does not use any domain cookies.

In case you modify the software, please be extremely cautious with domain
cookies and in case of doubt, do rather not use them.

If you use domain cookies (like for "".yourservice.net"", the leading dot
makes it a domain cookie), all hosts in that domain would be able to read
and write these cookies. Your site (at e.g. www.yourservice.net), but also
users' sites (like attacker.yourservice.net).

Obviously, this might lead to security issues with stealing, modifying and
faking domain cookies.


Django's SECRET_KEY
===================

Django's SECRET_KEY needs to be a long, random and secret string (it is
usually set up by the administrator of the site).

The builtin default settings will try to read SECRET_KEY from an environment
variable of same name. If there is no such environment variable, the SECRET_KEY
will be undefined.

You can also define the SECRET_KEY in your local_settings.py.

If you do not define a SECRET_KEY by one of these methods, the application
will refuse to start and give you an error, that a SECRET_KEY is required.
",2013-10-03 22:28:28,[],not_mentioned,4.5,10,3,1,0,0,10,10,10,0,9,10,-1,0,0,4,-1,0,0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,51.0,40.0,59.0,1.0
nuitka/nuitka,https://github.com/nuitka/nuitka,13013,4207,2013-04-23,167,430,2868,11948,11948,642,138,https://api.github.com/repos/nuitka/nuitka/contents/SECURITY.md,"# Security Policy

## Supported Versions

There are no LTS supported versions of Nuitka, but mostly the stable version is
hot-fixed, and would be for security issues. If possible, git rebases would be
done just as they are for corruption bugs, which would then allow to use these,
but usually newer Nuitka is the expected to use version, with main always being
as bug free as possible.

| Version | Supported          |
| ------- | ------------------ |
| main    | :white_check_mark: |
| develop | :white_check_mark: |

## Reporting a Vulnerability

When you email me at `kay.hayen@gmail.com` with a well defined report, I
guarantee a reaction within 72h, and correction as soon as possible. Generally
private emails are not acceptable for questions, there I would point to GitHub,
but for sensitive information only, it's great.
",2022-01-09 12:04:29,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.4,10,0,10,0,0,10,10,0,0,10,10,-1,0,0,9,-1,10,7,1.0,54.0,8.0,3.0,0.0,0.0,0.0,0.0,523.0,501.0,633.0,31.0
numpy/numpy,https://github.com/numpy/numpy,37322,5160,2010-09-13,433,14781,27612,27907,27907,10032,597,https://api.github.com/repos/numpy/.github/contents/SECURITY.md,"To report a security vulnerability to NumPy, please go to
https://tidelift.com/security and see the instructions there.

",2019-07-26 21:53:46,[],external,7.9,10,3,10,0,10,10,10,10,10,9,10,-1,3,9,9,0,9,10,10.0,54.0,1.0,3.0,0.0,0.0,0.0,0.0,905.0,470.0,286.0,2.0
oauthlib/oauthlib,https://github.com/oauthlib/oauthlib,1700,4728,2011-11-19,171,503,880,2813,2813,486,65,https://api.github.com/repos/oauthlib/oauthlib/contents/SECURITY.md,"# Security Policy

## Supported Versions

following versions are currently being supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| 3.2.x   | :white_check_mark: |
| 3.1.x   | :x:                |
| < 3.2.0 | :x:                |

## Reporting a Vulnerability
Contact auvipy@gmail.com for reporting any vulnerability.
",2022-08-30 04:13:24,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.1,10,6,10,0,8,10,10,0,10,10,5,-1,0,0,10,-1,0,10,0.0,4.0,1.0,8.0,7.0,0.0,0.0,0.0,79.0,216.0,449.0,9.0
octoprint/octoprint,https://github.com/octoprint/octoprint,9131,4320,2012-12-31,250,1051,5047,8291,8291,1668,335,https://api.github.com/repos/octoprint/octoprint/contents/SECURITY.md,"# Security Policy

OctoPrint's security policy can be found [here](https://octoprint.org/security/).
",2019-09-04 16:03:02,['Generic policy'],external,5.7,10,3,10,0,0,10,10,10,0,10,10,10,1,0,9,0,0,10,32.0,63.0,18.0,10.0,9.0,16.0,0.0,4.0,970.0,564.0,436.0,5.0
ome/omero-web,https://github.com/ome/omero-web,13442,1912,2019-08-05,37,380,589,16,16,30,12,https://api.github.com/repos/ome/.github/contents/SECURITY.md,"## Reporting security issues

The OME team and community take security bugs seriously.

If you discover a security vulnerability or would like to report a security issue privately and securely, please email us at security@openmicroscopy.org. You can use GPG keys to communicate with us securely - see
https://www.openmicroscopy.org/security/ for details about the OME security key.

More information about past security advisories is available at https://www.openmicroscopy.org/security/advisories/.
",2019-08-02 15:06:47,['Reporting mechanism'],email,5.8,10,0,10,0,5,10,10,0,0,0,10,10,2,10,9,-1,0,10,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,23.0,29.0,67.0,1.0
onnx/onnx,https://github.com/onnx/onnx,2885,2609,2017-09-07,295,3433,6262,17846,17846,3670,437,https://api.github.com/repos/onnx/onnx/contents/SECURITY.md,"<!--
Copyright (c) ONNX Project Contributors

SPDX-License-Identifier: Apache-2.0
-->

# Security Policy

## Reporting a Vulnerability
If you think you have found a security vulnerability, please send a report to onnx-security@lists.lfaidata.foundation. Please do not post security vulnerabilities on Slack.

We don't currently have a PGP key, unfortunately.

An ONNX committer will send you a response indicating the next steps in handling your report. After the initial reply to your report, the committer will keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.

Important: Please don't disclose the vulnerability before it has been fixed and announced, to protect our users.

## Security announcements
Please subscribe to the [announcements mailing list](https://lists.lfaidata.foundation/g/onnx-announce), where we post notifications and remediation details for security vulnerabilities.
",2020-11-25 16:59:54,"['Generic policy', 'Reporting mechanism', 'User guideline']",external,8.1,10,8,10,5,10,10,10,10,0,10,10,10,4,10,10,-1,0,10,0.0,34.0,15.0,34.0,13.0,43.0,0.0,0.0,992.0,990.0,4668.0,16.0
open-telemetry/opentelemetry-python-contrib,https://github.com/open-telemetry/opentelemetry-python-contrib,2218,1817,2019-11-08,297,1711,2897,728,728,599,23,https://api.github.com/repos/open-telemetry/.github/contents/SECURITY.md,"# Security Policy

This security policy applies to all projects under the [open-telemetry organization][gh-organization] on GitHub. Security reports involving specific projects should still be reported following the instructions on this document: the report will be shared by the technical committee to the project leads, who might not all have access to the private key required to decrypt your message.

## Supported Versions

The OpenTelemetry project provides community support only for the last minor version: bug fixes are released either as part of the next minor version or as an on-demand patch version. Independent of which version is next, all patch versions are cumulative, meaning that they represent the state of our `main` branch at the moment of the release. For instance, if the latest version is 0.10.0, bug fixes are released either as part of 0.11.0 or 0.10.1.

Security fixes are given priority and might be enough to cause a new version to be released.

## Reporting a Vulnerability

If you find something suspicious and want to report it, we'd really appreciate!

### Ways to report

In order for the vulnerability reports to reach maintainers as soon as possible,
the preferred way is to use the `Report a vulnerability` button on the `Security`
tab in the respective GitHub repository. It creates a private communication channel
between the reporter and the maintainers.

If you are absolutely unable to or have strong reasons not to use GitHub reporting
workflow, please reach out to the maintainers or the Technical Committee using other
[available communication methods](https://opentelemetry.io/community/) and we will
provide instruction on how to report the vulnerability using an encrypted message.

[gh-organization]: https://github.com/open-telemetry
",2020-10-27 17:41:36,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'Reporting mechanism']",advisory,6.8,10,3,10,0,10,10,10,10,0,10,10,-1,0,7,10,-1,0,6,0.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,13.0,45.0,314.0,0.0
openapi-generators/openapi-python-client,https://github.com/openapi-generators/openapi-python-client,829,1718,2020-02-15,69,666,1030,1318,1318,201,13,https://api.github.com/repos/openapi-generators/openapi-python-client/contents/SECURITY.md,"# Security Policy

## Supported Versions

Only the latest release is currently supported, we will not be backporting fixes as long as this project is in the unstable 0.x versioning.

## Reporting a Vulnerability

If you've discovered a vulnerability in this project, please report it to Dylan Anthony at contact@dylananthony.com. I will create an advisory, add you to the discussion, and credit you with discovery.

It's better not to create an issue in the repository unless it's already actively being exploited.
",2020-08-11 16:58:27,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.9,10,8,10,0,5,10,10,10,0,10,10,10,0,0,10,-1,0,10,3.0,9.0,1.0,6.0,59.0,0.0,0.0,0.0,636.0,267.0,373.0,11.0
openedx/xblock-drag-and-drop-v2,https://github.com/openedx/xblock-drag-and-drop-v2,798,3774,2014-06-30,63,422,440,20,20,70,30,https://api.github.com/repos/openedx/.github/contents/SECURITY.md,"# Open edX Security Policy

## Disclosing a Security Vulnerability
If you believe that you have discovered a security vulnerability or other suspicious activity relating to the Open edX platform code base, please:
* report it to the Open edX project by emailing the Open edX Security Working Group at security@openedx.org;
* describe the nature of the vulnerability; and
* provide sufficient detail in your report to enable the Open edX Security Working Group to respond quickly reproduce and understand the vulnerability and respond effectively, including the following (as applicable):
    * a textual description of the steps necessary to reproduce the issue;
    * proof-of-concept code; and
    * links to vulnerable code.

Upon receipt of your email, the Open edX Security Working Group will acknowledge the receipt of your email, review and triage your security vulnerability, and act accordingly. If necessary, the group will reach out to you for more information. The group will not provide communication on the status of the security vulnerability after it has been reviewed and triaged.

## Bug Bounty
The Open edX project does not offer bug bounties for security vulnerability disclosures.

## Out of Scope
There are many sites powered by the Open edX platform. If you have found a vulnerability that is specific to an Open edX deployment please contact the operators of that site directly.
",2021-03-03 20:04:02,"['Generic policy', 'Reporting mechanism', 'User guideline', 'User guideline']",email,6.5,10,3,10,0,10,10,10,10,0,10,5,10,0,0,10,-1,0,10,0.0,4.0,2.0,0.0,0.0,0.0,0.0,0.0,123.0,167.0,350.0,0.0
openzeppelin/cairo-contracts,https://github.com/openzeppelin/cairo-contracts,720,1168,2021-08-18,51,633,1142,821,821,335,19,https://api.github.com/repos/openzeppelin/cairo-contracts/contents/SECURITY.md,"# Security

> ⚠️ Warning! ⚠️
> This project is still in a very early and experimental phase. It has never been audited nor thoroughly reviewed for security vulnerabilities. Do not use in production.

Please report any security issues you find to <security@openzeppelin.com>.
",2022-06-15 17:26:08,['Reporting mechanism'],email,6.6,10,1,9,0,10,10,10,10,0,10,10,-1,3,0,9,-1,0,10,3.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,29.0,40.0,11.0,0.0
paddlepaddle/paddle,https://github.com/paddlepaddle/paddle,51418,2997,2016-08-15,359,50436,68811,22213,22213,5579,717,https://api.github.com/repos/paddlepaddle/paddle/contents/SECURITY.md,"# Using PaddlePaddle Securely

This document describes model security and code security in PaddlePaddle. It also provides guidelines on how to report vulnerabilities in PaddlePaddle.

## PaddlePaddle Model Security

PaddlePaddle attaches great importance to security and privacy of model. This includes how to prevent the model from outputting wrong decision results under the interference when it is used in security-related and safety-critical scenarios, and how to avoid leaking data and privacy information from the model itself, the model gradient or the model inference results.



[PaddleSleeve](https://github.com/PaddlePaddle/PaddleSleeve) provides a series of security and privacy tools, which can help model developers and users systematically evaluate and improve the model security and privacy in both development and deployment stages.



These tools include adversarial example evaluation test, pseudo-natural environment robustness evaluation test, model reversing evaluation test, member inference evaluation test, sample denoising, adversarial training, privacy enhancement optimizer, etc.

### Running untrusted models

Always load and execute untrusted models inside a sandbox and be sure to know the security impacts.
There are several ways in which a model could become untrusted. PaddlePaddle has enough features to impact on the system. (e.g. `paddle.load` uses [pickle](https://docs.python.org/3/library/pickle.html) implicitly, which may cause malformed models to achieve arbitrary code execution). So we recommend when using the untrusted models, you need to carefully audit it and run PaddlePaddle inside a sandbox.

## PaddlePaddle Code Security

PaddlePaddle always take code security seriously. However, due to the complexity of the framework and its dependence on other thirdparty open source libraries, there may still be some security issues undetected. Therefore, we hope that more security researchers and PaddlePaddle developers can participate in the code security program. We encourage responsible disclosure of security issues, as well as contributing code to improve our vulnerability finding tools to make PaddlePaddle safer.

### Code security tools

PaddlePaddle security team attaches great importance to the security of the framework. In order to find and fix security issues as soon as possible, we are continuously conducting code security audit and developing automatic vunerability discovery tools. We have already open sourced some of them to the community, hoping this could encourage people to contribute and improve the safety and robustness of PaddlePaddle. [This tool](https://github.com/PaddlePaddle/PaddleSleeve/tree/main/CodeSecurity) includes two parts. The dynamic part includes some op fuzzer samples. And the static part includes some CodeQL samples. Both of them are aim to find vulnerabilities in PaddlePaddle framework codebase. By referring the samples, security researchers can write their own fuzzers or QLs to test more PaddlePaddle modules, and find more code security issues.

### Reporting vulnerabilities

We encourage responsible disclosure of security issues to PaddlePaddle and please email reports about any security issues you find to paddle-security@baidu.com.



After the security team receives your email, they will communicate with you in time. The security team will work to keep you informed of an issue fix.



In order to reproduce and identify the issue, please include the following information along with your email:

- The details of the vulnerability including how to reproduce it. Try to attach a PoC.
- The attack scenario and what an attacker might be able to achieve with this issue.
- Whether this vulnerability has been made public. If it is, please attach details.
- Your name and affiliation.

We will indicate the bug fix in the release of PaddlePaddle, and publish the vulnerability detail and the reporter in the security advisories (Your name will not be published if you choose to remain anonymous).

### What is a vulnerability?

In the process of computation graphs in PaddlePaddle, models can perform arbitrary computations , including reading and writing files, communicating with the network, etc. It may cause memory exhaustion, deadlock, etc., which will lead to unexpected behavior of PaddlePaddle. We consider these behavior to be security vulnerabilities only if they are out of the intention of the operation involved.



Some unexpected parameters and behaviors have been checked in PaddlePaddle by throwing exceptions in Python or return error states in C++. In these cases, denial of service is still possible, but the exit of the PaddlePaddle is clean. Since the error handling of PaddlePaddle is expected and correct, these cases are not security vulnerabilities.



If malicious input can trigger memory corruption or non-clean exit, such bug is considered a security problem.



[security advisories](./security/README.md)
",2022-04-14 04:06:45,"['Generic policy', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'Reporting mechanism', 'User guideline']",email,6.4,10,8,10,0,10,10,-1,0,0,10,10,-1,-1,0,10,-1,-1,5,2.0,85.0,0.0,0.0,0.0,0.0,0.0,0.0,16.0,73.0,115.0,2.0
pallets/flask,https://github.com/pallets/flask,5343,5320,2010-04-06,401,2593,5240,67959,67959,16210,2119,https://api.github.com/repos/pallets/.github/contents/SECURITY.md,"# Security Policy

All Pallets projects share the same security policy. See
https://palletsprojects.com/security, the canonical location for the policy,
which this is copied from.

## Before Reporting

There are some things we generally do not consider security issues, which can be
found at the canonical policy page: https://palletsprojects.com/security. Please
review the list before reporting an issue. You may still err on the side of
caution and make a private report first, but we may close it or ask you to
report a regular issue instead.

## Reporting a Security Issue

If you believe you have identified a security issue with a Pallets or
Pallets-Eco project, **do not open a public issue**. To responsibly report a
security issue, use GitHub's [security advisory system][gh-docs]. From the
project's repository, click ""Security"" at the top, then click ""Advisories"" at
the left, then click the green ""New draft security advisory"" button.
Alternatively, you may email [security@palletsprojects.com](mailto:security@palletsprojects.com),
and we will convert that to a GitHub security advisory.

Be sure to include as much detail as necessary in your report. As with reporting
normal issues, a minimal reproducible example will help the maintainers address
the issue faster. Information about why the issue is a security issue is also
helpful. If you are able, you may also provide a fix for the issue.

A maintainer will reply acknowledging the report and how to continue. We will
obtain a CVE id as well, please do not do this on your own. We will work with
you to attempt to understand the issue and decide on its validity. Maintainers
are volunteers working in their free time, and therefore cannot guarantee any
specific timeline. Please be patient during this process.

The current feature release will receive security fixes. A backport to the
previous feature branch may be considered upon request based on usage information
and severity, but is not guaranteed.

[gh-docs]: https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/creating-a-repository-security-advisory
",2019-07-16 21:34:14,"['Generic policy', 'User guideline', 'Reporting mechanism']",email_advisory,6.6,10,3,7,0,0,10,10,10,10,10,10,10,5,0,9,10,0,4,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,52.0,88.0,147.0,1.0
pallets/jinja,https://github.com/pallets/jinja,2848,5126,2010-10-17,267,938,1974,10325,10325,1617,251,https://api.github.com/repos/pallets/.github/contents/SECURITY.md,"# Security Policy

All Pallets projects share the same security policy. See
https://palletsprojects.com/security, the canonical location for the policy,
which this is copied from.

## Before Reporting

There are some things we generally do not consider security issues, which can be
found at the canonical policy page: https://palletsprojects.com/security. Please
review the list before reporting an issue. You may still err on the side of
caution and make a private report first, but we may close it or ask you to
report a regular issue instead.

## Reporting a Security Issue

If you believe you have identified a security issue with a Pallets or
Pallets-Eco project, **do not open a public issue**. To responsibly report a
security issue, use GitHub's [security advisory system][gh-docs]. From the
project's repository, click ""Security"" at the top, then click ""Advisories"" at
the left, then click the green ""New draft security advisory"" button.
Alternatively, you may email [security@palletsprojects.com](mailto:security@palletsprojects.com),
and we will convert that to a GitHub security advisory.

Be sure to include as much detail as necessary in your report. As with reporting
normal issues, a minimal reproducible example will help the maintainers address
the issue faster. Information about why the issue is a security issue is also
helpful. If you are able, you may also provide a fix for the issue.

A maintainer will reply acknowledging the report and how to continue. We will
obtain a CVE id as well, please do not do this on your own. We will work with
you to attempt to understand the issue and decide on its validity. Maintainers
are volunteers working in their free time, and therefore cannot guarantee any
specific timeline. Please be patient during this process.

The current feature release will receive security fixes. A backport to the
previous feature branch may be considered upon request based on usage information
and severity, but is not guaranteed.

[gh-docs]: https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/creating-a-repository-security-advisory
",2019-07-16 21:34:14,"['Generic policy', 'User guideline', 'Reporting mechanism']",email_advisory,7.1,10,3,8,0,1,10,10,10,10,10,10,10,5,0,9,10,0,10,80.0,72.0,27.0,47.0,19.0,0.0,0.0,1.0,2805.0,2029.0,2363.0,28.0
pallets/jinja2,https://github.com/pallets/jinja2,2848,5126,2010-10-17,267,938,1974,10325,10325,1617,251,https://api.github.com/repos/pallets/.github/contents/SECURITY.md,"# Security Policy

All Pallets projects share the same security policy. See
https://palletsprojects.com/security, the canonical location for the policy,
which this is copied from.

## Before Reporting

There are some things we generally do not consider security issues, which can be
found at the canonical policy page: https://palletsprojects.com/security. Please
review the list before reporting an issue. You may still err on the side of
caution and make a private report first, but we may close it or ask you to
report a regular issue instead.

## Reporting a Security Issue

If you believe you have identified a security issue with a Pallets or
Pallets-Eco project, **do not open a public issue**. To responsibly report a
security issue, use GitHub's [security advisory system][gh-docs]. From the
project's repository, click ""Security"" at the top, then click ""Advisories"" at
the left, then click the green ""New draft security advisory"" button.
Alternatively, you may email [security@palletsprojects.com](mailto:security@palletsprojects.com),
and we will convert that to a GitHub security advisory.

Be sure to include as much detail as necessary in your report. As with reporting
normal issues, a minimal reproducible example will help the maintainers address
the issue faster. Information about why the issue is a security issue is also
helpful. If you are able, you may also provide a fix for the issue.

A maintainer will reply acknowledging the report and how to continue. We will
obtain a CVE id as well, please do not do this on your own. We will work with
you to attempt to understand the issue and decide on its validity. Maintainers
are volunteers working in their free time, and therefore cannot guarantee any
specific timeline. Please be patient during this process.

The current feature release will receive security fixes. A backport to the
previous feature branch may be considered upon request based on usage information
and severity, but is not guaranteed.

[gh-docs]: https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/creating-a-repository-security-advisory
",2019-07-16 21:34:14,"['Generic policy', 'User guideline', 'Reporting mechanism']",email_advisory,7.1,10,3,8,0,1,10,10,10,10,10,10,10,5,0,9,10,0,10,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,18.0,9.0,69.0,0.0
pallets/werkzeug,https://github.com/pallets/werkzeug,5695,5125,2010-10-18,411,1751,2942,6652,6652,1732,223,https://api.github.com/repos/pallets/.github/contents/SECURITY.md,"# Security Policy

All Pallets projects share the same security policy. See
https://palletsprojects.com/security, the canonical location for the policy,
which this is copied from.

## Before Reporting

There are some things we generally do not consider security issues, which can be
found at the canonical policy page: https://palletsprojects.com/security. Please
review the list before reporting an issue. You may still err on the side of
caution and make a private report first, but we may close it or ask you to
report a regular issue instead.

## Reporting a Security Issue

If you believe you have identified a security issue with a Pallets or
Pallets-Eco project, **do not open a public issue**. To responsibly report a
security issue, use GitHub's [security advisory system][gh-docs]. From the
project's repository, click ""Security"" at the top, then click ""Advisories"" at
the left, then click the green ""New draft security advisory"" button.
Alternatively, you may email [security@palletsprojects.com](mailto:security@palletsprojects.com),
and we will convert that to a GitHub security advisory.

Be sure to include as much detail as necessary in your report. As with reporting
normal issues, a minimal reproducible example will help the maintainers address
the issue faster. Information about why the issue is a security issue is also
helpful. If you are able, you may also provide a fix for the issue.

A maintainer will reply acknowledging the report and how to continue. We will
obtain a CVE id as well, please do not do this on your own. We will work with
you to attempt to understand the issue and decide on its validity. Maintainers
are volunteers working in their free time, and therefore cannot guarantee any
specific timeline. Please be patient during this process.

The current feature release will receive security fixes. A backport to the
previous feature branch may be considered upon request based on usage information
and severity, but is not guaranteed.

[gh-docs]: https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/creating-a-repository-security-advisory
",2019-07-16 21:34:14,"['Generic policy', 'User guideline', 'Reporting mechanism']",email_advisory,6.7,10,3,10,0,1,10,10,10,0,10,10,10,5,0,9,10,0,10,80.0,72.0,27.0,47.0,19.0,0.0,0.0,1.0,2805.0,2029.0,2363.0,28.0
paramiko/paramiko,https://github.com/paramiko/paramiko,4017,5748,2009-02-02,137,807,2465,9109,9109,2008,318,https://api.github.com/repos/paramiko/paramiko/contents/SECURITY.md,"# Security Policy

## Security contact information

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure.
",2023-12-01 19:07:44,"['Generic policy', 'Reporting mechanism']",external,5.3,10,1,-1,0,0,10,-1,0,10,10,10,-1,0,0,10,-1,-1,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,3.0,4.0,0.0
pdm-project/pdm,https://github.com/pdm-project/pdm,2905,1768,2019-12-27,195,1110,2842,7911,7911,396,39,https://api.github.com/repos/pdm-project/pdm/contents/SECURITY.md,"# Security Policy

## Supported Versions

Use this section to tell people about which versions of your project are
currently being supported with security updates.

| Version | Supported          |
| ------- | ------------------ |
| Latest minor version   | :white_check_mark: |
| Otherwise   | :x:                |

## Reporting a Vulnerability

If you discover a potential security vulnerability, we kindly request that you refrain from sharing the information publicly and report it to us directly. 
Please send an email to me@frostming.com with the following details:

- Description of the potential vulnerability.
- Steps to reproduce the issue (if applicable).
- Any relevant screenshots or logs.
- Your contact information for further communication.

Alternatively, you can [open a security advisory](https://github.com/pdm-project/pdm/security/advisories/new) on GitHub.

## Response Time

Upon receiving your report, the maintainers will acknowledge receipt of your vulnerability report within 2 business days.
We will then review the reported issue and strive to keep you informed about our progress towards resolving it.
You can expect an update from us at least every 5 days until the issue is resolved.

## Vulnerability Validation

The maintainers will assess the reported vulnerability and validate its existence. This process may involve a request for additional information from you.
If the vulnerability is confirmed, we will classify it based on its severity and potential impact.

If your reported vulnerability is validated and leads to a change in our systems, we will acknowledge your contribution in any public disclosure, unless you request anonymity.
Otherwise, if the reported issue is not accepted as a vulnerability, we will provide a detailed explanation as to why we believe it does not pose a risk to our systems or users.
We value all reports and encourage you to continue to report any potential vulnerabilities you may find in the future.
",2023-09-13 00:32:42,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'Projects practice', 'Projects practice']",email_advisory,4.3,0,3,7,0,1,10,10,10,0,10,10,-1,0,0,10,-1,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,4.0,1.0,0.0
personnummer/python,https://github.com/personnummer/python,173,2565,2017-10-21,13,67,78,12,12,14,5,https://api.github.com/repos/personnummer/.github/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Best way to report a vulnerability is to send an email to `security@personnummer.dev`.
Make the subject `<project> vulnerability` and give a description (and if possible a reproducible example) on the vulnerability.

Security issues will be patched on high priority basis, and we try to give the users of the module an alert of a required update as soon as it have been patched, vulnerabilities will be made public within 15 days after a fix is implemented.

## Bug bounties

As of right now, we offer no bounties for vulnerability reporting.
",2020-04-21 08:37:11,"['Generic policy', 'Reporting mechanism', 'User guideline']",email,5.9,10,0,10,0,1,10,10,10,0,10,3,10,0,10,10,-1,0,10,0.0,2.0,4.0,0.0,0.0,0.0,0.0,0.0,133.0,59.0,294.0,1.0
piccolo-orm/piccolo,https://github.com/piccolo-orm/piccolo,1851,2194,2018-10-27,40,515,940,1435,1435,90,15,https://api.github.com/repos/piccolo-orm/piccolo/contents/SECURITY.md,"# Security Policy

## Supported Versions

v1 is actively maintained, and any security vulnerabilities will be patched.

v0.X will have any major security vulnerabilities patched.

## Reporting a Vulnerability

We recommend opening a security advisory on GitHub, as per the [documentation](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing-information-about-vulnerabilities/privately-reporting-a-security-vulnerability).

Alternatively, reach out to the maintainers via email (see [setup.py](https://github.com/piccolo-orm/piccolo/blob/bbd2e4ad6378b2080d58fb7c7ed392f0425f0f21/setup.py#L60) for contact details).
",2023-11-10 20:51:30,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_advisory,5.7,10,3,8,0,1,10,10,10,0,10,10,-1,0,0,10,-1,0,7,0.0,11.0,2.0,13.0,15.0,24.0,0.0,0.0,119.0,412.0,199.0,0.0
plannigan/hyper-bump-it,https://github.com/plannigan/hyper-bump-it,1120,734,2022-10-26,3,526,563,5,5,1,3,https://api.github.com/repos/plannigan/hyper-bump-it/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version  | Supported          |
|----------|--------------------|
| >= 0.4.x | :white_check_mark: |
| < 0.4.0  | :x:                |

## Reporting a Vulnerability

The preferred method for reporting a vulnerability is to use GitHub's
[vulnerability reporting tool][reporting]. Within the report please include details about the
vulnerability and how to reproduce it. Someone will reply to acknowledge receipt of the that the
vulnerability report. After an initial investigation of the report, another message will be sent
with details about how the maintainers plan to release the fix or asking for more information about
the vulnerability report.

## Public Disclosure

A description of the vulnerability will be made public after a new version has been published that
addresses the issue or within 120 days, whichever occurs first.

[reporting]: https://github.com/plannigan/hyper-bump-it/security/advisories/new
",2023-02-04 15:10:32,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'Projects practice']",advisory,8.2,10,3,10,5,-1,0,10,10,0,10,10,10,6,10,10,-1,10,10,0.0,6.0,3.0,0.0,0.0,0.0,0.0,0.0,30.0,27.0,3.0,0.0
plone/plone,https://github.com/plone/plone,277,4784,2011-09-25,18,19,32,239,239,52,186,https://api.github.com/repos/plone/.github/contents/SECURITY.md,"# Security

For the Plone Foundation, security is a process that we take seriously, and we have the track record to prove it.

- [Report a security issue](https://plone.org/security/report)
- [Security Announcements](https://plone.org/security/announcements)
- [Read more about security in Plone](https://plone.org/security)
",2022-09-05 20:09:11,['Reporting mechanism'],external,4.0,10,0,3,0,1,10,-1,0,0,0,6,-1,-1,0,9,-1,-1,10,4.0,325.0,28.0,7.0,0.0,0.0,0.0,0.0,831.0,3505.0,5281.0,12.0
plone/plone.app.contenttypes,https://github.com/plone/plone.app.contenttypes,2358,4741,2011-11-07,89,410,705,14,14,48,159,https://api.github.com/repos/plone/.github/contents/SECURITY.md,"# Security

For the Plone Foundation, security is a process that we take seriously, and we have the track record to prove it.

- [Report a security issue](https://plone.org/security/report)
- [Security Announcements](https://plone.org/security/announcements)
- [Read more about security in Plone](https://plone.org/security)
",2022-09-05 20:09:11,['Reporting mechanism'],external,5.6,10,3,10,0,6,10,10,0,0,0,10,-1,-1,0,9,-1,0,10,0.0,4.0,2.0,0.0,0.0,10.0,0.0,0.0,356.0,80.0,83.0,0.0
plone/plone.namedfile,https://github.com/plone/plone.namedfile,685,4789,2011-09-20,50,120,162,9,9,18,155,https://api.github.com/repos/plone/.github/contents/SECURITY.md,"# Security

For the Plone Foundation, security is a process that we take seriously, and we have the track record to prove it.

- [Report a security issue](https://plone.org/security/report)
- [Security Announcements](https://plone.org/security/announcements)
- [Read more about security in Plone](https://plone.org/security)
",2022-09-05 20:09:11,['Reporting mechanism'],email,4.1,10,3,10,0,2,10,10,0,0,0,0,-1,0,0,9,-1,0,10,0.0,4.0,0.0,0.0,1.0,0.0,0.0,0.0,148.0,135.0,118.0,0.0
plone/plone.rest,https://github.com/plone/plone.rest,508,3490,2015-04-10,27,117,183,11,11,5,171,https://api.github.com/repos/plone/.github/contents/SECURITY.md,"# Security

For the Plone Foundation, security is a process that we take seriously, and we have the track record to prove it.

- [Report a security issue](https://plone.org/security/report)
- [Security Announcements](https://plone.org/security/announcements)
- [Read more about security in Plone](https://plone.org/security)
",2022-09-05 20:09:11,['Reporting mechanism'],external,4.5,10,6,10,0,4,10,10,0,0,0,0,-1,0,0,9,-1,0,10,0.0,16.0,5.0,0.0,0.0,0.0,0.0,0.0,141.0,5879.0,121.0,13.0
plone/plone.restapi,https://github.com/plone/plone.restapi,3774,3839,2014-04-26,92,1079,1825,85,85,76,196,https://api.github.com/repos/plone/.github/contents/SECURITY.md,"# Security

For the Plone Foundation, security is a process that we take seriously, and we have the track record to prove it.

- [Report a security issue](https://plone.org/security/report)
- [Security Announcements](https://plone.org/security/announcements)
- [Read more about security in Plone](https://plone.org/security)
",2022-09-05 20:09:11,['Reporting mechanism'],external,5.6,10,8,10,0,5,10,10,0,0,0,10,-1,0,0,9,-1,0,10,9.0,34.0,8.0,13.0,1.0,2.0,0.0,8.0,255.0,285.0,512.0,24.0
plone/products.atcontenttypes,https://github.com/plone/products.atcontenttypes,2104,4728,2011-11-19,72,61,69,2,2,9,161,https://api.github.com/repos/plone/.github/contents/SECURITY.md,"# Security

For the Plone Foundation, security is a process that we take seriously, and we have the track record to prove it.

- [Report a security issue](https://plone.org/security/report)
- [Security Announcements](https://plone.org/security/announcements)
- [Read more about security in Plone](https://plone.org/security)
",2022-09-05 20:09:11,['Reporting mechanism'],external,3.6,10,3,0,0,1,10,-1,0,0,0,0,-1,-1,0,9,-1,-1,10,0.0,4.0,15.0,0.0,10.0,14.0,6.0,0.0,201.0,146.0,165.0,0.0
plone/products.cmfplone,https://github.com/plone/products.cmfplone,6276,4784,2011-09-25,169,1465,4034,250,250,188,172,https://api.github.com/repos/plone/products.cmfplone/contents/.github/SECURITY.md,"# Security Policy

The most up to date information about Plone security is on https://plone.org/security

## Supported Versions

For supported versions, see the [security update policy](https://plone.org/security/update-policy)

The [release schedule](https://plone.org/download/release-schedule) also has helpful information.

There may be hotfixes available to increase the security of your version of Plone. Please check the [available hotfixes](https://plone.org/security/hotfixes).

## Reporting a Vulnerability

Please do **NOT** create a public bug report if you think this may be a security issue.
Instead, please contact the Plone Security Team via email: security@plone.org.
See also https://plone.org/security/report

Only bug reports submitted directly to the security team email will be treated as responsible disclosure.
Any offered for sale to third parties or submitted to public bug bounty programs will be treated as irresponsible public disclosure.
We will not confirm any submissions on third party platforms such as ""huntr"" or ""hackerone"" and do not give permission for those systems to accept reports on our behalf or to represent themselves as a conduit for vulnerability reports.
",2021-09-13 08:50:53,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.9,10,8,8,0,10,10,-1,0,0,10,10,-1,-1,0,10,-1,-1,10,4.0,16.0,0.0,20.0,2.0,0.0,0.0,0.0,76.0,178.0,650.0,0.0
plone/products.isurlinportal,https://github.com/plone/products.isurlinportal,119,1561,2020-07-21,7,26,31,2,2,1,194,https://api.github.com/repos/plone/.github/contents/SECURITY.md,"# Security

For the Plone Foundation, security is a process that we take seriously, and we have the track record to prove it.

- [Report a security issue](https://plone.org/security/report)
- [Security Announcements](https://plone.org/security/announcements)
- [Read more about security in Plone](https://plone.org/security)
",2022-09-05 20:09:11,['Reporting mechanism'],external,4.8,10,0,10,0,0,10,10,0,0,0,10,-1,-1,0,9,-1,0,10,4.0,6.0,2.0,2.0,0.0,0.0,0.0,0.0,269.0,161.0,224.0,1.0
prefecthq/prefect,https://github.com/prefecthq/prefect,17899,2314,2018-06-29,277,9608,15234,16296,16296,1586,161,https://api.github.com/repos/prefecthq/prefect/contents/SECURITY.md,"# How to report a security issue

To report a (suspected) security issue, please email `bugbounty@prefect.io` and follow the instructions for our [bug bounty program](https://www.prefect.io/bug-bounty).

Prefect will acknowledge receipt of your report in a timely manner, usually within 48 hours. After the initial reply to your report, the security team will keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.
",2024-01-03 15:35:19,['Reporting mechanism'],email_external,6.9,10,6,10,0,10,10,10,10,0,10,10,10,0,8,9,-1,0,2,21.0,210.0,40.0,12.0,0.0,1.0,0.0,0.0,584.0,1263.0,1999.0,7.0
pretalx/pretalx,https://github.com/pretalx/pretalx,6202,2804,2017-02-24,86,681,1754,732,732,206,28,https://api.github.com/repos/pretalx/pretalx/contents/SECURITY.md,"# Security Policy

## Supported Versions

Due to limited development bandwidth, only the [most recent release](https://pypi.org/project/pretalx/#history) is
currently supported. If you need support for previous releases, please contact
[support@pretalx.com](mailto:support@pretalx.com).

## Reporting a Vulnerability

If you find a vulnerability in pretalx, please contact [support@pretalx.com](mailto:support@pretalx.com). We will
respond in a timely manner. If appropriate, we will work with you on further processes/publishing and mitigation.
Since we are a small open source project, we will not be able to pay bounties, but we will acknowledge you in the
disclosure publication.
",2019-05-26 12:23:07,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.2,10,3,10,0,0,10,10,10,0,10,10,-1,1,0,10,0,0,5,14.0,50.0,85.0,2.0,3.0,0.0,0.0,0.0,1913.0,507.0,953.0,5.0
pretix/pretix,https://github.com/pretix/pretix,12159,3704,2014-09-08,321,2827,4070,1866,1866,470,49,https://api.github.com/repos/pretix/pretix/contents/SECURITY.md,"# Security policy

## Reporting a vulnerability

If you discover a vulnerability with our software or server systems, please report it to us in private. Do not to attempt to harm our users, customer's data or our system's availability when looking for vulneratbilities.

Please contact us at security@pretix.eu with full details and steps to reproduce and allow reasonable time for us to resolve the issue before publishing your findings. If you wish to encrypt your email, you can find our GPG key [here](https://pretix.eu/.well-known/security@pretix.eu.asc).

We're not large enough to run a formal bug bounty program, but if you find a serious vulnerability in our service, we will find a way to show our gratitude. 

## Version support

Security support is provided for the current stable release as well as the two previous stable releases.
Be sure to keep your pretix installation up to date.

New releases and security issues will be announced on our [blog](https://pretix.eu/about/en/blog/). If you
subscribe to our [newsletter](https://pretix.eu/about/en/blog/) in the ""News about self-hosting pretix""
category, we will also send you an email on security issues. 

Past security issues are listed [on our website](https://pretix.eu/about/en/security).
",2022-09-16 11:43:51,"['Generic policy', 'Reporting mechanism', 'Scope of practice']",email,6.3,10,3,10,0,4,10,10,10,0,9,10,-1,0,0,10,-1,10,1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,78.0,68.0,189.0,0.0
privacyidea/privacyidea,https://github.com/privacyidea/privacyidea,8395,3801,2014-06-03,112,1944,4132,1508,1508,317,64,https://api.github.com/repos/privacyidea/privacyidea/contents/SECURITY.md,"# How to report a security vulnerability?

If you found a problematic security vulnerability, please
refrain from reporting an issue at github but send this vulnerability to
us directly.
Please include the following details:

* The name and version of the problematic software component,
  and if possible

  * the location of the issue and 
  * the potential impact

* A detailed description to reproduce the vulnerability and

* Your name, (handle or alias) to be included in the
  disclosure and hall of fame.

You can send this information to the privacyIDEA core development team by
sending an email to

   security@privacyidea.org

or, if you want to stay anonymous/pseudonymous, you can upload your information to

   https://lancelot.netknights.it/owncloud/s/a6sVvOT0Fb3utd9

Thanks a lot for your support and your discretion.
",2019-06-17 17:52:50,['Reporting mechanism'],email_external,6.2,10,6,10,2,10,10,10,10,0,10,10,-1,0,10,10,0,0,0,0.0,19.0,13.0,3.0,2.0,0.0,0.0,15.0,208.0,87.0,160.0,2.0
psf/black,https://github.com/psf/black,1923,2421,2018-03-14,432,1814,4452,38855,38855,2453,228,https://api.github.com/repos/psf/black/contents/SECURITY.md,"# Security Policy

## Supported Versions

Only the latest non-prerelease version is supported.

## Security contact information

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the
fix and disclosure.
",2023-03-18 17:41:48,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",external,6.7,10,3,10,0,7,10,10,10,10,10,10,10,0,0,10,0,0,10,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,46.0,67.0,33.0,0.0
pulp/pulp_ansible,https://github.com/pulp/pulp_ansible,1322,2520,2017-12-05,37,1813,2012,59,59,54,7,https://api.github.com/repos/pulp/.github/contents/SECURITY.md,"Security Disclosures
--------------------

We take security issues seriously and welcome responsible disclosure of security vulnerabilities in
Pulp. Please email pulp-security@redhat.com (a private address for the Pulp Security Team) with all
reports.

Your report should include:

- Pulp version
- A vulnerability description
- Reproduction steps
- Feel free to submit a patch with your disclosure.

A member of the Pulp Security Team will confirm the vulnerability, determine its impact, and develop a fix.
",2022-04-21 11:40:40,[],email,7.5,10,8,10,0,10,10,10,10,0,10,10,-1,0,7,10,-1,0,10,3.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,29.0,40.0,11.0,0.0
py-pdf/pypdf,https://github.com/py-pdf/pypdf,1767,4680,2012-01-06,222,1449,2607,8259,8259,1399,147,https://api.github.com/repos/py-pdf/pypdf/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

Security fixes are applied to the latest version.

## Reporting a Vulnerability

If you find a potential security issue, please report it to info@martin-thoma.de
(the current maintainer).

We will try to find a fix in a timely manner and will then issue a security
advisory together with the update via GitHub
([example](https://github.com/py-pdf/pypdf/security/advisories/GHSA-xcjx-m2pj-8g79)).

If you don't get a reaction within 30 days, please open a public issue on
GitHub.
",2022-05-02 11:27:33,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,7.5,10,6,9,0,10,10,10,10,10,9,10,-1,0,0,10,-1,0,10,0.0,12.0,0.0,1.0,6.0,0.0,0.0,0.0,47.0,66.0,45.0,1.0
py-pdf/pypdf2,https://github.com/py-pdf/pypdf2,1767,4680,2012-01-06,222,1449,2607,8259,8259,1399,147,https://api.github.com/repos/py-pdf/pypdf2/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

Security fixes are applied to the latest version.

## Reporting a Vulnerability

If you find a potential security issue, please report it to info@martin-thoma.de
(the current maintainer).

We will try to find a fix in a timely manner and will then issue a security
advisory together with the update via GitHub
([example](https://github.com/py-pdf/pypdf/security/advisories/GHSA-xcjx-m2pj-8g79)).

If you don't get a reaction within 30 days, please open a public issue on
GitHub.
",2022-05-02 11:27:33,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,7.5,10,6,9,0,10,10,10,10,10,9,10,-1,0,0,10,-1,0,10,0.0,123.0,26.0,0.0,6.0,0.0,0.0,0.0,75.0,370.0,419.0,1.0
pyca/cryptography,https://github.com/pyca/cryptography,12719,4102,2013-08-07,292,9274,11820,6646,6646,1524,130,https://api.github.com/repos/pyca/cryptography/contents/docs/security.rst,"Security
========

We take the security of ``cryptography`` seriously. The following are a set of
policies we have adopted to ensure that security issues are addressed in a
timely fashion.

Known vulnerabilities
---------------------

A list of all known vulnerabilities in ``cryptography`` can be found on
`osv.dev`_, as well as other ecosystem vulnerability databases. They can
automatically be scanned for using tools such as `pip-audit`_ or `osv-scan`_.

Infrastructure
--------------

In addition to ``cryptography``'s code, we're also concerned with the security
of the infrastructure we run (primarily ``cryptography.io``).  If you discover
a security vulnerability in our infrastructure, we ask you to report it using
the same procedure.

What is a security issue?
-------------------------

Anytime it's possible to write code using ``cryptography``'s public API which
does not provide the guarantees that a reasonable developer would expect it to
based on our documentation.

That's a bit academic, but basically it means the scope of what we consider a
vulnerability is broad, and we do not require a proof of concept or even a
specific exploit, merely a reasonable threat model under which ``cryptography``
could be attacked.

To give a few examples of things we would consider security issues:

* If a recipe, such as Fernet, made it easy for a user to bypass
  confidentiality or integrity with the public API (e.g. if the API let a user
  reuse nonces).
* If, under any circumstances, we used a CSPRNG which wasn't fork-safe.
* If ``cryptography`` used an API in an underlying C library and failed to
  handle error conditions safely.

Examples of things we wouldn't consider security issues:

* Offering ECB mode for symmetric encryption in the *Hazmat* layer. Though ECB
  is critically weak, it is documented as being weak in our documentation.
* Using a variable time comparison somewhere, if it's not possible to
  articulate any particular program in which this would result in problematic
  information disclosure.

In general, if you're unsure, we request that you to default to treating things
as security issues and handling them sensitively, the worst thing that can
happen is that we'll ask you to file a public issue.

Reporting a security issue
--------------------------

We ask that you do not report security issues to our normal GitHub issue
tracker.

If you believe you've identified a security issue with ``cryptography``,
please report it via our `security advisory page`_.

Once you've submitted an issue, you should receive an acknowledgment within 48
hours, and depending on the action to be taken, you may receive further
follow-up.

Supported Versions
------------------

At any given time, we will provide security support for the `main`_ branch
as well as the most recent release.

New releases for OpenSSL updates
--------------------------------

As of versions 0.5, 1.0.1, and 2.0.0, ``cryptography`` statically links OpenSSL
in binary distributions for Windows, macOS, and Linux respectively, to ease
installation. Due to this, ``cryptography`` will release a new version whenever
OpenSSL has a security or bug fix release to avoid shipping insecure software.

Like all our other releases, this will be announced on the mailing list and we
strongly recommend that you upgrade as soon as possible.

Disclosure Process
------------------

When we become aware of a security bug in ``cryptography``, we will endeavor to
fix it and issue a release as quickly as possible. We will generally issue a new
release for any security issue.

The steps for issuing a security release are described in our
:doc:`/doing-a-release` documentation.


.. _`osv.dev`: https://osv.dev/list?ecosystem=PyPI&q=cryptography
.. _`pip-audit`: https://pypi.org/project/pip-audit/
.. _`osv-scan`: https://google.github.io/osv-scanner/
.. _`security advisory page`: https://github.com/pyca/cryptography/security/advisories/new
.. _`main`: https://github.com/pyca/cryptography
",2013-10-20 00:52:58,[],advisory,8.7,10,8,10,0,10,10,10,10,10,9,10,10,4,0,10,-1,9,10,0.0,2.0,2.0,0.0,1.0,0.0,0.0,0.0,235.0,108.0,211.0,0.0
pycord-development/pycord,https://github.com/pycord-development/pycord,6118,1158,2021-08-28,365,1657,2479,2730,2730,460,33,https://api.github.com/repos/pycord-development/pycord/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
| ------- | ------------------ |
| 2.x     | :white_check_mark: |
| <2.0.0  | :x:                |

## Reporting a Vulnerability

If you find a vulnerability you have two ways to report it:

- Write a dm to one of our core developers on https://pycord.dev/discord
- Write an email to admin@pycord.dev
",2021-11-04 17:17:15,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_external,6.3,8,2,10,0,8,10,10,10,0,10,10,-1,0,9,10,0,0,10,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,11.0,17.0,7.0,1.0
pydantic/pydantic,https://github.com/pydantic/pydantic,3272,2736,2017-05-03,465,4032,8629,20922,20922,1882,117,https://api.github.com/repos/pydantic/.github/contents/SECURITY.md,"# Security Policy

If you think you have identified a security issue with a Pydantic project, **do not open a public issue**.

To responsibly report a security issue, please navigate to the ""Security"" tab for the repo, and click ""Report a vulnerability"".

![Screenshot of repo security tab showing ""Report a vulnerability"" button](https://github.com/pydantic/.github/raw/main/assets/github_report_vulnerability.png)

Be sure to include as much detail as necessary in your report. As with reporting normal issues, a minimal reproducible example will help the maintainers address the issue faster.

Thank you.
",2023-09-08 08:06:41,['Reporting mechanism'],advisory,7.3,10,2,10,0,10,10,10,10,10,10,10,10,0,0,10,-1,0,10,0.0,34.0,15.0,34.0,13.0,43.0,0.0,0.0,992.0,990.0,4668.0,16.0
pyeve/eve,https://github.com/pyeve/eve,3403,4390,2012-10-22,166,563,1536,6710,6710,744,224,https://api.github.com/repos/pyeve/eve/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please email pyeve at nicolaiarocci dot com any vulnerability you may find about this project.
",2022-11-02 08:45:32,"['Generic policy', 'Reporting mechanism']",email,4.1,10,0,5,0,0,10,10,0,0,9,6,-1,0,0,4,-1,0,10,1.0,54.0,8.0,3.0,0.0,0.0,0.0,0.0,523.0,501.0,633.0,31.0
pyinstaller/pyinstaller,https://github.com/pyinstaller/pyinstaller,9527,4724,2011-11-23,394,2483,7877,11863,11863,1940,231,https://api.github.com/repos/pyinstaller/pyinstaller/contents/.github/SECURITY.md,"## Security contact information

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure.
",2020-01-08 17:58:03,['Reporting mechanism'],external,6.2,0,8,8,0,9,10,10,10,0,9,10,-1,0,0,10,-1,0,10,5.0,43.0,5.0,0.0,0.0,0.0,0.0,0.0,1204.0,831.0,835.0,3.0
pyload/pyload,https://github.com/pyload/pyload,7851,4279,2013-02-10,162,1253,4451,3317,3317,711,130,https://api.github.com/repos/pyload/pyload/contents/SECURITY.md,"<p align=""center"">
  <img src=""https://raw.githubusercontent.com/pyload/pyload/main/media/logo.png"" alt=""pyLoad"" height=""100"" />
</p>

## Security Policy

### Supported Versions

pyLoad Next releases will receive security vulnerabilities patches.
Old versions of pyLoad, working on Python 2, will receive plugin updates only.

### Reporting a Vulnerability

Please report any security vulnerabilities by sending an email to security@pyload.net.

You will receive a response from us within a short time.
If the issue is confirmed, we will release a patch as soon as possible depending on complexity.

<br />

---

###### © 2008-2024 pyLoad team
",2021-09-21 23:03:08,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'Additional information']",email,5.5,10,2,-1,0,0,10,10,10,0,9,10,10,0,0,10,0,0,10,0.0,34.0,15.0,34.0,13.0,43.0,0.0,0.0,992.0,990.0,4668.0,16.0
pylons/colander,https://github.com/pylons/colander,1082,5004,2011-02-16,87,228,366,449,449,145,28,https://api.github.com/repos/Pylons/.github/contents/SECURITY.md,"# Security Policy

To report security issues with projects under the Pylons Project, send email to: pylons-project-security@googlegroups.com.
If we determine that your report may be a security issue with the project, we may contact you for further information.
We volunteers ask that you delay public disclosure of your report for at least ninety (90) days from the date you report it to us.
This will allow sufficient time for us to process your report and coordinate disclosure with you.

Once verified and fixed, the following steps will be taken.

-   We will use GitHub's Security Advisory tool to report the issue.
-   GitHub will review our Security Advisory report for compliance with Common Vulnerabilities and Exposures (CVE) rules.
    If it is compliant, they will submit it to the MITRE Corporation to generate a [CVE](https://www.cve.org/).
    This in turn submits the CVE to the [National Vulnerability Database (NVD)](https://nvd.nist.gov/vuln/search).
    GitHub notifies us of their decision.
-   Assuming it is compliant, we then publish our Security Advisory on GitHub, which triggers the next steps.
-   GitHub will publish the CVE to the CVE List.
-   GitHub will broadcast our Security Advisory via the [GitHub Advisory Database](https://github.com/advisories).
-   GitHub will send [security alerts](https://docs.github.com/en/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies/about-alerts-for-vulnerable-dependencies) to all repositories that use our package (and have opted into security alerts).
    This includes Dependabot alerts.
-   We will make a bug-fix release.
-   We will send an announcement through our usual channels, including those listed on the Pylons Project website's [Contact](https://pylonsproject.org/about-contact.html) page.
-   We will provide credit to the reporter or researcher in the vulnerability notice.
",2022-03-13 08:20:20,['Generic policy'],email,4.9,10,0,2,0,2,10,10,10,0,9,1,-1,0,0,10,-1,0,10,0.0,8.0,2.0,4.0,10.0,0.0,0.0,0.0,164.0,230.0,1361.0,6.0
pylons/pyramid,https://github.com/pylons/pyramid,11903,5119,2010-10-24,279,2706,3761,3960,3960,885,163,https://api.github.com/repos/Pylons/.github/contents/SECURITY.md,"# Security Policy

To report security issues with projects under the Pylons Project, send email to: pylons-project-security@googlegroups.com.
If we determine that your report may be a security issue with the project, we may contact you for further information.
We volunteers ask that you delay public disclosure of your report for at least ninety (90) days from the date you report it to us.
This will allow sufficient time for us to process your report and coordinate disclosure with you.

Once verified and fixed, the following steps will be taken.

-   We will use GitHub's Security Advisory tool to report the issue.
-   GitHub will review our Security Advisory report for compliance with Common Vulnerabilities and Exposures (CVE) rules.
    If it is compliant, they will submit it to the MITRE Corporation to generate a [CVE](https://www.cve.org/).
    This in turn submits the CVE to the [National Vulnerability Database (NVD)](https://nvd.nist.gov/vuln/search).
    GitHub notifies us of their decision.
-   Assuming it is compliant, we then publish our Security Advisory on GitHub, which triggers the next steps.
-   GitHub will publish the CVE to the CVE List.
-   GitHub will broadcast our Security Advisory via the [GitHub Advisory Database](https://github.com/advisories).
-   GitHub will send [security alerts](https://docs.github.com/en/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies/about-alerts-for-vulnerable-dependencies) to all repositories that use our package (and have opted into security alerts).
    This includes Dependabot alerts.
-   We will make a bug-fix release.
-   We will send an announcement through our usual channels, including those listed on the Pylons Project website's [Contact](https://pylonsproject.org/about-contact.html) page.
-   We will provide credit to the reporter or researcher in the vulnerability notice.
",2022-03-13 08:20:20,['Generic policy'],email,5.5,10,3,10,0,5,10,10,10,0,9,0,-1,0,0,10,-1,0,10,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,2.0,9.0,10.0,0.0
pylons/waitress,https://github.com/pylons/waitress,1036,4700,2011-12-17,50,206,445,1442,1442,165,38,https://api.github.com/repos/Pylons/.github/contents/SECURITY.md,"# Security Policy

To report security issues with projects under the Pylons Project, send email to: pylons-project-security@googlegroups.com.
If we determine that your report may be a security issue with the project, we may contact you for further information.
We volunteers ask that you delay public disclosure of your report for at least ninety (90) days from the date you report it to us.
This will allow sufficient time for us to process your report and coordinate disclosure with you.

Once verified and fixed, the following steps will be taken.

-   We will use GitHub's Security Advisory tool to report the issue.
-   GitHub will review our Security Advisory report for compliance with Common Vulnerabilities and Exposures (CVE) rules.
    If it is compliant, they will submit it to the MITRE Corporation to generate a [CVE](https://www.cve.org/).
    This in turn submits the CVE to the [National Vulnerability Database (NVD)](https://nvd.nist.gov/vuln/search).
    GitHub notifies us of their decision.
-   Assuming it is compliant, we then publish our Security Advisory on GitHub, which triggers the next steps.
-   GitHub will publish the CVE to the CVE List.
-   GitHub will broadcast our Security Advisory via the [GitHub Advisory Database](https://github.com/advisories).
-   GitHub will send [security alerts](https://docs.github.com/en/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies/about-alerts-for-vulnerable-dependencies) to all repositories that use our package (and have opted into security alerts).
    This includes Dependabot alerts.
-   We will make a bug-fix release.
-   We will send an announcement through our usual channels, including those listed on the Pylons Project website's [Contact](https://pylonsproject.org/about-contact.html) page.
-   We will provide credit to the reporter or researcher in the vulnerability notice.
",2022-03-13 08:20:20,['Generic policy'],email,5.8,10,3,8,0,0,10,10,10,0,9,10,-1,0,0,10,-1,0,10,1.0,54.0,8.0,3.0,0.0,0.0,0.0,0.0,523.0,501.0,633.0,31.0
pymysql/pymysql,https://github.com/pymysql/pymysql,1115,4843,2011-07-27,110,504,1167,7669,7669,1423,228,https://api.github.com/repos/pymysql/pymysql/contents/SECURITY.md,"## Security contact information

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure.
",2023-03-31 14:42:11,['Reporting mechanism'],external,6.7,10,3,10,0,2,10,10,10,10,10,4,-1,0,10,10,-1,0,10,14.0,99.0,23.0,4.0,119.0,0.0,0.0,0.0,756.0,1163.0,885.0,19.0
pypa/pip,https://github.com/pypa/pip,14871,4986,2011-03-06,397,5621,12989,9511,9511,3024,318,https://api.github.com/repos/pypa/pip/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please read the guidelines on reporting security issues [on the
official website](https://www.python.org/dev/security/) for
instructions on how to report a security-related problem to
the Python Security Response Team responsibly.

To reach the response team, email `security at python dot org`.
",2023-02-20 15:37:15,"['Generic policy', 'Reporting mechanism']",email,6.2,0,3,10,2,7,10,10,10,10,10,10,-1,0,0,9,-1,0,10,1.0,14.0,7.0,0.0,1.0,0.0,0.0,0.0,111.0,159.0,198.0,2.0
pypa/pipenv,https://github.com/pypa/pipenv,8992,2840,2017-01-20,399,1948,6201,24865,24865,1865,360,https://api.github.com/repos/pypa/pipenv/contents/SECURITY.md,"## Security contact information

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure.
",2024-07-30 11:22:42,['Reporting mechanism'],external,5.3,3,3,10,0,6,10,10,10,0,10,10,10,0,0,10,-1,0,0,9.0,9.0,2.0,1.0,7.0,0.0,0.0,0.0,211.0,413.0,896.0,3.0
pypa/setuptools,https://github.com/pypa/setuptools,15720,3136,2016-03-29,386,1777,4365,2503,2503,1187,98,https://api.github.com/repos/pypa/setuptools/contents/SECURITY.md,"# Security Contact

To report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.
",2023-07-08 01:48:23,['Reporting mechanism'],external,6.0,2,0,10,0,5,10,10,10,10,10,10,-1,0,0,10,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,28.0,53.0,26.0,0.0
pypa/virtualenv,https://github.com/pypa/virtualenv,842,4986,2011-03-06,125,1414,2754,4820,4820,1027,169,https://api.github.com/repos/pypa/virtualenv/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

| Version   | Supported          |
| --------- | ------------------ |
| 20.15.1 + | :white_check_mark: |
| < 20.15.1 | :x:                |

## Reporting a Vulnerability

To report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift
will coordinate the fix and disclosure.
",2022-07-22 21:31:54,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",external,6.3,6,8,6,0,2,10,10,10,0,10,10,10,0,0,10,-1,0,10,3.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,23.0,29.0,313.0,1.0
python-imaging/pillow,https://github.com/python-imaging/pillow,18767,4480,2012-07-24,384,5149,8324,12228,12228,2226,220,https://api.github.com/repos/python-imaging/pillow/contents/.github/SECURITY.md,"# Security policy

To report sensitive vulnerability information, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.

If your organisation/employer is a distributor of Pillow and would like advance notification of security-related bugs, please let us know your preferred contact method.
",2019-05-24 12:45:48,['Reporting mechanism'],email,7.8,10,0,10,0,8,10,10,10,10,9,10,10,0,0,10,-1,10,10,2.0,10.0,0.0,4.0,0.0,0.0,0.0,0.0,242.0,218.0,276.0,3.0
python-ldap/python-ldap,https://github.com/python-ldap/python-ldap,961,2532,2017-11-23,31,311,578,401,401,120,21,https://api.github.com/repos/python-ldap/python-ldap/contents/SECURITY.md,"# Security Policy

## Supported Versions

Security updates are applied only to the latest release.

## Reporting a Vulnerability

If you have discovered a security vulnerability in this project, please report it privately. **Do not disclose it as a public issue.** This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.

Please disclose it at our [security advisory](https://github.com/python-ldap/python-ldap/security/advisories/new).

This project is maintained by a team of volunteers on a reasonable-effort basis. As such, vulnerabilities will be disclosed in a best effort base.
",2023-07-27 23:55:14,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,5.5,10,8,4,0,7,10,10,0,0,9,1,-1,0,0,10,0,10,10,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,23.0,99.0,1.0
python-mechanize/mechanize,https://github.com/python-mechanize/mechanize,1094,2792,2017-03-08,16,23,100,726,726,108,22,https://api.github.com/repos/python-mechanize/mechanize/contents/SECURITY.md,"# Security Policy

## Supported Versions

There are no security specific releases of python-mechanize. Security bugs are fixed
and released just like all other bugs.

## Reporting a vulnerability

Preferably send an email to kovid at kovidgoyal.net or open an issue in the
GitHub repository, though the latter means you are disclosing the vulnerability
publicly before it can be fixed.
",2021-08-31 13:39:43,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_issue,3.2,10,0,0,0,1,10,-1,0,0,10,0,-1,-1,0,4,-1,-1,10,1.0,21.0,0.0,7.0,1.0,0.0,0.0,0.0,175.0,172.0,609.0,7.0
python-rope/rope,https://github.com/python-rope/rope,3359,3986,2013-11-30,65,385,745,1950,1950,164,27,https://api.github.com/repos/python-rope/rope/contents/SECURITY.md,"# Security Policy

## Supported Versions

Only the latest version of rope is supported.

## Reporting a Vulnerability

If you wish to report a security vulnerability, we ask that you send them to lieryan.24@proton.me. 
",2024-03-20 13:07:34,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,4.7,9,3,10,0,0,10,10,0,0,10,0,10,1,10,10,0,0,10,2.0,83.0,0.0,3.0,0.0,0.0,0.0,0.0,243.0,510.0,409.0,6.0
python/typed_ast,https://github.com/python/typed_ast,205,3178,2016-02-16,25,109,196,228,228,54,20,https://api.github.com/repos/python/.github/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please read the guidelines [on the
official website](https://www.python.org/dev/security/) for
instructions on how to report a security issue to
the Python team responsibly.

To reach the response team, email 
<a href=""mailto:%73%65%63%75%72%69%74%79%40%70%79%74%68%6F%6E%2E%6F%72%67"">security
at python dot org</a>.
",2024-04-24 04:29:08,"['Generic policy', 'Reporting mechanism']",external,4.4,10,3,0,0,5,10,10,0,0,9,0,-1,0,0,10,-1,0,10,0.0,6.0,0.0,1.0,0.0,0.0,0.0,0.0,115.0,57.0,116.0,0.0
pythoncharmers/python-future,https://github.com/pythoncharmers/python-future,1949,4125,2013-07-14,106,249,641,1172,1172,291,39,https://api.github.com/repos/pythoncharmers/python-future/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

Security updates are applied only to the latest release.

## Reporting a Vulnerability

If you have discovered a security vulnerability in this project, please report it privately. **Do not disclose it as a public issue.** This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.

Please disclose it at [security advisory](https://github.com/PythonCharmers/python-future/security/advisories/new).

This project is maintained by a team of volunteers on a reasonable-effort basis. As such, please give us at least 90 days to work on a fix before public exposure.
",2023-06-05 18:04:38,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,5.3,10,0,0,0,2,10,10,10,10,10,0,-1,0,0,10,-1,0,10,0.0,0.0,0.0,1.0,19.0,0.0,0.0,1.0,10.0,11.0,5.0,0.0
pytorch/pytorch,https://github.com/pytorch/pytorch,80213,2999,2016-08-13,332,92891,138875,83428,83428,22509,1736,https://api.github.com/repos/pytorch/pytorch/contents/SECURITY.md,"# Security Policy

 - [**Reporting a Vulnerability**](#reporting-a-vulnerability)
 - [**Using Pytorch Securely**](#using-pytorch-securely)
   - [Untrusted models](#untrusted-models)
   - [Untrusted inputs](#untrusted-inputs)
   - [Data privacy](#data-privacy)
   - [Using distributed features](#using-distributed-features)
- [**CI/CD security principles**](#cicd-security-principles)
## Reporting Security Issues

Beware that none of the topics under [Using Pytorch Securely](#using-pytorch-securely) are considered vulnerabilities of Pytorch.

However, if you believe you have found a security vulnerability in PyTorch, we encourage you to let us know right away. We will investigate all legitimate reports and do our best to quickly fix the problem.

Please report security issues using https://github.com/pytorch/pytorch/security/advisories/new

Please refer to the following page for our responsible disclosure policy, reward guidelines, and those things that should not be reported:

https://www.facebook.com/whitehat


## Using Pytorch Securely
**Pytorch models are programs**, so treat its security seriously -- running untrusted models is equivalent to running untrusted code. In general we recommend that model weights and the python code for the model are distributed independently. That said, be careful about where you get the python code from and who wrote it (preferentially check for a provenance or checksums, do not run any pip installed package).

### Untrusted models
Be careful when running untrusted models. This classification includes models created by unknown developers or utilizing data obtained from unknown sources[^data-poisoning-sources].

**Prefer to execute untrusted models within a secure, isolated environment such as a sandbox** (e.g., containers, virtual machines). This helps protect your system from potentially malicious code. You can find further details and instructions in [this page](https://developers.google.com/code-sandboxing).

**Be mindful of risky model formats**. Give preference to share and load weights with the appropriate format for your use case. [safetensors](https://huggingface.co/docs/safetensors/en/index) gives the most safety but is the most restricted in what it supports. [`torch.load`](https://pytorch.org/docs/stable/generated/torch.load.html#torch.load) with `weights_only=True` is also secure to our knowledge even though it offers significantly larger surface of attack. Loading un-trusted checkpoint with `weights_only=False` MUST never be done.



Important Note: The trustworthiness of a model is not binary. You must always determine the proper level of caution depending on the specific model and how it matches your use case and risk tolerance.

[^data-poisoning-sources]: To understand risks of utilization of data from unknown sources, read the following Cornell papers on Data poisoning:
    https://arxiv.org/abs/2312.04748
    https://arxiv.org/abs/2401.05566

### Untrusted inputs during training and prediction

If you plan to open your model to untrusted inputs, be aware that inputs can also be used as vectors by malicious agents. To minimize risks, make sure to give your model only the permissions strictly required, and keep your libraries updated with the latest security patches.

If applicable, prepare your model against bad inputs and prompt injections. Some recommendations:
- Pre-analysis: check how the model performs by default when exposed to prompt injection (e.g. using fuzzing for prompt injection).
- Input Sanitation: Before feeding data to the model, sanitize inputs rigorously. This involves techniques such as:
    - Validation: Enforce strict rules on allowed characters and data types.
    - Filtering: Remove potentially malicious scripts or code fragments.
    - Encoding: Convert special characters into safe representations.
    - Verification: Run tooling that identifies potential script injections (e.g. [models that detect prompt injection attempts](https://python.langchain.com/docs/guides/safety/hugging_face_prompt_injection)).

### Data privacy

**Take special security measures if your model if you train models with sensitive data**. Prioritize [sandboxing](https://developers.google.com/code-sandboxing) your models and:
- Do not feed sensitive data to untrusted model (even if runs in a sandboxed environment)
- If you consider publishing a model that was partially trained with sensitive data, be aware that data can potentially be recovered from the trained weights (especially if model overfits).

### Using distributed features

PyTorch can be used for distributed computing, and as such there is a `torch.distributed` package. PyTorch Distributed features are intended for internal communication only. They are not built for use in untrusted environments or networks.

For performance reasons, none of the PyTorch Distributed primitives (including c10d, RPC, and TCPStore) include any authorization protocol and will send messages unencrypted. They accept connections from anywhere, and execute the workload sent without performing any checks. Therefore, if you run a PyTorch Distributed program on your network, anybody with access to the network can execute arbitrary code with the privileges of the user running PyTorch.

## CI/CD security principles
_Audience_: Contributors and reviewers, especially if modifying the workflow files/build system.

PyTorch CI/CD security philosophy is based on finding a balance between open and transparent CI pipelines while keeping the environment efficient and safe.

PyTorch testing requirements are complex, and a large part of the code base can only be tested on specialized powerful hardware, such as GPU, making it a lucrative target for resource misuse. To prevent this, we require workflow run approval for PRs from non-member contributors. To keep the volume of those approvals relatively low, we easily extend write permissions to the repository to regular contributors.

More widespread write access to the repo presents challenges when it comes to reviewing changes, merging code into trunk, and creating releases. [Protected branches](https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches) are used to restrict the ability to merge to the trunk/release branches only to the repository administrators and merge bot. The merge bot is responsible for mechanistically merging the change and validating reviews against the path-based rules defined in [merge_rules.yml](https://github.com/pytorch/pytorch/blob/main/.github/merge_rules.yaml). Once a PR has been reviewed by person(s) mentioned in these rules, leaving a `@pytorchbot merge` comment on the PR will initiate the merge process. To protect merge bot credentials from leaking, merge actions must be executed only on ephemeral runners (see definition below) using a specialized deployment environment.

To speed up the CI system, build steps of the workflow rely on the distributed caching mechanism backed by [sccache](https://github.com/mozilla/sccache), making them susceptible to cache corruption compromises. For that reason binary artifacts generated during CI should not be executed in an environment that contains an access to any sensitive/non-public information and should not be published for use by general audience. One should not have any expectation about the lifetime of those artifacts, although in practice they likely remain accessible for about two weeks after the PR has been closed.

To speed up CI system setup, PyTorch relies heavily on Docker to pre-build and pre-install the dependencies. To prevent a potentially malicious PR from altering ones that were published in the past, ECR has been configured to use immutable tags.

To improve runner availability and more efficient resource utilization, some of the CI runners are non-ephemeral, i.e., workflow steps from completely unrelated PRs could be scheduled sequentially on the same runner, making them susceptible to reverse shell attacks. For that reason, PyTorch does not rely on the repository secrets mechanism, as these can easily be compromised in such attacks.

### Release pipelines security

To ensure safe binary releases, PyTorch release pipelines are built on the following principles:
 - All binary builds/upload jobs must be run on ephemeral runners, i.e., on a machine that is allocated from the cloud to do the build and released back to the cloud after the build is finished. This protects those builds from interference from external actors, who potentially can get reverse shell access to a non-ephemeral runner and wait there for a binary build.
 - All binary builds are cold-start builds, i.e., distributed caching/incremental builds are not permitted. This renders builds much slower than incremental CI builds but isolates them from potential compromises of the intermediate artifacts caching systems.
 - All upload jobs are executed in a [deployment environments](https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment) that are restricted to protected branches
 - Security credentials needed to upload binaries to PyPI/conda or stable indexes `download.pytorch.org/whl` are never uploaded to repo secrets storage/environment. This requires an extra manual step to publish the release but ensures that access to those would not be compromised by deliberate/accidental leaks of secrets stored in the cloud.
 - No binary artifacts should be published to GitHub releases pages, as these are overwritable by anyone with write permission to the repo.
",2021-07-07 20:34:12,"['Generic policy', 'Reporting mechanism', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline']",advisory,5.3,9,1,-1,0,1,10,10,10,0,9,10,10,0,0,10,0,0,9,,,,,,,,,,,,
pytorch/serve,https://github.com/pytorch/serve,3880,1854,2019-10-03,177,1710,3347,4197,4197,858,56,https://api.github.com/repos/pytorch/serve/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
|---------| ------------------ |
| 0.11.1   | :white_check_mark: |


## How we do security


As much as possible, TorchServe relies on automated tools to do security scanning. In particular, we support:

1. Dependency Analysis: Using Dependabot
2. Docker Scanning: Using Snyk
3. Code Analysis: Using CodeQL

## Important Security Guidelines

1. TorchServe listens on the following ports
    1. HTTP - `8080`, `8081`, `8082`
    2. gRPC - `7070`, `7071`

    These ports are accessible to `localhost` by default.  The addresses can be configured by following the guides for
    [HTTP](https://github.com/pytorch/serve/blob/master/docs/configuration.md#configure-torchserve-listening-address-and-port) and
    [gRPC](https://github.com/pytorch/serve/blob/master/docs/configuration.md#configure-torchserve-grpc-listening-addresses-and-ports).
    TorchServe does not prevent users from configuring the address to be of any value, including the wildcard address `0.0.0.0`.
    Please be aware of the security risks of configuring the address to be `0.0.0.0`, this will give all addresses(including publicly accessible addresses, if any)
    on the host, access to the TorchServe endpoints listening on the ports shown above.
2. By [default](https://github.com/pytorch/serve/blob/master/docker/Dockerfile), TorchServe's Docker image is configured to expose the ports `8080`, `8081`, `8082`, `7070`, `7071` to the host. When starting the container,
   map the ports exposed by the container to `localhost` ports or a specific IP address, as shown in this [security guideline](https://github.com/pytorch/serve/blob/master/docker/README.md#security-guideline).

3. Be sure to validate the authenticity of the `.mar` file being used with TorchServe.
    1. A `.mar` file being downloaded from the internet from an untrustworthy source may have malicious code, compromising the integrity of your application.
    2. TorchServe executes the arbitrary python code packaged in the `mar` file. Make sure that you've either audited that the code you're using is safe and/or is from a source that you trust.
    3. TorchServe supports custom [plugins](https://github.com/pytorch/serve/tree/master/plugins) and [handlers](https://github.com/pytorch/serve/blob/master/docs/custom_service.md).
       These can be utilized to extend TorchServe functionality to perform runtime security scanning using tools such as:
        - Clamd: https://pypi.org/project/clamd/
        - VirusTotal: https://virustotal.github.io/vt-py/
        - Fickling: https://github.com/trailofbits/fickling
    4. Running TorchServe inside a container environment and loading an untrusted `.mar` file does not guarantee isolation from a security perspective.
4. By default, TorchServe allows you to register models from all URLs. Make sure to set `allowed_urls` parameter in config.properties to restrict this. You can find more details in the [configuration guide](https://pytorch.org/serve/configuration.html#other-properties).
    - `use_env_allowed_urls=true` is required in config.properties to read `allowed_urls` from environment variable.
5. Enable SSL:

    TorchServe supports two ways to configure SSL:
    1. Using a keystore
    2. Using private-key/certificate files

    You can find more details in the [configuration guide](https://pytorch.org/serve/configuration.html#enable-ssl).
6. Prepare your model against bad inputs and prompt injections. Some recommendations:
    1. Pre-analysis: check how the model performs by default when exposed to prompt injection (e.g. using [fuzzing for prompt injection](https://github.com/FonduAI/awesome-prompt-injection?tab=readme-ov-file#tools)).
    2. Input Sanitation: Before feeding data to the model, sanitize inputs rigorously. This involves techniques such as:
        - Validation: Enforce strict rules on allowed characters and data types.
        - Filtering: Remove potentially malicious scripts or code fragments.
        - Encoding: Convert special characters into safe representations.
        - Verification: Run tooling that identifies potential script injections (e.g. [models that detect prompt injection attempts](https://python.langchain.com/docs/guides/safety/hugging_face_prompt_injection)).
7. If you intend to run multiple models in parallel with shared memory, it is your responsibility to ensure the models do not interact or access each other's data. The primary areas of concern are tenant isolation, resource allocation, model sharing and hardware attacks.
8. TorchServe enforces token authorization by default: check [documentation](https://github.com/pytorch/serve/blob/master/docs/token_authorization_api.md) for more information.
9. By default, TorchServe prevents you from registering and deleting models after startup. Check out Model API control [documentation](./docs/model_api_control.md) for more information.

## Reporting a Vulnerability

If you find a vulnerability please report it to https://www.facebook.com/whitehat and aws-security@amazon.com
",2022-04-01 17:25:17,"['Generic policy', 'Scope of practice', 'User guideline', 'User guideline', 'Reporting mechanism']",email_external,5.5,7,0,10,0,10,10,10,10,0,10,10,-1,0,7,10,0,0,2,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,28.0,62.0,50.0,1.0
pytorchlightning/pytorch-lightning,https://github.com/pytorchlightning/pytorch-lightning,10434,2040,2019-03-31,441,10292,17404,28279,28279,3380,250,https://api.github.com/repos/pytorchlightning/pytorch-lightning/contents/SECURITY.md,"developer@lightning.ai
",2021-12-17 01:31:03,[],email,4.9,10,1,10,0,9,10,0,10,0,10,10,10,0,0,6,0,0,8,0.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,16.0,38.0,68.0,0.0
pyupio/safety,https://github.com/pyupio/safety,676,2932,2016-10-19,39,395,614,1720,1720,147,34,https://api.github.com/repos/pyupio/safety/contents/SECURITY.md,"# Security Policy

## Supported Versions

We release patches and updates to ensure the security of our software. Below is a list of supported versions:

| Version | Supported          |
| ------- | ------------------ |
| 3.x.x   | ✅  |
| < 3.0   | ❌                 |

## Reporting a Vulnerability

If you discover a security vulnerability in this repository, please report it to us directly. We take security issues seriously and will respond promptly to address the issue.

To report a vulnerability:

1. **Email**: Please send the details to [engineers@safetycli.com](mailto:engineers@safetycli.com). Include as much information as possible to help us understand the nature of the vulnerability and how it can be reproduced.

2. **Bug Bounty Program**: We offer a bug bounty program for qualifying vulnerabilities. Detailed information about the program, including eligibility and rewards, can be found on our [Bug Bounty Program page](https://safetycli.com/resources/bug-bounty).

## Security Best Practices

We encourage our users to follow these best practices to ensure the security of their deployments:

- Always run the latest version of the software to benefit from security updates.
- Regularly review and update dependencies to avoid known vulnerabilities.
- Consider using containerization and sandboxing techniques to isolate the software from other parts of your system.

## Code of Conduct

Please note that all participants in our community are expected to adhere to our [Code of Conduct](./CODE_OF_CONDUCT.md). This includes those participating in our security bounty program.

Thank you for helping to keep our project secure!
",2024-08-28 19:46:55,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'User guideline', 'User guideline']",email_external,5.8,10,5,10,0,10,10,10,0,0,10,10,10,0,0,10,0,0,10,0.0,19.0,13.0,3.0,2.0,0.0,0.0,15.0,208.0,87.0,160.0,2.0
pywbem/pywbem,https://github.com/pywbem/pywbem,2984,3311,2015-10-06,8,2112,3238,41,41,26,6,https://api.github.com/repos/pywbem/pywbem/contents/SECURITY.md,"# Security Policy

## Supported Versions

This project supports its released versions as follows:

- The [latest released version on Pypi](https://pypi.org/project/pywbem/)
  gets fixes, including security fixes.
- Earlier versions are not fixed anymore.

## Reporting a Vulnerability

Please report vulnerabilities via the
[Security Advisories](https://github.com/pywbem/pywbem/security/advisories)
page of this project. This ensures that they are passed on to the maintainers
privately.

Do not report them as issues or pull requests, since that would reveal the
vulnerability before the maintainers have a chance to fix it. Note that even
with a pull request that fixes the vulnerability perfectly, it is revealed
publicly before a new version of the package can be released to Pypi.
",2023-06-01 07:22:15,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,4.8,6,3,9,0,4,10,0,10,0,10,10,-1,0,0,10,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
qiskit/qiskit-ibm-runtime,https://github.com/qiskit/qiskit-ibm-runtime,1775,1089,2021-11-05,93,1233,1981,153,153,154,15,https://api.github.com/repos/qiskit/qiskit-ibm-runtime/contents/SECURITY.md,"# Security Policy

## Supported Versions

`qiskit-ibm-runtime` supports one minor version release at a time, both for bug
and security fixes. For example, if the most recent release is 0.12.1, then the
0.12.x release series is currently supported.

## Reporting a Vulnerability

To report vulnerabilities, you can privately report a potential security issue
via the Github security vulnerabilities feature. This can be done here:

https://github.com/Qiskit/qiskit-ibm-runtime/security/advisories

Please do **not** open a public issue about a potential security vulnerability.

You can find more details on the security vulnerability feature in the Github
documentation here:

https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability
",2023-02-17 19:41:01,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,5.7,10,8,10,0,9,10,10,0,0,10,10,10,0,0,10,-1,0,1,3.0,106.0,30.0,5.0,6.0,0.0,0.0,0.0,4390.0,1223.0,511.0,13.0
qutebrowser/qutebrowser,https://github.com/qutebrowser/qutebrowser,25249,3778,2014-06-26,346,2245,7790,9686,9686,1009,163,https://api.github.com/repos/qutebrowser/qutebrowser/contents/.github/SECURITY.md,"Please report security bugs to [security@qutebrowser.org](mailto:security@qutebrowser.org).
(or if GPG encryption is desired, contact me@the-compiler.org with GPG ID [0x916EB0C8FD55A072](https://www.the-compiler.org/pubkey.asc)).

Alternatively, [report a vulnerability](https://github.com/qutebrowser/qutebrowser/security/advisories/new) via GitHub's [private reporting feature](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability).
",2020-05-07 16:04:15,[],email_advisory,6.8,10,3,6,0,4,10,10,10,0,10,10,10,0,8,10,8,0,10,0.0,15.0,5.0,0.0,3.0,2.0,0.0,0.0,109.0,88.0,45.0,0.0
ray-project/ray,https://github.com/ray-project/ray,22895,2926,2016-10-25,416,29345,48137,33655,33655,5719,473,https://api.github.com/repos/ray-project/ray/contents/SECURITY.md,"# Security Policy

If you are deploying Ray, read [Security](doc/source/ray-security/index.md).

## Reporting a vulnerability

Please report security issues to `security@anyscale.com`.
",2022-01-11 16:54:51,"['Generic policy', 'Reporting mechanism']",email,6.0,8,8,10,0,9,10,10,10,0,10,10,-1,0,0,9,-1,0,0,5.0,13.0,2.0,0.0,1.0,0.0,0.0,0.0,56.0,53.0,62.0,1.0
requests/requests,https://github.com/requests/requests,6317,5007,2011-02-13,401,2550,6522,52136,52136,9326,1326,https://api.github.com/repos/requests/requests/contents/.github/SECURITY.md,"# Vulnerability Disclosure

If you think you have found a potential security vulnerability in
requests, please email [Nate](mailto:nate.prewitt@gmail.com)
and [Seth](mailto:sethmichaellarson@gmail.com) directly.
**Do not file a public issue.**

Our PGP Key fingerprints are:

- 8722 7E29 AD9C FF5C FAC3  EA6A 44D3 FF97 B80D C864 ([@nateprewitt](https://keybase.io/nateprewitt))

- EDD5 6765 A9D8 4653 CBC8  A134 51B0 6736 1740 F5FC ([@sethmlarson](https://keybase.io/sethmlarson))

You can also contact us on [Keybase](https://keybase.io) with the
profiles above if desired.

If English is not your first language, please try to describe the
problem and its impact to the best of your ability. For greater detail,
please use your native language and we will try our best to translate it
using online services.

Please also include the code you used to find the problem and the
shortest amount of code necessary to reproduce it.

Please do not disclose this to anyone else. We will retrieve a CVE
identifier if necessary and give you full credit under whatever name or
alias you provide. We will only request an identifier when we have a fix
and can publish it in a release.

We will respect your privacy and will only publicize your involvement if
you grant us permission.

## Process

This following information discusses the process the requests project
follows in response to vulnerability disclosures. If you are disclosing
a vulnerability, this section of the documentation lets you know how we
will respond to your disclosure.

### Timeline

When you report an issue, one of the project members will respond to you
within two days *at the outside*. In most cases responses will be
faster, usually within 12 hours. This initial response will at the very
least confirm receipt of the report.

If we were able to rapidly reproduce the issue, the initial response
will also contain confirmation of the issue. If we are not, we will
often ask for more information about the reproduction scenario.

Our goal is to have a fix for any vulnerability released within two
weeks of the initial disclosure. This may potentially involve shipping
an interim release that simply disables function while a more mature fix
can be prepared, but will in the vast majority of cases mean shipping a
complete release as soon as possible.

Throughout the fix process we will keep you up to speed with how the fix
is progressing. Once the fix is prepared, we will notify you that we
believe we have a fix. Often we will ask you to confirm the fix resolves
the problem in your environment, especially if we are not confident of
our reproduction scenario.

At this point, we will prepare for the release. We will obtain a CVE
number if one is required, providing you with full credit for the
discovery. We will also decide on a planned release date, and let you
know when it is. This release date will *always* be on a weekday.

At this point we will reach out to our major downstream packagers to
notify them of an impending security-related patch so they can make
arrangements. In addition, these packagers will be provided with the
intended patch ahead of time, to ensure that they are able to promptly
release their downstream packages. Currently the list of people we
actively contact *ahead of a public release* is:

-   Jeremy Cline, Red Hat (@jeremycline)
-   Daniele Tricoli, Debian (@eriol)

We will notify these individuals at least a week ahead of our planned
release date to ensure that they have sufficient time to prepare. If you
believe you should be on this list, please let one of the maintainers
know at one of the email addresses at the top of this article.

On release day, we will push the patch to our public repository, along
with an updated changelog that describes the issue and credits you. We
will then issue a PyPI release containing the patch.

At this point, we will publicise the release. This will involve mails to
mailing lists, Tweets, and all other communication mechanisms available
to the core team.

We will also explicitly mention which commits contain the fix to make it
easier for other distributors and users to easily patch their own
versions of requests if upgrading is not an option.
",2020-01-19 15:41:09,"['Reporting mechanism', 'User guideline', 'Projects practice']",email,8.6,10,6,10,0,10,10,10,10,10,10,10,-1,8,10,10,0,10,10,106.0,292.0,11.0,6.0,0.0,0.0,0.0,0.0,4130.0,2530.0,1068.0,65.0
richardbarran/django-photologue,https://github.com/richardbarran/django-photologue,899,4471,2012-08-02,44,85,228,675,675,238,46,https://api.github.com/repos/richardbarran/django-photologue/contents/SECURITY.md,"# Security Policy

## Supported Versions

Please note that in the case of a security issue being reported, only the latest release will be fixed. Users of earlier releases of Photologue can of course patch the version that they use and open an MR - it will be reviewed and a micro-release published.

## Reporting a Vulnerability

Please report vulnerabilities via the contact form at the personal website of the main project contributor: https://arbee.design/en-gb/contact/
",2022-08-25 20:30:03,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",external,4.1,10,0,10,0,0,10,10,0,0,10,0,-1,0,0,10,-1,0,10,16.0,153.0,90.0,0.0,0.0,0.0,0.0,0.0,1487.0,754.0,282.0,1.0
rucio/rucio,https://github.com/rucio/rucio,13214,2548,2017-11-07,126,4429,7116,246,246,313,22,https://api.github.com/repos/rucio/rucio/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

Rucio follows a release policy, based on [semantic versioning](https://semver.org),
with **major** (named) releases. Approximately every 4 months we produce a major 
release with a version number like **x.0.0** (with x > 0). This release line is 
maintained with minor/patch releases published every two weeks.

Typically once a year we will designate a release line a **Long-term Support** (LTS) 
release line. This release line will be supported with **security** and **critical** 
patches for approximately two years. It is foreseen to have an overlap of at least 
12 months between two LTS release lines, to give communities a comfortable time 
window to deploy the new LTS release.

**Release lines other than the latest and active LTS ones are not maintained!**

For further information, including the current list of maintained release lines, 
read the [release policy](https://rucio.cern.ch/documentation/started/releasepolicy) 
on the Rucio documentation. 

## Reporting a Vulnerability

Please report it privately using GitHub's [Report a vulnerability](https://github.com/rucio/rucio/security/advisories/new) 
option. You can also reach the security team at rucio-security@cern.ch.
",2024-07-26 13:32:51,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,7.0,10,6,10,0,10,10,10,10,0,10,10,-1,1,0,10,-1,0,10,2.0,12.0,1.0,0.0,8.0,0.0,0.0,0.0,185.0,63.0,99.0,3.0
run-llama/llama_index,https://github.com/run-llama/llama_index,5488,727,2022-11-02,478,6138,11532,36370,36370,5191,244,https://api.github.com/repos/run-llama/llama_index/contents/SECURITY.md,"# Security Policy

Before reporting a vulnerability, please review In-Scope Targets and Out-of-Scope Targets below.

## In-Scope Targets

The following packages and repositories are eligible for bug bounties:

- llama-index-core
- llama-index-integrations (see exceptions)
- llama-index-networks

## Out of Scope Targets

All out of scope targets defined by huntr as well as:

- **llama-index-experimental**: This repository is for experimental code and is not
  eligible for bug bounties, bug reports to it will be marked as interesting or waste of
  time and published with no bounty attached.
- **llama-index-integrations/tools**: Community contributed tools are not eligible for bug
  bounties. Generally tools interact with the real world. Developers are expected to
  understand the security implications of their code and are responsible for the security
  of their tools.
- Code documented with security notices. This will be decided done on a case by
  case basis, but likely will not be eligible for a bounty as the code is already
  documented with guidelines for developers that should be followed for making their
  application secure.

## Reporting LlamaCloud Vulnerabilities

Please report security vulnerabilities associated with LlamaCloud by email to `security@llamaindex.ai`.

- LlamaCloud site: https://cloud.llamaindex.ai
- LlamaCloud API: https://api.cloud.llamaindex.ai/docs
- LlamaParse client: https://github.com/run-llama/llama_parse

### Other Security Concerns

For any other security concerns, please contact us at `security@llamaindex.ai`.
",2024-02-08 03:05:48,"['Generic policy', 'Scope of practice', 'Scope of practice', 'Reporting mechanism', 'Information on maintainer']",email,6.2,10,8,10,0,8,10,10,10,0,10,10,-1,0,10,10,0,0,0,23.0,168.0,15.0,35.0,6.0,0.0,0.0,4.0,1210.0,837.0,748.0,7.0
saleor/saleor,https://github.com/saleor/saleor,21627,4277,2013-02-12,249,11259,15577,20739,20739,5490,374,https://api.github.com/repos/saleor/saleor/contents/SECURITY.md,"# Security Policy

## Supported Versions

The following releases of Saleor are currently supported.

| Version | Supported          |
| ------- | ------------------ |
| ≥ 3.16  | :white_check_mark: |
| < 3.16  | :x:                |

## Reporting a Vulnerability

Please DO NOT report security vulnerabilities using a public GitHub issue. If you believe you've found a security issue, please contact us through one of the following methods:
- https://github.com/saleor/saleor/security/advisories
- Through our mailing list: security@saleor.io

We do not currently have a bounty program in place, so we cannot offer monetary rewards for any reported problems.

Whichever method you choose, you will be credited as the reporter once the announcement is published.
",2020-02-10 10:28:15,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_advisory,6.1,10,6,10,0,10,10,0,10,0,10,10,10,2,10,10,-1,0,2,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,21.0,58.0,104.0,0.0
saltstack/salt,https://github.com/saltstack/salt,121362,5000,2011-02-20,289,40385,66949,14167,14167,5476,532,https://api.github.com/repos/saltstack/salt/contents/SECURITY.md,"# SaltStack's Security Disclosure Policy

**Email**
- saltproject-security.pdl@broadcom.com

**GPG key ID:**
- 37654A06

**GPG key fingerprint:**
- `99EF 26F2 6469 2D24 973A 7007 E8BF 76A7 3765 4A06`

**GPG Public Key**

```
-----BEGIN PGP PUBLIC KEY BLOCK-----

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
=pPmt
-----END PGP PUBLIC KEY BLOCK-----
```

The SaltStack Security Team is available at saltproject-security.pdl@broadcom.com for
security-related bug reports or questions.

We request the disclosure of any security-related bugs or issues be reported
non-publicly until such time as the issue can be resolved and a security-fix
release can be prepared. At that time we will release the fix and make a public
announcement with upgrade instructions and download locations.

## Security response procedure

SaltStack takes security and the trust of our customers and users very
seriously. Our disclosure policy is intended to resolve security issues as
quickly and safely as is possible.

1.  A security report sent to saltproject-security.pdl@broadcom.com is assigned to a team
    member. This person is the primary contact for questions and will
    coordinate the fix, release, and announcement.

2.  The reported issue is reproduced and confirmed. A list of affected projects
    and releases is made.

3.  Fixes are implemented for all affected projects and releases that are
    actively supported. Back-ports of the fix are made to any old releases that
    are actively supported.

4.  Packagers are notified via the [salt-packagers](https://groups.google.com/forum/#!forum/salt-packagers) mailing list that an issue
    was reported and resolved, and that an announcement is incoming.

5.  A new release is created and pushed to all affected repositories. The
    release documentation provides a full description of the issue, plus any
    upgrade instructions or other relevant details.

6.  An announcement is made to the [salt-users](https://groups.google.com/forum/#!forum/salt-users) and [salt-announce](https://groups.google.com/forum/#!forum/salt-announce) mailing
    lists. The announcement contains a description of the issue and a link to
    the full release documentation and download locations.

## Receiving security announcements

The fastest place to receive security announcements is via the [salt-announce](https://groups.google.com/forum/#!forum/salt-announce)
mailing list. This list is low-traffic.

## Guidance on Salt and security best practices

Reference the following documentation to ensure Salt best practices are being
implemented in your infrastructure:

- [Docs: Hardening Salt](https://docs.saltproject.io/en/master/topics/hardening.html)
- [Docs: Salt Best Practices](https://docs.saltproject.io/en/master/topics/best_practices.html)
- [Blog: How I Hardened My Salt Environment](https://saltproject.io/blog/how-i-hardened-my-salt-environment/)
",2020-10-08 14:25:37,"['Reporting mechanism', 'Reporting mechanism', 'Projects practice', 'User guideline']",email,6.8,6,8,10,0,8,10,10,10,0,10,10,-1,0,0,10,8,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
sanic-org/sanic,https://github.com/sanic-org/sanic,2906,3078,2016-05-26,290,1582,3000,18076,18076,1549,404,https://api.github.com/repos/sanic-org/sanic/contents/SECURITY.md,"# Security Policy

See https://sanic.dev/en/organization/policies.html
",2019-05-23 20:58:15,['Generic policy'],external,5.7,10,2,10,0,4,10,10,0,0,10,5,10,0,10,9,-1,0,10,0.0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,23.0,18.0,9.0,0.0
sap/cloud-pysec,https://github.com/sap/cloud-pysec,197,1993,2019-05-16,12,52,67,10,10,9,8,https://api.github.com/repos/SAP/.github/contents/SECURITY.md,"<!-- START SAP SECURITY.MD V0.0.1 BLOCK -->
<!-- Please do not remove the version header, this is needed for automatic updates of the SECURITY.md -->
# SAP Open Source Security Policy

SAP takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, including our primary [SAP](https://github.com/SAP), [SAP-docs](https://github.com/SAP-docs) organizations as well as [our other GitHub organizations and projects](https://opensource.sap.com).

If you believe you have found a security vulnerability in any SAP-owned repository, please report it to us as described below.

## Reporting Security Issues

**Please do not report security vulnerabilities through public GitHub issues.**

Instead, please report them via the SAP Trust Center at [https://www.sap.com/about/trust-center/security/incident-management.html](https://www.sap.com/about/trust-center/security/incident-management.html).

If you prefer to submit via email, please send an email to [secure@sap.com](mailto:secure@sap.com). If possible, encrypt your message with our PGP key; please download it from the [SAP Trust Center](https://www.sap.com/keyblock).

Please include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:

  - The repository name or URL
  - Type of issue (buffer overflow, SQL injection, cross-site scripting, etc.)
  - Full paths of the source file(s) related to the manifestation of the issue
  - The location of the affected source code (tag/branch/commit or direct URL)
  - Any particular configuration required to reproduce the issue
  - Step-by-step instructions to reproduce the issue
  - Proof-of-concept or exploit code (if possible)
  - Impact of the issue, including how an attacker might exploit the issue

This information will help us triage your report more quickly.

## Preferred Languages

We prefer all communications to be in English.

## Disclosure Guidelines

We like to ask you to follow the [Disclosure Guidelines for SAP Security Advisories](https://www.sap.com/documents/2022/02/9ccd9ca0-167e-0010-bca6-c68f7e60039b.html).

## SAP Internal Response Process

As an SAP employee, please check our internal open source security response process ([go/oss-security-response](https://go.sap.corp/oss-security-response)) for further details on how to handle security incidents.

<!-- END SAP SECURITY.MD V0.0.1 BLOCK -->
",2021-04-15 12:32:11,"['Generic policy', 'Reporting mechanism', 'Additional information', 'User guideline', 'Projects practice']",external,5.1,10,8,4,0,6,10,10,0,0,10,1,-1,0,0,10,-1,0,10,2.0,20.0,3.0,1.0,0.0,0.0,0.0,1.0,289.0,285.0,372.0,1.0
scalyr/scalyr-agent-2,https://github.com/scalyr/scalyr-agent-2,2546,3703,2014-09-09,39,1234,1304,70,70,58,18,https://api.github.com/repos/scalyr/scalyr-agent-2/contents/SECURITY.md,"# Security Policy and Procedures

If you believe you found a security issue or a vulnerability, please send a description of it to
our private mailing list at info [at] scalyr [dot] com.

Once you've submitted an issue, you should receive an acknowledgment from one our of team members
in 48 hours or less. If further action is necessary, you may receive additional follow-up emails.
",2021-05-03 10:02:24,['Reporting mechanism'],email,4.8,9,8,10,0,4,10,0,10,0,10,10,-1,2,7,4,-1,0,0,0.0,12.0,1.0,4.0,0.0,0.0,0.0,0.0,225.0,172.0,651.0,5.0
scikit-learn/scikit-learn,https://github.com/scikit-learn/scikit-learn,31864,5187,2010-08-17,409,17936,29135,59926,59926,25373,2141,https://api.github.com/repos/scikit-learn/scikit-learn/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version       | Supported          |
| ------------- | ------------------ |
| 1.5.2         | :white_check_mark: |
| < 1.5.2       | :x:                |

## Reporting a Vulnerability

Please report security vulnerabilities by email to `security@scikit-learn.org`.
This email is an alias to a subset of the scikit-learn maintainers' team.

If the security vulnerability is accepted, a patch will be crafted privately
in order to prepare a dedicated bugfix release as timely as possible (depending
on the complexity of the fix).

In addition to sending the report by email, you can also report security
vulnerabilities to [tidelift](https://tidelift.com/security).
",2021-10-25 16:27:08,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,8.9,10,3,10,0,10,10,-1,10,10,10,10,-1,-1,10,10,-1,-1,10,1.0,6.0,4.0,1.0,0.0,0.0,0.0,0.0,176.0,786.0,408.0,2.0
scipy/scipy,https://github.com/scipy/scipy,33665,4983,2011-03-09,413,11396,21764,13041,13041,5172,348,https://api.github.com/repos/scipy/.github/contents/SECURITY.md,"To report a security vulnerability to SciPy, please go to
https://tidelift.com/security and see the instructions there.

",2019-07-26 22:17:09,[],external,5.8,10,3,9,0,9,10,-1,0,10,10,10,-1,0,0,9,0,-1,10,32.0,63.0,18.0,10.0,9.0,16.0,0.0,4.0,970.0,564.0,436.0,5.0
scrapy/scrapy,https://github.com/scrapy/scrapy,10587,5364,2010-02-22,375,3426,6448,52927,52927,10538,1774,https://api.github.com/repos/scrapy/scrapy/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
| ------- | ------------------ |
| 2.11.x     | :white_check_mark: |
| < 2.11.x   | :x:                |

## Reporting a Vulnerability

Please report the vulnerability using https://github.com/scrapy/scrapy/security/advisories/new.
",2024-02-20 09:50:16,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,5.9,10,0,9,0,10,10,10,0,0,10,10,10,0,0,10,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,20.0,25.0,8.0,0.0
sh4nks/flask-caching,https://github.com/sh4nks/flask-caching,755,3039,2016-07-04,96,342,578,894,894,194,17,https://api.github.com/repos/pallets-eco/.github/contents/SECURITY.md,"# Security Policy

If you believe you have identified a security issue with a Pallets-Eco project,
**do not open a public issue**. To responsibly report a security issue, use
GitHub's [security advisory system][gh-docs]. From the project's repository,
click ""Security"" at the top, then click ""Advisories"" at the left, then click the
green ""New draft security advisory"" button. Alternatively, you may email
[security@palletsprojects.com](mailto:security@palletsprojects.com), and we will
convert that to a GitHub security advisory.

Be sure to include as much detail as necessary in your report. As with reporting
normal issues, a minimal reproducible example will help the maintainers address
the issue faster. Information about why the issue is a security issue is also
helpful. If you are able, you may also provide a fix for the issue.

A maintainer will reply acknowledging the report and how to continue. We will
obtain a CVE id as well, please do not do this on your own. We will work with
you to attempt to understand the issue and decide on its validity. Maintainers
are volunteers working in their free time, and therefore cannot guarantee any
specific timeline. Please be patient during this process.

The current feature release will receive security fixes. Fixes to older versions
may be considered based on usage information and severity, but are not
guaranteed. After fixing an issue, we will make a new release.

[gh-docs]: https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/creating-a-repository-security-advisory
",2024-02-09 20:30:27,['Reporting mechanism'],email_advisory,5.1,10,0,7,0,5,10,10,10,0,9,0,-1,0,0,9,-1,0,10,11.0,21.0,6.0,1.0,0.0,0.0,0.0,0.0,269.0,682.0,1236.0,4.0
simonrob/email-oauth2-proxy,https://github.com/simonrob/email-oauth2-proxy,334,1355,2021-02-12,9,40,298,843,843,94,20,https://api.github.com/repos/simonrob/email-oauth2-proxy/contents/SECURITY.md,"# Security Policy

## Supported Versions

Using the [latest release of the proxy](https://github.com/simonrob/email-oauth2-proxy/releases/latest) is always recommended.
Any security issues found in prior versions should be reported, but may only be fixed if they affect the latest version.

## Reporting a Vulnerability

Report vulnerabilities or security issues using [GitHub's security tools](https://github.com/simonrob/email-oauth2-proxy/security).
",2023-12-19 22:10:38,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,5.1,10,3,6,0,0,10,-1,0,0,10,10,-1,-1,6,10,0,-1,10,10.0,99.0,86.0,2.0,1.0,0.0,0.0,1.0,200.0,342.0,300.0,2.0
snowflakedb/snowflake-connector-python,https://github.com/snowflakedb/snowflake-connector-python,1496,3044,2016-06-29,103,1376,2081,589,589,471,41,https://api.github.com/repos/snowflakedb/snowflake-connector-python/contents/SECURITY.md,"# Security Policy


Please refer to the Snowflake [HackerOne program](https://hackerone.com/snowflake?type=team) for our security policies and for reporting any security vulnerabilities.

For other security related questions and concerns, please contact the Snowflake security team at security@snowflake.com
",2022-11-28 21:22:59,['Reporting mechanism'],external,6.6,10,1,10,0,10,10,10,10,0,10,10,-1,0,0,9,8,0,10,0.0,6.0,3.0,0.0,0.0,0.0,0.0,0.0,30.0,27.0,3.0,0.0
spotify/luigi,https://github.com/spotify/luigi,4159,4422,2012-09-20,348,2314,3312,17810,17810,2393,473,https://api.github.com/repos/spotify/luigi/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please report sensitive security issues via Spotify's [bug-bounty program](https://hackerone.com/spotify) by following this [instruction](https://docs.hackerone.com/programs/security-page.html), rather than GitHub. 
",2023-01-16 17:50:44,"['Generic policy', 'Reporting mechanism']",external,6.8,10,8,10,0,10,10,10,0,0,10,10,-1,0,10,9,-1,0,10,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,126.0,169.0,240.0,0.0
spotipy-dev/spotipy,https://github.com/spotipy-dev/spotipy,690,3860,2014-04-05,180,475,1161,5012,5012,958,79,https://api.github.com/repos/spotipy-dev/spotipy/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
| ------- | ------------------ |
| 2.x     | :white_check_mark: |
| 1.x     | :x:                |

## Reporting a Vulnerability

Report via https://github.com/spotipy-dev/spotipy/security/advisories.

Guidance: https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability.
",2023-01-07 08:26:17,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,6.9,10,6,9,0,8,10,10,10,0,10,10,10,0,0,10,-1,0,10,5.0,159.0,8.0,5.0,1.0,0.0,0.0,0.0,614.0,1665.0,974.0,8.0
sqlalchemy/sqlalchemy,https://github.com/sqlalchemy/sqlalchemy,17205,2163,2018-11-27,407,854,8770,9607,9607,1432,103,https://api.github.com/repos/sqlalchemy/sqlalchemy/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

For the current supported version of SQLAlchemy, see ""Current Release Series"" at 
https://www.sqlalchemy.org/download.html#current.

## Reporting a Vulnerability

SQLAlchemy participates in the Tidelift security infrastructure for reporting 
potential vulnerabilities reponsibly.  Please follow the guidelines at:

https://tidelift.com/docs/security

in order to report a security issue. Security-related issues in SQLAlchemy 
are extremely rare. Nevertheless, we would ask that you please do not file 
CVEs without emailing us first, so that proper disclosure steps may be taken. 


",2020-04-23 18:51:28,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.8,10,3,5,0,0,10,10,10,10,10,10,-1,0,0,10,0,0,10,0.0,5.0,1.0,21.0,0.0,0.0,0.0,0.0,119.0,121.0,335.0,0.0
stackstorm/st2,https://github.com/stackstorm/st2,22223,3843,2014-04-23,156,4337,5940,6074,6074,749,168,https://api.github.com/repos/stackstorm/st2/contents/SECURITY.md,"# Security Policies and Procedures

If you believe you found a security issue or a vulnerability, please send a description of it to
our private mailing list at info [at] stackstorm [dot] com.

Once you've submitted an issue, you should receive an acknowledgment from one our of team members
in 48 hours or less. If further action is necessary, you may receive additional follow-up emails.

For more information, please refer to https://docs.stackstorm.com/latest/security.html
",2019-07-10 19:23:43,['Reporting mechanism'],email,6.6,10,1,10,0,10,10,10,10,0,10,10,-1,0,0,10,-1,0,10,5.0,166.0,174.0,0.0,1.0,0.0,0.0,0.0,359.0,263.0,210.0,5.0
starlite-api/starlite,https://github.com/starlite-api/starlite,2945,1058,2021-12-06,208,2457,3597,5493,5493,374,40,https://api.github.com/repos/litestar-org/.github/contents/SECURITY.md,"# Security Policy

Thanks for helping make Litestar safe for everyone.

## Security

Litestar takes the security of our projects and services seriously, including all of the repositories managed by the [litestar organization](https://github.com/litestar-org).

We will ensure that your finding gets escalated to the appropriate maintainer(s) for remediation.

## Reporting Security Issues

**Please do not report security vulnerabilities through public GitHub issues, discussions, or pull requests.**

[Click to Open a Security Advisory Privately](https://github.com/litestar-org/litestar/security/advisories/new)

If you believe you have found a security vulnerability in any Litestar-managed repository, please report it to us through coordinated disclosure:

- In the affected repository, browse to the **Security** tab, select **Advisories**, select ""Report a vulnerability""
  - ![image](https://user-images.githubusercontent.com/45884264/217041010-8fd6b96b-329d-4d8e-8838-9b5bf4e1a78d.png)
- Please do **NOT** create an issue in the affected repository
- Please do **NOT** send a private message to and/or tag the ""@maintainer"" role on our [Discord server](https://discord.gg/MmcwxztmQb)

Please include as much of the information listed below as you can to help us better understand and resolve the issue:

- The type of issue (e.g., buffer overflow, SQL injection, or cross-site scripting)
- Full paths of source file(s) related to the manifestation of the issue
- The location of the affected source code (tag/branch/commit or direct URL)
- Any special configuration required to reproduce the issue
- Step-by-step instructions to reproduce the issue
- Proof-of-concept or exploit code (if possible)
- Impact of the issue, including how an attacker might exploit the issue

This information will help us triage your report more quickly.
",2023-02-05 18:19:48,"['Generic policy', 'Generic policy', 'Reporting mechanism']",advisory,7.4,10,4,10,0,10,10,10,10,0,10,10,10,0,9,10,-1,0,10,5.0,159.0,8.0,5.0,1.0,0.0,0.0,0.0,614.0,1665.0,974.0,8.0
streamlit/streamlit,https://github.com/streamlit/streamlit,6749,1894,2019-08-24,229,5026,9635,35399,35399,3076,320,https://api.github.com/repos/streamlit/streamlit/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version   | Supported |
| --------- | --------- |
| >= 1.11.1 | ✅        |

</br>

Please refer to the Snowflake [HackerOne program](https://hackerone.com/snowflake?type=team) for our security policies and for reporting any security vulnerabilities.
",2023-05-11 22:59:21,"['Generic policy', 'Scope of practice']",external,7.1,10,8,10,0,10,10,10,10,0,10,10,10,2,10,10,-1,0,0,,,,,,,,,,,,
sybrenstuvel/python-rsa,https://github.com/sybrenstuvel/python-rsa,603,3204,2016-01-21,36,120,238,485,485,113,11,https://api.github.com/repos/sybrenstuvel/python-rsa/contents/SECURITY.md,"# Security Policy

## Supported Versions

Security updates are applied only to the latest release.

## Reporting a Vulnerability

If you have discovered a security vulnerability in this project, please report it privately. **Do not disclose it as a public issue.** This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.

Please disclose it by email to <sybren@stuvel.eu>.

This project is maintained by a team of volunteers on a reasonable-effort basis. As such, vulnerabilities will be handled and/or disclosed in a best effort base.
",2023-11-01 15:43:41,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.7,10,3,2,0,4,10,10,10,10,9,0,-1,0,0,10,-1,10,0,0.0,336.0,2.0,144.0,0.0,0.0,0.0,0.0,401.0,969.0,427.0,2.0
tensorflow/tensorflow,https://github.com/tensorflow/tensorflow,171566,3280,2015-11-07,406,38397,78331,186253,186253,74299,7585,https://api.github.com/repos/tensorflow/tensorflow/contents/SECURITY.md,"# Using TensorFlow Securely

This document discusses the TensorFlow security model. It describes the security
risks to consider when using models, checkpoints or input data for training or
serving. We also provide guidelines on what constitutes a vulnerability in
TensorFlow and how to report them.

This document applies to other repositories in the TensorFlow organization,
covering security practices for the entirety of the TensorFlow ecosystem.

## TensorFlow models are programs

TensorFlow
[**models**](https://developers.google.com/machine-learning/glossary/#model) (to
use a term commonly used by machine learning practitioners) are expressed as
programs that TensorFlow executes. TensorFlow programs are encoded as
computation
[**graphs**](https://developers.google.com/machine-learning/glossary/#graph).
Since models are practically programs that TensorFlow executes, using untrusted
models or graphs is equivalent to running untrusted code.

If you need to run untrusted models, execute them inside a
[**sandbox**](https://developers.google.com/code-sandboxing). Memory corruptions
in TensorFlow ops can be recognized as security issues only if they are
reachable and exploitable through production-grade, benign models.

### Compilation

Compiling models via the recommended entry points described in
[XLA](https://www.tensorflow.org/xla) and
[JAX](https://jax.readthedocs.io/en/latest/jax-101/02-jitting.html)
documentation should be safe, while some of the testing and debugging tools that
come with the compiler are not designed to be used with untrusted data and
should be used with caution when working with untrusted models.

### Saved graphs and checkpoints

When loading untrusted serialized computation graphs (in form of a `GraphDef`,
`SavedModel`, or equivalent on-disk format), the set of computation primitives
available to TensorFlow is powerful enough that you should assume that the
TensorFlow process effectively executes arbitrary code.

The risk of loading untrusted checkpoints depends on the code or graph that you
are working with. When loading untrusted checkpoints, the values of the traced
variables from your model are also going to be untrusted. That means that if
your code interacts with the filesystem, network, etc. and uses checkpointed
variables as part of those interactions (ex: using a string variable to build a
filesystem path), a maliciously created checkpoint might be able to change the
targets of those operations, which could result in arbitrary
read/write/executions.

### Running a TensorFlow server

TensorFlow is a platform for distributed computing, and as such there is a
TensorFlow server (`tf.train.Server`). The TensorFlow server is intended for
internal communication only. It is not built for use in untrusted environments
or networks.

For performance reasons, the default TensorFlow server does not include any
authorization protocol and sends messages unencrypted. It accepts connections
from anywhere, and executes the graphs it is sent without performing any checks.
Therefore, if you run a `tf.train.Server` in your network, anybody with access
to the network can execute arbitrary code with the privileges of the user
running the `tf.train.Server`.

## Untrusted inputs during training and prediction

TensorFlow supports a wide range of input data formats. For example it can
process images, audio, videos, and text. There are several modules specialized
in taking those formats, modifying them, and/or converting them to intermediate
formats that can be processed by TensorFlow.

These modifications and conversions are handled by a variety of libraries that
have different security properties and provide different levels of confidence
when dealing with untrusted data. Based on the security history of these
libraries we consider that it is safe to work with untrusted inputs for PNG,
BMP, GIF, WAV, RAW, RAW\_PADDED, CSV and PROTO formats. All other input formats,
including tensorflow-io should be sandboxed if used to process untrusted data.

For example, if an attacker were to upload a malicious video file, they could
potentially exploit a vulnerability in the TensorFlow code that handles videos,
which could allow them to execute arbitrary code on the system running
TensorFlow.

It is important to keep TensorFlow up to date with the latest security patches
and follow the sandboxing guideline above to protect against these types of
vulnerabilities.

## Security properties of execution modes

TensorFlow has several execution modes, with Eager-mode being the default in v2.
Eager mode lets users write imperative-style statements that can be easily
inspected and debugged and it is intended to be used during the development
phase.

As part of the differences that make Eager mode easier to debug, the [shape
inference
functions](https://www.tensorflow.org/guide/create_op#define_the_op_interface)
are skipped, and any checks implemented inside the shape inference code are not
executed.

The security impact of skipping those checks should be low, since the attack
scenario would require a malicious user to be able to control the model which as
stated above is already equivalent to code execution. In any case, the
recommendation is not to serve models using Eager mode since it also has
performance limitations.

## Multi-Tenant environments

It is possible to run multiple TensorFlow models in parallel. For example,
`ModelServer` collates all computation graphs exposed to it (from multiple
`SavedModel`) and executes them in parallel on available executors. Running
TensorFlow in a multitenant design mixes the risks described above with the
inherent ones from multitenant configurations. The primary areas of concern are
tenant isolation, resource allocation, model sharing and hardware attacks.

### Tenant isolation

Since any tenants or users providing models, graphs or checkpoints can execute
code in context of the TensorFlow service, it is important to design isolation
mechanisms that prevent unwanted access to the data from other tenants.

Network isolation between different models is also important not only to prevent
unauthorized access to data or models, but also to prevent malicious users or
tenants sending graphs to execute under another tenant’s identity.

The isolation mechanisms are the responsibility of the users to design and
implement, and therefore security issues deriving from their absence are not
considered a vulnerability in TensorFlow.

### Resource allocation

A denial of service caused by one model could bring down the entire server, but
we don't consider this as a vulnerability, given that models can exhaust
resources in many different ways and solutions exist to prevent this from
happening (e.g., rate limits, ACLs, monitors to restart broken servers).

### Model sharing

If the multitenant design allows sharing models, make sure that tenants and
users are aware of the security risks detailed here and that they are going to
be practically running code provided by other users. Currently there are no good
ways to detect malicious models/graphs/checkpoints, so the recommended way to
mitigate the risk in this scenario is to sandbox the model execution.

### Hardware attacks

Physical GPUs or TPUs can also be the target of attacks. [Published
research](https://scholar.google.com/scholar?q=gpu+side+channel) shows that it
might be possible to use side channel attacks on the GPU to leak data from other
running models or processes in the same system. GPUs can also have
implementation bugs that might allow attackers to leave malicious code running
and leak or tamper with applications from other users. Please report
vulnerabilities to the vendor of the affected hardware accelerator.

## Reporting vulnerabilities

### Vulnerabilities in TensorFlow

This document covers different use cases for TensorFlow together with comments
whether these uses were recommended or considered safe, or where we recommend
some form of isolation when dealing with untrusted data. As a result, this
document also outlines what issues we consider as TensorFlow security
vulnerabilities.

We recognize issues as vulnerabilities only when they occur in scenarios that we
outline as safe; issues that have a security impact only when TensorFlow is used
in a discouraged way (e.g. running untrusted models or checkpoints, data parsing
outside of the safe formats, etc.) are not treated as vulnerabilities.

### Reporting process

Please use [Google Bug Hunters reporting form](https://g.co/vulnz) to report
security vulnerabilities. Please include the following information along with
your report:

  - A descriptive title
  - Your name and affiliation (if any).
  - A description of the technical details of the vulnerabilities.
  - A minimal example of the vulnerability. It is very important to let us know
    how we can reproduce your findings. For memory corruption triggerable in
    TensorFlow models, please demonstrate an exploit against one of Alphabet's
    models in <https://tfhub.dev/>
  - An explanation of who can exploit this vulnerability, and what they gain
    when doing so. Write an attack scenario that demonstrates how your issue
    violates the use cases and security assumptions defined in the threat model.
    This will help us evaluate your report quickly, especially if the issue is
    complex.
  - Whether this vulnerability is public or known to third parties. If it is,
    please provide details.

We will try to fix the problems as soon as possible. Vulnerabilities will, in
general, be batched to be fixed at the same time as a quarterly release. We
credit reporters for identifying security issues, although we keep your name
confidential if you request it. Please see Google Bug Hunters program website
for more info.
",2018-02-28 01:07:20,"['Generic policy', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'User guideline', 'Reporting mechanism', 'User guideline', 'Reporting mechanism']",external,7.7,7,7,10,5,2,10,10,10,10,10,10,10,1,0,10,-1,9,10,22.0,48.0,5.0,4.0,2.0,0.0,0.0,0.0,978.0,459.0,364.0,5.0
theupdateframework/python-tuf,https://github.com/theupdateframework/python-tuf,6298,4289,2013-01-31,80,1851,2718,1628,1628,272,46,https://api.github.com/repos/theupdateframework/python-tuf/contents/docs/SECURITY.md,"# Security Issues and Bugs

Security issues can be reported to maintainers [privately via GitHub](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability):

- [**Report new vulnerability**](https://github.com/theupdateframework/python-tuf/security/advisories/new)

Please do not use the GitHub issue tracker to submit vulnerability reports. The issue tracker is intended for bug reports and to make feature requests. Major feature requests, such as design changes to the specification, should be proposed via a [TUF Augmentation Proposal](https://theupdateframework.github.io/specification/latest/#tuf-augmentation-proposal-tap-support) (TAP).
",2018-01-24 15:57:01,['Reporting mechanism'],advisory,8.7,10,8,10,10,10,10,10,10,0,10,10,10,4,10,10,4,10,10,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,11.0,10.0,5.0,0.0
theupdateframework/tuf,https://github.com/theupdateframework/tuf,6298,4289,2013-01-31,80,1851,2718,1628,1628,272,46,https://api.github.com/repos/theupdateframework/tuf/contents/docs/SECURITY.md,"# Security Issues and Bugs

Security issues can be reported to maintainers [privately via GitHub](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability):

- [**Report new vulnerability**](https://github.com/theupdateframework/python-tuf/security/advisories/new)

Please do not use the GitHub issue tracker to submit vulnerability reports. The issue tracker is intended for bug reports and to make feature requests. Major feature requests, such as design changes to the specification, should be proposed via a [TUF Augmentation Proposal](https://theupdateframework.github.io/specification/latest/#tuf-augmentation-proposal-tap-support) (TAP).
",2018-01-24 15:57:01,['Reporting mechanism'],advisory,8.4,10,8,10,0,10,10,10,10,0,10,10,10,4,10,10,4,10,10,2.0,83.0,0.0,3.0,0.0,0.0,0.0,0.0,243.0,510.0,409.0,6.0
tiangolo/fastapi,https://github.com/tiangolo/fastapi,4994,2152,2018-12-08,467,3868,7310,77018,77018,6577,681,https://api.github.com/repos/tiangolo/fastapi/contents/SECURITY.md,"# Security Policy

Security is very important for FastAPI and its community. 🔒

Learn more about it below. 👇

## Versions

The latest version of FastAPI is supported.

You are encouraged to [write tests](https://fastapi.tiangolo.com/tutorial/testing/) for your application and update your FastAPI version frequently after ensuring that your tests are passing. This way you will benefit from the latest features, bug fixes, and **security fixes**.

You can learn more about [FastAPI versions and how to pin and upgrade them](https://fastapi.tiangolo.com/deployment/versions/) for your project in the docs.

## Reporting a Vulnerability

If you think you found a vulnerability, and even if you are not sure about it, please report it right away by sending an email to: security@tiangolo.com. Please try to be as explicit as possible, describing all the steps and example code to reproduce the security issue.

I (the author, [@tiangolo](https://twitter.com/tiangolo)) will review it thoroughly and get back to you.

## Public Discussions

Please restrain from publicly discussing a potential security vulnerability. 🙊

It's better to discuss privately and try to find a solution first, to limit the potential impact as much as possible.

---

Thanks for your help!

The FastAPI community and I thank you for that. 🙇
",2021-06-07 12:55:40,"['Generic policy', 'Scope of practice', 'Reporting mechanism', 'User guideline']",email,6.4,10,3,10,0,4,10,10,10,0,10,10,10,0,0,10,-1,0,10,0.0,22.0,0.0,0.0,28.0,0.0,0.0,46.0,61.0,38.0,24.0,0.0
tinymce/tinymce,https://github.com/tinymce/tinymce,26287,5405,2010-01-11,218,3208,9684,15006,15006,2234,263,https://api.github.com/repos/tinymce/tinymce/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

At Tiny, we take security seriously and will investigate all potential security risk notifications with urgency.

To report a potential security vulnerability, contact our Security team at <infosec@tiny.cloud>.

In line with the United States National Infrastructure Advisory Council (NIAC) [Vulnerability Disclosure Framework](https://dhs.gov/xlibrary/assets/vdwgreport.pdf), Tiny requests community members reporting potential security vulnerabilities maintain the confidentiality of their report and discovery until Tiny has investigated the issue and taken action to fix it.

Tiny will communicate with you regarding the status of your report and will, with your permission, publicly attribute the security issue’s discovery to you after the issue has been fixed and disclosed.

For details on how to report security issues to Tiny, refer to the [Reporting TinyMCE security issues documentation](https://tiny.cloud/docs/tinymce/7/security/#reportingtinymcesecurityissues).

## Supported Versions

Tiny Technologies, Inc. supports the following community versions of TinyMCE:

| Version | Supported                      |
|---------| ------------------------------ |
| 7.4.x   | &#10004;                       |
| 6.8.x   | &#10004;                       |
| 5.10.x  | &#10006;                       |
| Other   | &#10006;                       |

Commercial versions of TinyMCE have a longer support schedule than community versions. For the full list of supported TinyMCE versions please refer to the [Supported TinyMCE versions documentation](https://www.tiny.cloud/docs/tinymce/latest/support/#supportedversionsandplatforms).
",2020-05-15 05:35:48,"['Generic policy', 'Reporting mechanism', 'Scope of practice']",email,7.8,10,10,9,0,7,10,10,10,10,9,10,-1,0,7,10,-1,9,0,10.0,99.0,86.0,2.0,1.0,0.0,0.0,1.0,200.0,342.0,300.0,2.0
tomato42/tlslite-ng,https://github.com/tomato42/tlslite-ng,1742,3813,2014-05-22,37,357,529,231,231,80,21,https://api.github.com/repos/tomato42/tlslite-ng/contents/SECURITY.md,"# Security Policy

tlslite-ng received little-to-none 3rd party security review.

tlslite-ng **CANNOT** verify certificates – users of the library must use
external means to check if certificate of the peer is the expected one.

Because python execution environment uses hash tables to store variables (that
includes functions, objects and classes) it's very hard to create
implementations that are timing attack resistant. Additionally, all integers
use arbitrary precision arithmentic, so binary operations are data dependant
(see Hubert Kario
[blog post](https://securitypitfalls.wordpress.com/2018/08/03/constant-time-compare-in-python/)
on this topic). This means that CBC MAC-then-encrypt de-padding leaks timing
information and all pure python cipher implementations will leak timing
information. None of the included cipher implementations are written in a way
that even tries to hide the data dependance.

In other words, pure-python (tlslite-ng internal) implementations of all
ciphers, as well as all CBC mode ciphers working in MAC-then-encrypt mode are
**NOT** secure. Don't use them. In addition to that, use AEAD ciphersuites
(AES-GCM) or encrypt-then-MAC mode for CBC ciphers.

(Note: PyCrypto aes-gcm cipher is also not secure as it uses Python to
calculate GCM tag, see issue
[#301](https://github.com/tlsfuzzer/tlslite-ng/issues/301))

## Supported Versions

Only the current stable release is considered supported (will have fixes to
security issues backported and new patches will trigger a new release).

| Version | Supported          |
| ------- | ------------------ |
| 0.8.0-alpha | :x:                |
| 0.7.x   | :white_check_mark: |
| < 0.7   | :x:                |

## Reporting a Vulnerability

Security issues can be reported by sending an email to hkario@redhat.com.
Answer to the initial email can be expected in 2 work-days.

If an issue is recognised as a vulnerability, fixes for it will be developed
on a good faith basis.

Unless otherwise agreed to, we'd like to request the reporter to keep the
vulnerability confidential for the industry-accepted period for responsible
disclosure of 90 days. The period will be cut short if the fix is released
earlier.
",2019-05-29 11:45:13,"['User guideline', 'Scope of practice', 'Reporting mechanism']",email,5.8,10,8,10,0,5,10,10,0,0,9,10,-1,0,0,10,-1,0,9,0.0,1.0,4.0,0.0,0.0,0.0,0.0,0.0,141.0,85.0,786.0,1.0
tomoh1r/ansible-vault,https://github.com/tomoh1r/ansible-vault,76,3454,2015-05-16,4,29,52,54,54,32,8,https://api.github.com/repos/tomoh1r/ansible-vault/contents/SECURITY.md,"# Security Policy

## Supported Versions

We are currently supporting 1.2.x or latest(2.x.x).

| Version | Supported          | Desctipsion
| ------- | ------------------ |---------------------|
| 2.x.x   | :white_check_mark: | Active support      |
| 2.0.x   | :x:                | No support          |
| 1.2.x   | :white_check_mark: | Maintenance support |
| < 1.1   | :x:                | No support          |

## Reporting a Vulnerability

Feel free to report owner (address is [here](https://github.com/tomoh1r/ansible-vault/blob/master/setup.py#L15)).
",2021-02-07 01:09:56,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,3.9,10,0,0,0,0,0,10,0,0,10,0,-1,1,7,10,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,2.0,18.0,0.0
tornadoweb/tornado,https://github.com/tornadoweb/tornado,4794,5529,2009-09-09,362,1598,3426,21725,21725,5504,982,https://api.github.com/repos/tornadoweb/tornado/contents/SECURITY.md,"# Security Policy

## Supported Versions

In general, due to limited maintainer bandwidth, only the latest version of
Tornado is supported with patch releases. Exceptions may be made depending
on the severity of the bug and the feasibility of backporting a fix to
older releases. 

## Reporting a Vulnerability

Tornado uses GitHub's security advisory functionality for private vulnerability
reports. To make a private report, use the ""Report a vulnerability"" button on
https://github.com/tornadoweb/tornado/security/advisories
",2023-01-05 16:40:24,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",advisory,6.4,10,3,10,0,3,10,10,10,0,10,10,10,0,0,10,-1,0,10,5.0,53.0,16.0,0.0,2.0,0.0,0.0,1.0,436.0,391.0,509.0,12.0
tqdm/tqdm,https://github.com/tqdm/tqdm,2013,3436,2015-06-03,108,566,1564,28603,28603,1356,209,https://api.github.com/repos/tqdm/tqdm/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

| Version     | Supported          |
| ----------- | ------------------ |
| >= 4.11.2   | :white_check_mark: |
| < 4.11.2    | :x:                |

## Security contact information

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure.
",2021-02-25 14:29:22,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",external,6.4,10,3,10,5,7,10,-1,0,10,9,10,-1,-1,0,0,8,-1,10,2.0,38.0,4.0,4.0,3.0,0.0,0.0,1.0,532.0,824.0,1056.0,10.0
tweepy/tweepy,https://github.com/tweepy/tweepy,3099,5594,2009-07-06,197,576,1863,10507,10507,4602,269,https://api.github.com/repos/tweepy/tweepy/contents/.github/SECURITY.md,"# Security Policy

## Supported Versions

Any issues reported should be applicable to the latest development version on the default branch of this repository.

## Reporting a Vulnerability

Security vulnerabilities should be reported privately through GitHub.
",2022-11-10 08:14:34,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",not_mentioned,3.5,10,1,0,0,0,10,10,0,0,10,0,-1,0,0,4,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,8.0,2.0,0.0
twisted/treq,https://github.com/twisted/treq,1166,4547,2012-05-18,45,224,392,588,588,140,27,https://api.github.com/repos/twisted/treq/contents/SECURITY.md,"# Security Policy

treq is covered by the [Twisted project security policy](https://github.com/twisted/twisted/security/policy).

You can [privately report via GitHub](https://github.com/twisted/treq/security/advisories/new), or via email as described in the policy linked above.
",2022-01-18 06:04:21,['Reporting mechanism'],email_advisory,6.2,10,3,10,0,8,10,10,10,0,9,10,10,0,0,9,0,0,10,3.0,12.0,4.0,0.0,0.0,0.0,0.0,3.0,42.0,114.0,185.0,0.0
twisted/twisted,https://github.com/twisted/twisted,30609,4869,2011-07-01,179,2073,12343,5583,5583,1173,172,https://api.github.com/repos/twisted/twisted/contents/SECURITY.md,"# Report a security issue

[//]: # (ATTENTION: This is the .MD version of docs/security.rst. Any changes should also be made in the RST version.)

We take security very seriously.
Your input and feedback on our security
is always appreciated.

You can send urgent or sensitive reports via [GitHub Security Advisory](https://github.com/twisted/twisted/security/advisories/new).

If you prefer, you can send via email to <security@twistedmatrix.com>.
You may use our PGP public key if you wish. We will create a GitHub
security advisory to coordinate a fix. Include your GitHub username so
that we add you as a collaborator on the advisory. See
[GHSA-c2jg-hw38-jrqq](https://github.com/twisted/twisted/security/advisories/GHSA-c2jg-hw38-jrqq)
for an example. We'll get back to you as soon as we can.

Twisted is an all volunteer project and there may be some delay before
we can respond.

Feel free to follow up if you think an unreasonable amount of time has
elapsed without a response!

All releases, including security releases, are announced on the mailing
list. Consider subscribing to receive notification about the
availability of a security fix.

# Security Procedure for Developers

The goal of the normal Twisted development procedure is to make all
steps transparent and record all information at all times in a public
location - either the issue tracker or a branch.

The goal of the security variation of the Twisted development procedure
is to keep track of progress resolving security issues while minimizing
the window of time where information useful to attackers is available
before a fix for the issue is available to Twisted users.

This process is intended as a helpful recommendation. Elements of it may
be followed more or less strictly depending on the severity of the issue
in question:

1.  Begin by filing a ticket which does not describe the issue and
    simply says 'security issue, description pending' and has the
    'security' keyword.
2.  Create a security advisory in GitHub using the [GitHub
    UI](https://github.com/twisted/twisted/security/advisories/new).
    This will trigger the creation of a private repository that can be
    use for developing a patch. This automatically created private
    repository is also used to review the PR in private.
3.  Make the required changes to fix the security issue in the new
    private repository.
4.  Create a new PR using the GitHub security advisory UI. This will
    generate a private PR. Request the review and get the approval for
    the PR. Don't merge the PR after approval. In the PR description
    define the desired merge commit message. The PR will be merged by
    the release manager at the same time with the first release
    candidate.
5.  Automated notifications for the private repository and private PR
    are limited. Try to communicate over IRC, gitter or other means to
    find a person to review the new PR. Coordinate with the release
    manager. More info about the release process can be found on the
    [release process](docs/development/release-process.rst) dedicated page.
6.  We are not aware of a way to securely transmit our code to our
    public continuous integration systems. Reviewers should manually run
    the automated tests on their local forks of the new private
    repository.

Aside from hiding the details of the issue while development is ongoing,
all of the normal policies apply. Security fixes require unit tests,
code review, etc.

## PGP key for email communication

Below is the PGP key for <security@twistedmatrix.com>:

    -----BEGIN PGP PUBLIC KEY BLOCK-----
    Version: GnuPG v2.0.22 (Darwin)

    mQINBFFGXnMBEACrFZe22Ps0uTdXASlz2iA6cRU8GZv7fYeaMOtOBMECP+iK7l/b
    3OOr4NgYdQbaJBitKde88xoJdxePXD7pysmtHvxR6bDGeaA/YRGa9Cc0u7S3TpOG
    jRIKjaREk4EW0VmMhtkkZbGaMTiCpPlhQci8R6IO6x2eJveRsH32MiKzm6XqsRML
    a2grFCO2SKXbMywcA21qXvCDF7KnfhNFzeHE+qMNjn+9zi1rMK0YNo0DMSCDkYXH
    ytyo44CeQNnn9itgDqEP0xM03C+x50YbUFJzt+uTZeBIshhnfdHPaYuULRreUHcM
    PNltj2+3kRzJlELXhHxjNLk0u+wdsSUg2vjuKCiaCDu1gkfaBkT4wyDoQ8XtWzNE
    ya2vzH/D5s0motyFLSqScf56CAg5xLCILbFaYCfc+cuB4JwRRGliiXDtWkBZW6Qw
    lAMmuz/b1TWkMkCZDcBNfk2P22KIp/+B1J254yQ8Lap+RXFnDu9UOZAa02pZt+ix
    m1ZG7A1f5Gi6hhxicVeZwwHErcILBJs3v2wdY4Tz7Gy2MrR0PQ02NVCz6L0mre99
    y9SIltLHPLyax4GHIUvBGs4muu5xeyf64iEAmFBt5BJTN5WumTqlbCw2TSJptjxG
    6KGNdRu9yj75GcQUoTGN9fzaNA0oNZsxw+5JS4k3bEn5cKlEMaLacFrkLwARAQAB
    tC9BbGV4YW5kZXIgTmF0aGFuIEdheW5vciA8YWxleC5nYXlub3JAZ21haWwuY29t
    PohGBBARAgAGBQJRRmjVAAoJELFzJ9QBcd8wNCkAn1STe+QvEvMGWzqv1LVj5Zp9
    UIcxAKDnQjNyYlP7A1+6f/LOpsrAkwE61ohGBBARAgAGBQJRR1muAAoJEJnN6p2k
    E1s4JUAAn3FaKuAvaNNlAi9CIu/Jrv3HmGXTAKCihc1sCZSOB69PHNLTzzFEW0YZ
    vIhGBBARAgAGBQJRR40XAAoJELgaG/IpZ/8eA1oAn32rCfZOks/Lwkpga/Cx/Bx7
    xlPvAKCLQQD/e04+SLAdKWSLTLA0E8ffhohGBBARAgAGBQJRShTKAAoJEF+sgInN
    hO5IQmgAnA96F28mGlGJGN2XQqJ70KBhm/4VAJ4tPteL3KApHgzxAis4CAA98O6u
    f4hGBBARCAAGBQJRRmTKAAoJEPFuK5USrRNnZtUAoJgjmaG1xgstYAuM4kLfcn3b
    4DyVAKDi9x+PYTkV1su3BOhtQ1H+KXvtJYhGBBARCgAGBQJRR5hjAAoJEDaEwMCM
    iyrh2esAn2mOviXUmrzVf70x8N+Chyo+/5TbAJ9WAKRJ7ahkTN9y8xvUTG3aGK8D
    L4hKBBARAgAKBQJRR1YeAwUBeAAKCRAD18SnZ5GxTxzTAJwNzi26WnCZ3K8zaLnM
    /3ZvmszRrwCeNMBAJXkexcds8tQ9yWw3Dbtz+caISgQQEQIACgUCUUevdgMFAXgA
    CgkQw05XR+I91nfMJwCgqyKEY2w74hZMwHLEnZux+/gm1lMAmQF6xHGV/WDCMzTN
    VjudSScvhHlJiEoEEBECAAoFAlFKFJUDBQF4AAoJEKxorARBxukwHPkAn1khBRhb
    DWblKlOsqxJfA8Um1/KXAJ9yrIoHIBRnMdTd66l71bhFbemCjohKBBARAgAKBQJR
    2g/mAwUBeAAKCRDMyEnqoT1lfRqdAJ4rNlg+S5ULX4jHoUu7N1yE+den5QCfUf1k
    hXMk6yVu8gc9cKVO3IbV0QSISgQQEQIACgUCUdog4QMFAXgACgkQ/cHwQQKUmesY
    fQCfS8T/n5eJzPkltk1T0oz+ZATwzogAnRq4RcJ8MRL4PQNXC2LPiyYGtAV9iGIE
    EBEIAAoFAlFHctwDBQF4AAoJEI0ua6zm1qquXiEA/0mcLYY6JOSfGT4TaU1sHq0v
    246Esdt8OyQj1DS24ss/AQCHim26f6m6uBEbczjO6IamFa5dwtvwfjN0WR14zHnY
    t4hiBBARCAAKBQJRR59gAwUBeAAKCRAC4CNExhl7PK+YAP9T4Ke57e50hxEuvAAr
    vSa83bmQ3/KphfdBansOVYO7UwD+InkmYZbtjN6rnnz33VqzDt+1DbxBENnLwWQb
    Gr0XJ+CJARwEEAECAAYFAlFGaPMACgkQQf6sfHtaj44i3Qf/UjJiaFVFEiMZT1ap
    WI9XMg/FMGWagDXLBtLIOZCaNxZJGkI7Zgb0Kgf9eoHw6XIf/0xbNO/a40Sipd82
    WSsf761GDFaFaB4Uty1P8oUjWvWE2OHhVbELsew5cfdDl9qHeiY6gAK9kR5Uzqdj
    eSlEuL/HuxIOUw7H4h2dT7XRt0wO/q4NR+qo7i/j4NlNO/Exz4+N82rT5v54EZ/M
    kg4XYiTxJXTfQ6fztslW+bBwsyEnYhs0yqxqOrsfls49uWCmfW4kyQAQsS4MK8MN
    2sKahleuzV1t7Yu5T9nIq1V21YnlQmh6re5MB7perwGXQR0BfeK7l76mZz+SAtoM
    bEz3hokBHAQQAQIABgUCUUZqPwAKCRAdddRk72hdSIPWB/4vXY22AH62dEerfQDQ
    IHlvwC+7QaBsEzS8LtUy6BYAa4KLzfijbSMDQq2bRb/9/qwOp3Z45GTRw8Sk3xLW
    S2kVR4PMxd73AxZ9qOSbb6ENu3TsrFfTE1ma13+c6cTxYrXPgnVEhA0qCqPk0TF4
    J/dN9kjrD3Ue3CTux5lUgVIDfIFnv+heIqr1O7mbsN6AMr/CwwKcr4oX0LAx9tZZ
    XfhgF0ycK7TK372PhWbPi2PTYDyoC1NFHpvZAYaFiYIhQ3/3WatLp0uksvIXW+vC
    KgCdwEHrtTMlrDb6vZfgyVp6PmWcy6iaZYHMFDokuIsV5SkJTwXV7qkq4Bw5BIBQ
    fic3iQEcBBABAgAGBQJRR1cuAAoJEIgVnCSDD29+jb4H/3CBQ4cj2YD5Aac7Z3hl
    706+ruv/6xYf0N0HOvAS0TDvP2obmtrHk2NdlZ9Ba7Pc3oEEFycHCdPHBOEk/VOi
    zfl74tUjCPbHd880j1zU1jW/CWP23pCRdWTw8sj/9CaCOIcIQ9C7RgYB29I75HR/
    1Bl8FAaZ2n0yfZMhwRUWtKparfnOaBU9L1u03yKYXKuWWZ24teG7vFFA2EeSVOaZ
    nFOnv+rTsitmgmHt2UjwnYIMzSeqMpdOv5J+GvcZMpKamj3Z0mwKG+RqTcYkJ9T0
    6ki7TjoqpmXkzXlOIhdP6ABhdUoGRsiY5fiyWWRYL2WEa1bS6xmX9pC/pvvJni+H
    kmmJASAEEAECAAoFAlFH8OsDBQF4AAoJEJwpvFYAQekwbdEH/i7pGDk+OqFrqDof
    ySwkkihb3XQKLrqBpv9YOAeb5BpKTHwmj8QmLL/+5dTLBJsKX1GfupjkWoWi7QMu
    LxquMkTzyxg06LZ3E1s6PF7ragveEBHkE6bQHrHJkPm8n75jBdnnD/GxW86JWWBt
    Tb4ASz+ZqpTFNhaP0Fnq7wiGblPm3Wa/irDoaHFcykZxU958xPqpTYSqXeHp+Eat
    4ruR8sk3yfKWiS1+UVGFtDdhjauZMUNGYpcd5BQOCHPr5/4WRwHfxxsM+4t6mwFO
    5ZKyqiJyhxExE2LFABzP29QFJBxPyhjFsB2OfHZjD8UxwJ0SHUTXDqiAp7nJHeFm
    QSbk/ZWJASAEEAECAAoFAlHaH+MDBQF4AAoJEGFL+OXwzFIwp48H/jnsYx1okfb5
    Y6IyCEF83qcCM8ahQER4BY170tEknrJfVZDE4uLLCwGHwWM8358jhjsrvyYmVUm2
    i02BL0FCN8D07aAhytyk7Jccj558YQi8eqSJ1BYaPqp4XjivwLxilIzWLhWEkH3G
    /oz0sonmjoRii3BW5Hxo9Oob6ptsgSshO/VgsNeUpjrQOOPKeo1/ckCtD8HD1SEN
    xYCHWuK+5/e4KvOriRN1q+iFm+S+VCCrhWItYVyCpXRE4SH9PN2qrh8syl9bPqtG
    5cqGDe9jf4JtVXHWQynYAjcSo4z50GDcGv2NfqdB2H7UsWn2DvroBrt6QPAxgq9V
    MZciJ1oc56qJAhwEEAECAAYFAlFGaNoACgkQtDYo1hguougtFhAAv7kZkS6ezvs0
    82w8mcjmmZQu0XaM+Hbo2L2CBXoNtBkQe/UJ9obaCNyLWgDL8KooGb7lc14X1sfL
    5+cWCXv9QVsIuBV3qC/7D6whBf8hHBcIv9+RdzPXml2vZd6Bv1kvxVcRhtoQxHGu
    U5CGLBn/nM9DrhXfRw7qCS79bD9TGHmS7+W3C9IfoHixCF0HjChCgkFB6doPZKCP
    6BYNu7K6aWTRun+GLe+Bcz6Mc4LRwi7vPhRBpG+B7st/WGqBuR6kyekx0GSv2JgT
    puGxVbaBjJvJSWjTVv90vGKVeqwsHi+PNztDmc3/T58QfMlXALz2tYp0j8Z+KT2y
    G+AWJNkTe43Aq7FFuFVhFqFt0E/4ImjC4FUwMarsiJWCcRn0TPXT7+3yXejn6EDs
    5t535OGPC2SwH9ZXN52wpx/Ctk2nYw+uaPaMsMhxkDQrIdlYLr9OCnz/G0K64nt/
    yUCEbFTGvxo8nFHv1hDeh03FfNlUyQa+PYDFC4xrCHIqTxVuZNmUUOYpX9rZKRVy
    1l3y2S3ptkbEksow5v5UyMoqba8KFE1Ncmny79G6gRBGHPGh5q6T5M02G9n4eMmq
    jeW/8vl2lsLnaWDUNDCJ7QfWhjiOSXKt3BhShY3dlGL03sJBGr90zBU07ndUJKhP
    tR8mx3jY98soSZn0kbJktY0YP6BdTVCJAhwEEAECAAYFAlFGaakACgkQQfDDUUYI
    VryItg/7BPSq3DRuMHFvb6BbBo5V2hGRLrgUlLU0U7hTP1U+PExrx3ccocFjmAnu
    /cDPxUyGVYBfXsDoSF8kv0nZ5M7sc5pbA/ksrfrEQn3EHfd7OYcmiMufQY808A7b
    5vLkpRa/QIp5xI/uslBm5p3mZiRMc4lrFtzYWHkWpeebLGTA74gtDab6gCh0d/Hy
    tlP451kzS+V2cFUJtkxksDoIjTwPIZCGwy5ezc3CLpmU0WucsCtKfRJ8P6YLLTAB
    4WjyTUUgwFuCJd8/3PmZaBZAMFhi50cSzsaqnJFeTsUCvWpw3ZNL14l9+jPqvQMB
    vzZN5QMBbgnwzHX1pn5YNFmto0/03ycuEFq7eYtNrPT+XreQLskMbNkvjXyUWQcL
    hU+9hju0SX6rKGl+pD4D7sxLytGVgoULv/ElydTL0EeIInac8KULOsRrHyQTplBY
    mYKwbNrCvoxO81ctjkJb1vFnPJxWrAbNaC1gbTviDWgBzRLxlCfou/m3d8sFvxzt
    66w1vPiwSKv560m3z8RulDzwnGxjIiKo3Jy5MwXqxXKGP5W+MxfwpHfLG4OP+iiy
    brTv5VoQ0P7/9vIFy8zAG1H78pDjIDbO58eMIUk7y+166I1RO8iHUphAHuOz8k9E
    DGFLKYLDnCc5DCrkoj6BGHAVS4loAsA27+5amBpLgTvbq79WtqCJAhwEEAECAAYF
    AlFGal4ACgkQq7cd7u6kKwOrsQ//crHwOGfoAV9Pg3E2hdRj0lCiLRbgrzvrZjMn
    /J4WZnl0Z9+vpPJN/l74QyCqXTHlszSGApQb8181y2IueyzWpmRBeS/96eA3ruh5
    gx4IahlN/tAM51qDYhHEpIfetAh1tKJYGJfPugu++zmV4s9rRoaw44BTIKafCwTu
    uKXQGf2dMqs2SFvtYEgZOk79DosEJnUYn9bYujK2UpHKiZ4ir3N/OqygLmvsZWIX
    59F3csX7n+QcOSTUeK9yco5UTBj6Kl2bN33caVueja7hloIKAqTFHdghxgG8eXsW
    zj9Bj+dkRQHkLqqoprPyb3xBjsKmvXhH1X2HHwMUYJkFmklu8Enw/lN6O5pfFTGU
    VkOccUsssTXhzLi2Nep/hXapWZLQCRD5SUkxB3Z6kUlYcpoFFmUtOj6eRi43X76w
    hHkTDhImzL/WM3QSr1pgNXrNANZMkkoqMKu/SH+uhHFFoHuDvLYlYxT1YydwCx2J
    x4rIeod29KN4zwOcmrNblxkxji/D8WjOiGTtGs0u2rerW012M4Byx4JYh9qsTAHr
    i6aRN7E5shABDwTDKdAOywJAR2T4B4S6JsvYTg+dkFvF71PtEpC5WLtXGiuyTpFK
    GLgmnBp3IyFkonl/P17my13BXKLTSrXMjSkzyowVcy2XM45ue1v0JyuUVOyHuV4J
    wjzsdRKJAhwEEAECAAYFAlFGkdgACgkQS8lS8MsxRb/D/A//TYQZtAtbo31GUG6t
    KO2Y+mrKGQwRSCUT8T7EWMAnp6bsPl2GyhLRIT3mD1MywZAucOjvYcO/RndO6c2t
    03qnxDHl/KTzADyEGMKhm8RN37yMDFriYOzLvCwFneanOfBDTtqqlpu5w74KJEmo
    G86iFi1uEzEZ1j/8nrMTDlZIZ1lyLo2fN8L1UidLujFXMWTQPiZof3FKycEehAWL
    AYs65t5lzQ8PZUOqq1BZI4jHaY9ex/n9xtW3Jec9Fxzqgt84sSAPeFpLy21V1K5D
    8k2WvptvCnmWOY+b8liBm9dTF+1aJls+7+Q5xhpZM8v8AE/3WtQsTwm0nL8Svo4b
    AJ64mhQ0NZTucvi/XlXaryC7NsjJ6oybSjxwn4ZKZBEOqs4NDLbiNAiBs1F7aNZ4
    L3PI77UXQypnKfKJnF+Hz8MCO1ye/URt7CrgaFGiR/MpytKVxFyhRmW2hx6EtmuW
    IYc35lyb0PZpn3eDVBsAMUm6SOmSw++E9Jr9gQ67HB3SyV62tppTZvsc0ag0gqPz
    J7hKE5Uc6zUmh9an1zgcAc2LYn/pRVZ1RvsOSSD8SNPC+LLwzkyyvVAiLad24D2W
    JaKcVf/3zMzRBusJKB+MGGThsV+VK6gpKNzbaKndSEr5P00iY+IR+hkDwQN0FVF3
    3ios+cQKNiUSfXMj11gGnolAQeSJAhwEEAECAAYFAlFHlEcACgkQpOrfHwCApmMr
    ZA//f3d7LgFHve9F23S0GxmAh1ImlMDQbQhri5M2T38quwMAbI1Y2t4Ahc+K8dIw
    /ZiRhgehN0Oe/T5b8d1NqfTpPgDOybtLGyXkEkCXNMDB+pnp687RSQ8oQRJakxU4
    Abhls5kWvGsw1aqZuRykUOiizh/tv5/JMO1BpYiF0SQ9+7+KGU1X3CY9S06judBK
    ykE+5lQizNBi1lnZr52eY7ZJqX+dpkk7KaF4r8B0FwhRJ3hFGeHdx7CYyhUmArFC
    J/PXYX05ctmCF3wAz3JqmvIdyIH9b9vPkmgvMHwMztESLJiy1ZEI1oldAuirYGB6
    4PC2Eyvb1Ldk8YZCkMp6c30fxOT+BER+9v7XPdZ4bBfyeEjGiGejIehkmolMr9L3
    EbN+nIwGyF+c/1b1g4dX8DBMfuIhPs9VAfdemFqftApEVWuomdtSa4Hzy3XVy1c2
    az9PLXuh62RPIFR5oN7HsPYWMC1ofpEJEnFrmKwslbyuaIRmxUsLkzQZ6b1eVDf2
    38h2kxbcmLDMzNv5LObqQSpHCOtd9D17IgGDDKW7S9uEWxBb+3fcKgzHrg5t1hEq
    S1R38WTWLQh2yUazLZOzb81upX2vYuXe7UYeCSZ/hE1vJmVlXNCCHbTZPuIx1tC0
    jSCUDsCF3189i11BjqDokuJ+okt/X9Bwxf002Qo3L+q2TpKJAhwEEAECAAYFAlFH
    lg8ACgkQEWHL/OZ1URMdiQ//bmlrkBl3gQWidh9DkkHo2epwE93k5QhSYupA5BOv
    yfUvnxS2m/vnzpIV60v+Ho30mtaDVVzZu6ZBjrpMDpNzlawHjlhvNYFMSYDpxrE5
    0jvP+VFOeLszsnZNLEEj6Q3JtpHmQrvEiPwL5l7njXd1ByKX20bMzNhJ2MOJ/G80
    xk+/rLRMNxo83i6i9ggcIVzQ7H/Ti0oO0xE/amaa4QNlKk7Bu3Mp5gJIsAQVBf1D
    gDFO2HqN+YcOZAv3j7AmbxUXGqI+zsqlsHQr6gYaQsb4V5o7rhPZDeSziBJQ6SaN
    wFTv2tm66hifLkwqulrjoX0vDkmvfW9F7ME4+atYWlvLGPgAuHPnZS7+ztD2PcSQ
    qUI+Aodbc1qyaPo3f2vDC82ViMVPz/2EsZWUpEXkcZIDyiqsDw5ewxKxNtqO4v5v
    r8cczyiY8inqkb49EpxxORg3b2CIKZIybBA0Vdk7ByP4qsUlyRBYxRyVTT95M8hQ
    IN9G8QSGdwD9aaKzzV2lJIPhnwB4b701g5eUtBYqR9o612mKluLv4/c+uFqBrDfn
    BeTIO7jmFFrQrUyDqypHdTG1z3z2cIJnk3Xv6PKV0W/1jXrTROwy8fAoPj0leDK9
    XWNKM0m4vPbWVs2esXKLqYuKUlHKT7dqPuHn2n+qIs9ffqlxntfEjUTtUBaBIpnB
    OOWJAhwEEAECAAYFAlFHnLcACgkQ4nsIXt6qSxsxuA/8DZUsJH4dnWseeB+khl0t
    k6yhzU91/5c+IhIXdkNepB75/BDxMEaZL/OstYD58J/zzct6gCM0Yo+9mBD/C1Dy
    94dbxAaCh7AJ+CK734cliwTno9gfL2B+mCvqG0J+hbFWAFbz5pQiUOtbZjS++mMM
    TYfvkpes0GNA8s88RFhGU7OYCxtthsNnQzzpi58un6HyUzPZKxvmvQ885wwgjH7j
    UoFVUHmIZjPAsVH2pZ7esaOGBi/KNSuvdj7fFpRtdT/pTRXhfxL+BtUx6LBzz6Zw
    bn1oUfdwzdMYjmnoxtJ32rNoRIHKUuqvucnDXJIZFRduKB1XQqIF8cr6+sxJPUW7
    AmlwRSPXa7cx2QAzrJ2KqnGZKH0jiRSA03QqaRR/jrLmw4Mum8+fnkziVnNT7ygF
    adKWl11cUZGyqKI35zPdUtdD33XnCzUnz3qUwWCa5PJrIAEMBWbka5v+yT7LBbT0
    8XX6eLWMdV/EnUzKKAVo5/QseYbH8OIMEs/hBgZicZU3OH2i3JJX9gAD8+j4o6R4
    vv9AMSCT3AHS+FeVO2M+MWC6BNxVZOToeIW0mYt5SNpTXDNjMl84fYQ/KXW1MtF1
    YVt844/bHfdqCGShIRPDlbVIX1FopY1q8ECU5KBKCx0Hk+vWq6v/nOHIudJ8qObP
    fIznGr54Cd3GFR0YUyJ1tSCJAhwEEAECAAYFAlFH7eQACgkQBJhSPRbxNIDncw//
    VQDNF+39lC6IgvehXZphYaMpifHkPE/DwPm3ZkVvy45pIzYlsmuqR45qLV09AgJH
    ytD/j4BbHRfAOyiL125/KZ3A9d3PGuu6XcqX/VreHj++ODctBPXe9JJyWiscQWvE
    9OYulK0hIrnX60GO1astPmNkzZG4MKeT0eeBAvL+wIoJfyqxslAV0WpLvVE+ZMLT
    ZsSXcebACJnvKuBe1N4gVNHo9CLlTtF8V7U94sxakhmSEW93LWK7MMN/X5wBiPiw
    IYT07xklB1h5552hHuY7TkzTbwTFZfEgvvVX+DlsWgLUsLpkiZRjhJEB9TxNDaSQ
    w1lrmcgsVRPso8VqNS8JceYfodJJtRO9SiLDcAksFeZb/C7vgIcgGVJTDccyC8b8
    fLkVdGE1ViwRTTzvzemI4Em0rW3wgUL1gasm2URA+M374uVr6En4V+7JHZAJoN9a
    RK2FKfbg+eUQzaI/PaWEj0SJyYUOisLIxAnbN5g4fle//nO5/pIH4WwnjLqZMbq7
    tEjNKrIngpZjaMd/zRuyTVSq+9Lik68AP693GoMLyf/t3Y03LRKCo9PmuqAAc9v7
    BVPXmB/8EoTU+Y3bWONls9czT/c6B5PVW9zgRxPfvZiHzssu9ERvzlqeEWQxKxMD
    OVYVE45NCjLi23dLBFyCtHuIGLvN/Lj2XDCW8b/tYxKJAhwEEAECAAYFAlFKgkUA
    CgkQ2RrUKkq3FnjjyQ/+L5VT3+1G0TDlVYeWBffURtJyi2t94xUtxoy4dt0/96Cm
    ADs1d81kRqbRjbS1YdrOZkcl21LFUfQXdcEd7badMQu6SZ/tTAsNiWh+FovtazYr
    HbM5jUk9Z8u8q5vBLyFxku6B5us6KKUe0Y5EtpQP/zu9kIA9blAs8s4H71eVTeKn
    KKFZ5dRsfgGZU1SHxEMx73sihR+1DOCR2D+hOHWvULSQNd+JKz0PgJ0WCPt2on3l
    drJ00hq7AevGsxgFwqfOyrFIFy/ovJy80JpFS6hQrLMhVjsjLIt5HraUTzjmEIRZ
    EttnBelyA5rsZZIMven1WBBqk4kEiGim8apVaw42GutOtYDdrahXtNPzrZUlwWe3
    RcZuySDWy1Q9kUbJIMbOCg2r52/Ca9d4wU6QuTKuNTS2Eef++i2T52CVdsROrNcN
    eOVHfDWKQvCqc2fw52w29yBJV1otONsnp63y7YkFuXbQ02TVq9kn7d2QnCXaMgQo
    uwcwf75rAQAgJBqH5SVGBCfG7oe1rrGDK3Twh4yM2n/i+2ARUhi7Y5S7Z8tZblv9
    urFOKlU19kys2Fzc+qUikSeaSK64i7TmzOUiE663vujUXbLWWwCEyL1gaY9H8qOD
    FCefMl0VphkAqBzvvK7qdFGQnOECb9J9SHiM0wan28pRO0/aAy1faVukhadhxw6J
    AhwEEAECAAYFAlFbZigACgkQEm61Y6dLBr9vAg//dVfLA+i0AvyX5lrfBIL0/D3R
    YSv4g1LLH/sRx92oXoNA2FhbnnYoHemwln/bfiGygEjHQFcuIlD2QNW1aft7Wqbh
    8ni6h0sfE1WuvBD4MjKVT8ZLOSm17AvXi8IW9h367Nub1KyT8sfpUoIs+2vAeSyH
    jNXYTRgPbbcIlPg9MYGLn6U+LeGY2lphag6GL9IPS1lLIYh93hdQvB3kRmiFp9+1
    pwEYp/07oVENGFFKcs/HcaM4py07FddCmE2uwGtscnzG2vVv/ipPbCJoxTZsx9Aw
    k2ydP3mdF5jGYCYAiIOCD5jmt0QKnAl2JWEzQI2HRY7Cod0cbSM06k4gDYCDNTzu
    MXzl2LohcePuYoKk6WurU5hjLMrszNiGJ89ms4+YidO/pwBpw2PDAw2fYXtt5SPE
    S7tOQIDqIqEb2GUFa+R21kljZQf7uGA+VaFoxto0UwKLDIg0YeQ2kUqkjEtiYIML
    NRSqn4Pf2oHcHLgdSikATmtsnkfYltkLuDXWfLrxKqvgKhQDEWqZR6RPtwMI8s8n
    0T3simE+MWYJfMZ5by/43gvm48TpB4HI4Xw4bABCG00599SzOnLGXDstTT357Q04
    l1vPWM9lS+zg9+A5AYZaurygtKMIHI+tWOf2am2Zd1JE1wY+VqRrNAYuhRZdYKcK
    CVQAtHCTK4vKPqfDZHmJAhwEEAEIAAYFAlFGaMwACgkQF2fxLhDe+/NjcA//c7R8
    tHwsS26c4Fj9AXIsDzoYXe/JndTYUQ6N6MCL9gt3Z9//r2yTAQrpyqvyxib32eh2
    oX5Q++V0kABy8fHDuKshnxKvfZz8C9gCpAxX6W7tPuRMAz6RPO23+wFyqorS4AVe
    fRKaxHMiLlf1475lGbxCCETSb9p1C5irG0rnvXgAzcbKhfQdeoxTwckcB1cxdpQ1
    fBwj1ODuGLCZ83j71bKyFvlTwfIrVLQFic/5epApXZBNQRnrbDtlXXYbPCPB89SM
    0SzJYUI4oHSnMYlv9KkhH7Mc1W7JSe2BuzOXeIvGBFsNkNNsy2A9qrjG/33cluwK
    ZvLAkPs4ITg64vXvfuwlsKC/HK8JPKs7Iypy3IbLe/AKDJsmvH7J66PjFyeJ/1hz
    deRBPtzohya7hCaZ+aTLRG/e/3hzbN7sqAbNozC0wWZbyD4Z8ouIR3nRcE80qfb6
    /OwnBgarK0DqaUCInzvGgsOAM3h7/ILccvQT+AvTtvi7dKelPXkzQ1xcf0G9R1qX
    MQmwMGjbmbBi0YfDX7N5O7hX+R6vUlQ9vjaAJRp6DwlQoC4hgjEbZQ9821eOTLkg
    XtEh+Ed4ZWds9fRyAPn6CH75NSWTqDojmXApB/5OgDArEEfBi86qWT1EZ8FfmXAA
    SXbBPnDWHvLDEeYuNBCgZQx4NirnOd0UCk94laqJAhwEEAEIAAYFAlFGa+gACgkQ
    aWZt/rAOlj7O7Q/+O2m7R3QHgP7GHtcsGNSSQVkeV4H7zLNQooTkUJ66XjfRITvB
    TZW/u+yWRbFYAZBNTqp9JQl5CUOiTRVp8sYl+2G7vD58CyiaXVI6jgKJi+vRPYUL
    1Ztc+OJC+3P1WdAdG6c1VQsh3R9hACPfBiaZEyyfEs6qkaNnpOVwOuIG0gT9XLVI
    jYlaAXilRtMLcrGW3cPxSTq1pjFsv5Mns2OOgu4eV37DLHRREzAzeCCEXPnIQlrC
    Q7Wj1vRw6xp12p3zhY+PziDicr60QNPfQrjHlbfXy24jFErN8A/EhvgbeE6+T4xz
    IFDyHltxXWZO8ZZUBVJ9FqNI1rE+EkzCQuarH/UPTmUwcFnQ3kSNmST0Wxgh40nu
    RRYFJ/fSm9r7AZp3xMOuFAXKt87OBUwZucS3XZEN1glWDxKeOsTGAYCDqr8QXfEK
    le1uJaWTfTb/purdGEAGaDKxoEcuUpTxvVtix/5Sr4Bn8FkFrib2ZlFIoT70aUAf
    J5uEX0eLzwmrH9dkLUNb0UJ/VDOULvlRbvY4s2v9EX2ab5ZWcpjwZvUrhfiYa1k2
    KqAMKbs99oDb+9rw4Mnt8MxRvK8IlPPBYVJ1sXIrfBPxbDEZgdgYMncZpzuHC+/e
    Ls1gxVMSB4mm4dIGG+A6ONPOiz+pU/BrSleBa5IImHYOTa1G0+JYyoaqNhqJAhwE
    EAEIAAYFAlHaIOQACgkQ9SMcYueEOozWUxAAiF2o2pjlv/PPM7SdXDL9yHnmMPi3
    UBE82j2Fcep6FRmHeAlhB1qs+kDLl9ilnPBhbGl2Hw5oMBRq5Ht0/ZTAxNcADNVi
    +aqLfM1eaU6wDWy4HMB4c9Y7n5PJ9KKHfeJNOwDmjWEShg7ETo1aO8VFhLJ3Cv25
    I2P658AENb7HWnH8QKlsoKHguqhr4X8wupyDtToTsetwD/fdQ1QofE/6tRSIVmOv
    4QcnT4WaH+vY7dgnvFu/ZRIRkq8xXbNrbJ5Q7YMBA2Sx2ZvDowxr/EAWYu9K5bfj
    mBxBuffP3liwqAYes+fOmrNs2d2l6JeerFIgvam8w0+1V9G0Za1H+SXsF0+b31DW
    5G+Uc8Ad5oRx6rnx/vqWJED2lrhk4W4Emq6+RKSGAOWAIDLwrFPDPhmlqxdpjONu
    Wy7VPLWyRjA+XQwdc5LUsWAEuJbSQlQqXFaz2qg+zkNn3XLyN39LLhzFGMzr/tkw
    h5gee+xNq/z/L/DWeO5drbIwi2ZcT+mCgP1g0D2xabFBKJz2+MYyiZ1ZJ/uYiwkH
    hg6Hay85vOTQuHlJPEA4BcsYwfs7Er/xg4/IQPC2D2ixyzDY2q70XYnN5nXsDgYq
    jbevwGi2JchNt80k6LGsACKgtFgaAtx+OkKfslyPDqdqc6lxDfHTSQ3JiMOpruLz
    7OBBSzlaS3n9W+aJAhwEEAEIAAYFAlHlfsMACgkQLR+3kWpS4SFoNQ//V5Gw6u+v
    V5sarI3TRPTFrUEyQBXMz4lFpU9ZRrXaD/td8vV9STRCd66CYhVmV7t8vArStwvw
    LXHeb5add9SM8MIlQyEm4+87v7rgWKErh5q5zUmCJ3lCS+i7W4MxVrpVtl3qDoAR
    AuQcZwEkTcp90T1H7UsZ5Chv8udxGViBGylz6wDyDj6tJRcU/ZOshUM8nV6Ixqvy
    eFUdkrj7aa+sF3ilsm970EhME8rQPwM55mAFWc0wdPhzbQDSLlKEbVWOKOYpiNhB
    qMZ54KJYmiAyHFOO2wPdNWV9lHfwftA9+knRNdQhkMVsC+crqFNNl1Ck2afShPsQ
    8E3OgsaK8NF+u8u6MsTv6SVgbL7lLA0rKNN08aDh5x7UDv+G8Uv1hIeMhFSrxw11
    PyFGYwmScPtcHisaEHP78x3n9xoWbi8LexczUTBjugOqpl0mTcuekAU0QnGbs/EN
    SPELqgyZpQ7VjhdPJr8ywROqSnpSrZL6EQcIP9F+CSVVps+Bs5FHmpHE/OSFLNuA
    WljJCDzmaqRbwP+LjaXK8aha6lWLXnSSmrmbE7ytQ8JIBX7dYkxJoBJ9P/n5QF+l
    gSJxEu4kvPPex0Iu/YYaeekbzl0G+z35HXU96FEzcykBp5J58Z/KT4S32odUmfrG
    dpu1kxUDx1Jo8edM2sNKriFDOJJ/5ZZbzoGJAhwEEAEKAAYFAlFKim0ACgkQ7EsD
    PHAJatHgGBAAoIPM2gXAs7H7aQwyROrhoa3+R6uO+mckXAD+wpzWxxvzEwHq3H1F
    6ez+Bm0LPsgyxgz7dQtJUOPLoeBgrNgtIzs2I34EqT1fGVinDL3kFyjh7Hz0YJq0
    O841Dn6m77jkrYqhfJOBTG7rJyWUQqCUZqFtq0negiMUrnaK8Bz3ePicMa2C+h0Y
    lmA2T0BgDUPIdmj3MKhBnXaiscKr/WobWUO4zCBo51LY9tu8UymoqPRziu7IUKoW
    Peln4byE13lZ9pERRVyDlSEB4WAs/kTlLLrU15A3CeBhFHCQEeDWymmjgnllRVkL
    8IyJG60T42ISqzeqn4qaoa1cU2blVyTntJFFYFiWseKvzN6kGjvPt5CB7lEoKP65
    VSvq2FVzMCwqznnZwle+fm23FTYCLQ2iCnpftALcsS+0Hc9vCyjEblWkzHNUFzv5
    qZgitS9E1EddAiDeVJj1UJqP5De2Ax/q9Z8NjwUY0ymPqQ5kW41QnofILYn3Zy4x
    UiZjSoLs8pArzXJBxqnIQ1TX6DJuf4/JQelU2Jn5RKyv49BRwfOCj5Iimy5jZ3sc
    a1m+gxsNw8i8IdBdVjB96/ZQdzt0fBzZc1f0KXEf+tPxKOS0V+7mBQdkKUtz8Cpz
    wNl0uqn1rAZyKvUajYkzO385L891gSPkY6iNLU62cT3V17xm/hSha9aJAiAEEAEC
    AAoFAlFHsgoDBQF4AAoJEFqICfeKqlXNQmUP/A5Lz/d71lX6qsybvCokZHNUFpdp
    yNXGf7V/ewSRtq2wEh82d3jefrID1syQYrNQf4sysYrByaDkjjrFl+EN1t5xNYwz
    /05+8kNkQ4TZnMNEzzgeieKTAWf2CHrz7j6ru18JlxOpguDHQNkegcrDHCiRIDki
    LZqCl29/aMPsBGb2+pt7XY0gYca9rzK7qohxK4ScncTfDTjrbStirPN00P5yP3am
    DtZuRAlQN6N5oVmmT6iEw2OwSd1eg8u7frjvExKScVQaWHqKH9B8Wya/P1QgeKr9
    RTowvMvTriL9vYYlvvX9VKUXTEp41VGdr+CrdttnZqvZ33i2JzR9Yn9+rEdUJkXj
    Hxg7GPFH3Sh8N1Q3CFDnwgg5OJ7B1b+KW76yGSedLNTC4RTHlWTUjdNOpCWDFhIK
    n35TNyV2iYjSqZDqbDCLet166mUiPnvlelL5YpeQw3yJabMo0Fkd0rju3kCyvaGD
    upFAQofv7zkeyEVjpz54S9vegwBv84xfUm0qO5OWhpT5gfznTEWuuIsAhU6ZR5gr
    JgwbV6vgCAes5/SmJLf9I5VRmP8OBw2hinPhN6ebjdkTHaIG6Y2Je1ax169x7oct
    /a+UWZGKziKcOE3tyVfSL/YtUKAxhhe84oWH+Fhzum7HelzONoetz9+HEqzP6X5n
    DReQFlg8cL6Eg/THiQIgBBABAgAKBQJRR7d6AwUBeAAKCRAkbZmymXg2szFvD/4m
    7uZwbJEZ2GFLx6LacK1MoTUQTRgr7tyLlZP7jjzX0cs1HFN4Gl/Aj09w4KROoam+
    YRPlfLz3UGaa4Vml09IIKG6hXCWFACtE8U808fWeKWlzvjP0uQAjLZxRLO1h1GpJ
    QjgeEScy8pchPiMBlPakixpHPzQm9mhfomLAptC2YpzgvouOlWwryDqKFhbhWzx0
    lpLM4+PVJGp9gnilVSE6nDoLyt1QIRajLOTNYWqvYhCYxpYuFxvy0Gzs/uhhDKFk
    /blpEpXr/mpLilc+NBtTLexSkuI1gMgklNgAEu1mFW/gEh+/xvlvIkpBTJ+r0wyg
    gJ2NU19l3FFMUtce431K8mEmAuipEElBJjsoudY8lFJsA4yW2HxmjFdIdjkhTY5Z
    N6uB4EUNb/HDpofLLQGwbitTRFdNSl6Voda+SnKXX4AKVmmV3TZP2kAoVK1Dophy
    iisRkvvRHxvMwLR+RN4Fj075qWfL8b6hqq95DZSxCJYi7vb0b644c6mBxRXXlvyj
    BUx5Qtx8ikcMmREJdvURpkuKycJQdG2XroaP7/LkdMG6lbWCO8xZde3ZOxM31q4y
    LyFkr8WoRrZh/cSRo9kUHeEukEVbCC6VQAHVcr/dCXDCRqLw87/yh7rNHGICVfPP
    7PTM3ENKVU9JbriwcyhV0RkE//oqXD9Y7OWHBEvoX4kCIAQQAQIACgUCUUqChAMF
    AXgACgkQROCd6mSpCNNn4w/8DjgvfBE+LxxaBvSqszijmzuXIfwIWJN8guaCVf36
    Hwhry+okOL4UrcxX0nPgBngf0vU3WaorBcE1G5sJJN5QtK5hg50ncvfXqO9mVBLf
    S8+vqTHl2gPB/qR0+y8FF6v0s4OPruyRRxL3BUXnTvgv9rxasSMYY8CM6qNqgBk4
    onNjjagOCYJZUmua9/KF6/4rBHbwwF4dOOv3+LdjzduUT6D5uBMBkXiv1Y9848Jf
    OYCKlnpqdtLZKEQ6ZD/z5NiGoGxMAO3YSMi3nTUbsrPtVcqE05LQkhrFfYeqGr2v
    gUIoDnr1jK+BydwdPnc810aLaGTDZRY/d7XvJ6lDSijdDDZzCldYBoXjligdY1LK
    jVwUV4qacKnx3T1vEjucUOJURuC5JpgMqSKdk0vUwNSJXQ7PW8kX4aaURxokrchR
    jtfkyXmp9bdsC9x4hi1C9WY6Ii5MIdWcx0vTyFh4BwKJBsM379/1ICZn4zG3CSEl
    mdxBBtT1kWk5ukMwFSlV9Tu1CnwF8I31jFyJf0cfyAv6myfKqV7eRNsDRAJ6ZDg8
    O1CSJuWNqZGCiJjSMEE8SOrtOAUXNSIMVjHUCjP0FDoz6LEAwKjYpouWNk5tWQMr
    EQgXWU5TsdUjMSTZlTOhmkpSbrM97bfcl/r5zOrKiy1+6dMzuPpddeLcQ33SAY52
    pw6JAiAEEAECAAoFAlHaIOwDBQF4AAoJEGSVNWcbDzQ7Mc8P/A3FJDWLYrOEAULi
    v6JHaOeaepWCoPPv5Hpe2fA1cDa/KXUAgwNv9YtDqys7GgbyzheoqKVO1vkOGc3R
    eKwa9NYUzUR6YiE0Us6srq8jjd31CunioAfiirr2RVsWZY5MpYyrz/7I0USsFFhs
    CqCwCBP7YMGs7+SUsObjtSH1pqTCjafdv4KkbrWqH4coDGqTC6EFPNAVfNc6RfTl
    DqjwMSuZ0ZXddTok8ZiT3ejxqZ7gvNGxmoxTIl7KXbWI9uHb3WmzGGdyAd1Gw/1C
    Mff//o6S1hzA1XG/bpp3eCPt8nMgJMZFsgTlLnINXU6pdzYj6RnRmVrsTswg67Dq
    b1cfqqDdkzzeGTsYHJ7nL3w2t/CyI9Prmz0uh93fYCH5G+OBbZdlB+CkTiWfO3l0
    1g/qVumndhBr0ZisUOm/HhxPrTrHxXFL0bAZHwOF+VjlG0Tq7uTuZFgnegFi/0Os
    d7Tr7MhaP+jzQvh0msymU2b+gvAJ45HxkXPnkt1x9R6eYpGWZ5YmNuPe7O8RY6+E
    QLcz/5e+jIMQEgPVz6p5g1rtWLPbjZSzeUbF+1S0ZnpqvfR7o957XZnXgtn436uI
    7hFDkO2RwnVmVMu4/Ix+a2UOcaSsLyP6YiTfqwSFMgMtDLopVoM/jSfrp397ZPMX
    kXC130k/vvQijhQXvB+K+Sr5D1zDiQI4BBMBAgAiBQJRRl5zAhsDBgsJCAcDAgYV
    CAIJCgsEFgIDAQIeAQIXgAAKCRASX1xn3+lAhAj2D/9gN8vp6Yp3/xfSFtC4xrmo
    YZratoV3I7nOGiuXUc34ETLlINuGvVZ6D37KfcK4EqNjuJE99keyTlr1y2X4BORx
    29h+iFKuNlv81QGOs65qN7eeubLvx1UMiRefFdLkbnmw6BhNhrzitJViiRz/Fqpz
    rTz57S2dgOD5mp5Z3WBpYWFg40x7mNkY3BA07+oRmLuqpf9/RY9eARXSzjgl+3aX
    yNPW60Bwbm8hfCrmIbhcchRa4sNpyEsGFwnU9Pv8z6fsgLgdJoqJGAhZnoWOuL4e
    J94Ow1ctat+ikbbmQ07qTzH79d0xR+TwL1M/OpDJtjG+4XzZo5jXeuIVon6dspGl
    oIWyzb+Q/qHJ1yJMdbNDl/ygjLUmcvutG5pHO5xVVn/zwtCBlrAnfEZgk9C1cFw1
    WzZCgEIfespz1KSzYIi0c1YVIFhwU/7CNwrCb8w5x13D5eja28BKR+EtXenGk+IF
    eKeZorLgQf7IfLa9jAIDFh1dftcNrhRfLOdz1A59Ec1Fr5OXFia9Rrq1Br2tB4DF
    u6haLQoxgvz/V/XZ3fA3gd4Cx8Ov+cFfG5iyT5j+H9F4lDuiE2zeDhMYNmvpOTtp
    Zp1iI4WndIYB/RxocEcx0xjZDYxC0tS7HQ5RrKKcRQuUPIOdd6EINqLAmyri8p3k
    aEr+xBQ/rL0lKm58eIt4xrRNQWxleGFuZGVyIE5hdGhhbiBHYXlub3IgKERqYW5n
    byBTb2Z0d2FyZSBGb3VuZGF0aW9uKSA8YWxleEBkamFuZ29wcm9qZWN0LmNvbT6I
    SgQQEQIACgUCUdoP3gMFAXgACgkQzMhJ6qE9ZX14mACgwd4EW3okd76FU9M/fDaG
    ElQXtAMAn3f0SBrvzqzZ69EZAA29gwszsz+EiEoEEBECAAoFAlHaIOEDBQF4AAoJ
    EP3B8EEClJnra5QAoLLCgONLfhPH2a1VX3oZeDE7ma/fAJ962iM3t4AAliJotJTo
    jWySM3IiD4kBIAQQAQIACgUCUdof2wMFAXgACgkQYUv45fDMUjALhQgAiFGs1AD+
    Dx5Ryfdh3WRbq5Z6QFkKFEcgak8UudnwphOb15VurraNpxZzes/Y4PLsPaXjQie4
    jUDB1VN7pbF5rk6oj4osiWgAmjeb7BdrplwurpnlqHSNyjKgqvZB+gyrRwr6AGpp
    8GkMUJB+LOUVmpXGSL4XSVmUc0GZ0csFjx9ET215u1BkwQdHt1ENDt93uppbDVSN
    zGZrQik3v/gM+kehY0zBb4es7XoAkbwSFDRzZ+A+DsxYXlVQ2rJnIxJZcGqA4kLp
    m44B39R6S0JTVECl8XQOJ7UkljjJgf+QMzaWbHeESFZWl1qVN6CoWAAZi8a+w5oO
    HGoWTBGa3EpO/okCHAQQAQgABgUCUdog5AAKCRD1Ixxi54Q6jHITEACGl99cJv+g
    wFbggc4x++C5m8//gLPl87U3Sz02RG9r5OuNDa42FJUxvmn5Jh1h1QOkb0gCsiB/
    UuE5CltonLOhk1h8uVzYjiL6y+AUFOTxfpYr/4zEd/fTyKuFvZFyvf10ee+/+lSV
    rHNtX28Xn7nxSZSXkyRbMKNoDyZyOhsROgwm1EpYQNpXjA+dlk7NzfAkknnzH0Ro
    SPsXiW+z7hO6upuo7o+m8crkpdtQskbANMrvLrm2QYw46LHkDAz/IbwgWjiwaq58
    zRc3C+EAMMtOH3GvJU1vWlRByJtRo+/Dl2bl7aaywxdWIEjzIBQCC3LRRu8o9XuK
    zLxarJTZRiLhhoum1bdlYqdIBsGOI7o0KS2IR87dutESdw+mo1M4q4AUhU3MO6yS
    N8hDB5Ua27ZyPWVRMuU9W2KkqjoPW3HkeQJgBOA5r7Euabxb8JdpNvnCI7LQ2r24
    qrLPRePD6VOdOHr2iG8wFGE0iDlAU+MUq6HznN13N8bp0dBaziZyVc1IyfWGvcIk
    o/uqTJnSbh7GFLCSPD0RCwUNpfD+evYUZzOfK/lecVQOin3vk2aSOTTxygraNDfu
    XZ30H3ZDzvis1sYKbk6enhj8+A/8FaV5w03w4qGV2Hv5r7p8G85uKWJ1dWXMzthd
    xxZDugSmcfsV1aKUHr/1XECwC8mJthx4pIkCIAQQAQIACgUCUdog5wMFAXgACgkQ
    ZJU1ZxsPNDsfyhAA1/sYiEO1BO+CbD5KH3Z/ZloRK/iyq6y0J0JR2l0v9kWR/bFA
    v6c0GmvoWSJ19sOOPru/SaP9ev6NKYvJ7VCvHJFB6J+2EM21N3a/MAMxlyrHfq/I
    Yir8aAGnLzMnFfEjHNuCfmD2ZURdxhwJX21bKD+hhOhhnsHHMBK8a5k6hQfLee6X
    YIHOisccjeNGAlpqnjGND6rz/ff+s1Wbo89QH9oVm6vJR+u0Pf5NgIHuY/ZBASiY
    FQsbHY3YfDWDRo05pf7SsSIQKgRDAXh9H2qJCvJSbkvdEOiOhRHI6lYTEN+sIjxg
    j9JWRaDZHo1j+tzZmxI8O2/qEEZqZeQ+HqWwmYdmNHy+VKkHz5V7xPSDvilw1S0e
    gXCXSfrTtUMNF0bgse5kkjRBHWIoH9m2kpUOgG+pzoyh4ygJEtR3/DfXIWZJcXrQ
    CcTPuFFtkREZ425Fr0Lgmhr5QSdzco/ZiVO0fL3u3aC2CA4l6+gkNpUS900VYg0J
    cn4x8XkLYNABskO9jr/Y8HTQrlVa8GHQmKj6zH0BDLMVSPj8usoGEC8El8PXJ1mJ
    mwox4RFk8Q5FzcNQuh0D/VNSjSrEd7bmtqUMd2KGjnToUvtozfPbd0dffh9MJARc
    wA76ZYDDCtnI33VnRTSYJeUrED9GQEHqAhEwoRxinDDPnm840rm8srAywKqJAjgE
    EwECACIFAlFk6S0CGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEBJfXGff
    6UCEo9cP/RBku6yD3LA1TJ95rZ/OEWn8BTWMW0AJ588ccz0J+n8xa5JdSfzPo5UR
    qg9ORjj2Fg7WH/HS26zfBJ5K+zHrWpB+9rCWG5/j6OZSRktdyb4cTxh69BlEdUXy
    I5RHsZDMjxvW8C4sNlS5EzkdFICRIJqSpPqHxE70gxARzkIemnoiB2ADPEoUkKU/
    oS8RMu48nXPZZVlNnRmInkrI2ob8i5X7t23VDCScCy4mQVVAYfnXr/+wgZOGn7oZ
    TUter9tdkcjK6/ZDHX8aE8yZii+8XQLtNLBYofQPMohaLAlHT60MR8444ZIs08PF
    ymByd6nwkeiP3MIUTIhNiwsg4kdnXS/q4LtIARX6tuE6/CNIaY6w2v6HJsDCybO4
    GvB0SkzVMW6F5JcpmTEiSQUYFwbQkZdVJJiRb28vi+662pbdjv8sVgYENqRmPWIU
    2TVe9hI8s24otI/UlWO6IOPcLa0ddH7StlWvsd+bn8gUUzM6WiPmx/78Zp1wROPK
    XCxDbFQrWITSUscD48kPXVsgzq9F1MQdDFz6coEsPLSAP+omaNiCNnxP0mCuyYmA
    cn7kMnA8xBEWn5MvBVfW44m6NHLzDL5WO5WKic+8JIMNAQp7H1oFSl1WmBSIhJni
    r0lfVo57mFFpdUJEovhjLts3IPjfzgCeZyqseu9vp58aZR9rmruVuQINBFFGXnMB
    EADA0JKfPQOHYc97KpOgStH91Iv3LXVG8N+NdADEBikzPF6Ahtb4emLtkutC+hHr
    C9hntA4exRhhzD+OESDWI4T++2ClOBMgio2/MIs5wlLqXgA7DZq6K5/5D9gMLxZ9
    RufouVknxtF4OsMSi73WViXKXiJq42EJA2PqHM2zD/P8pr8L+nbRcG6w1VZt+Hz/
    Owl9bd+comCRQ1ySbP9xdIXxEmiX5pmdqZLNiW6JlQ/f6eJ0/xPwqKVTsq857bDq
    XfvqL1c2pp96MkB371IxlHKP2ZiVpmYR6S2JPiFkmgMk5SBV9w9tJTXzG4uOhFnU
    A0flJ1jxW9i4XPvcEaLqR4Cwe5G/eKvxqybJwa9NpfIBDQl24ZF+Rb5oy9iMITN2
    gr75L65/LRZaU1uCePxjthrQn/OjMA+OIyL3/0NGiLfW3H0xzYkqOIkkVSaS/hML
    wUeWwXfIKHtX1Wvmh5KSx3HYXuP2Vx7lYO4DCNE/81hKUVGf1ao+jXon/6gxxaJ/
    dtaP1TPu3erltkl7GbtDyoh+C66ODec4DRGqbD5r5nuCx6nX5prfTnvyTdu3KgOe
    N64bEjT8kpMmEW9lZfKZKp2Ba1iR9ERULYqIAeAQGWA1UVqqEhlyELShwlku2d7D
    oLtJ7e76N4qys1gYviknoYQI6WFcKYqY9nfAdYDfXVnk7wARAQABiQIfBBgBAgAJ
    BQJRRl5zAhsMAAoJEBJfXGff6UCE9U4P/R2uH1wqATqOlSlXT/2IemtHY9pgGSvF
    8fqb438U9YmsP4fnKTtyycCUIV7kl/xWLhrNP3/kd2ZjGxBybJCCXca3cnHIv3Co
    FD5fQT22bB5beWdpphJ/SrHPvFIUrw2+faD6ImddLkrsITN0SKpSuN4X6Wi5XCWc
    0BU/1yLVsYoA8vgGnpyrTmlKKOvpN3mfAmw2aDSJGsQLaGEwpGaTs+TCHLsySfqm
    Q2rl2yUnfY8q+fRzfMx2xQ3aP6ae9ZEkfl+rlynKDOSx6LTG61wk5nNCzQ0p1JCo
    lNGyioYttaI4GAFHReMNRaBB35j3aEmW0GLPQdb3bpLjIRuVRC29WaeYj5o6q/V4
    ISBAFyPISdVPYemh98stqB/pQSummPEjHkp6lg6G+HZ52NBlOCeKS3042TFh0kbc
    UOzBv2LPMtaT45JRZoechdm2hpWe1oeyx1HmMmz+1BBPEoS6FvHNojtJgCwEYRyK
    5PH10DbYP3/MxZaxeVKvzY+k15La88zTysd3sEUNzbDrvQsLIflqGrYBleN+MGIh
    is3yx9kKiHCT2LpHsBPAxNP17ddGCazyvgxIz7q3r6jNdovoAYeWj2XQEzNCBajI
    vTWYZq2vGlZsfNnqsBD6IpuFVCfXdP6R0mxMcMaM/Ni2N8pisPHXQ95TVdhB+/6l
    2pOVp6XTYdUW
    =HDSq
    -----END PGP PUBLIC KEY BLOCK-----

# Security Audit

We need to do a full audit of Twisted, module by module. This document
list the sort of things you want to look for when doing this, or when
writing your own code.

## Bad input

Any place we receive untrusted data, we need to be careful. In some
cases we are not careful enough. For example, in HTTP there are many
places where strings need to be converted to ints, so we use `int()` .
The problem is that this will accept negative or hexadecimal
(<span class=""title-ref"">0x123</span>) numbers as well, whereas the
protocol should only accept positive numbers.

## Resource Exhaustion and DoS

Make sure we never allow users to create arbitrarily large strings or
files. Some of the protocols still have issues like this. Place a limit
which allows reasonable use but will cut off huge requests, and allow
changing of this limit.

Another operation to look out for are exceptions. They can fill up logs
and take a lot of CPU time to render in web pages.
pandoc version 3.1.8",2023-10-26 10:09:33,"['Reporting mechanism', 'User guideline', 'Reporting mechanism', 'User guideline', 'User guideline', 'User guideline']",email_advisory,6.7,10,1,10,0,10,10,10,0,0,9,10,10,0,0,10,-1,10,10,0.0,4.0,1.0,8.0,7.0,0.0,0.0,0.0,79.0,216.0,449.0,9.0
ubernostrum/django-registration,https://github.com/ubernostrum/django-registration,1033,4066,2013-09-11,39,94,247,923,923,241,26,https://api.github.com/repos/ubernostrum/django-registration/contents/docs/security.rst,".. _security:


Security guide
==============

.. important:: **Reporting security issues**

   If you believe you have found a security issue in django-registration,
   please do *not* use the public GitHub issue tracker to report it. Instead,
   you can `contact the author privately <https://www.b-list.org/contact/>`_ to
   report the issue.

Anything related to users or user accounts has security implications and
represents a large source of potential security issues. This document is not an
exhaustive guide to those implications and issues, and makes no guarantees that
your particular use of Django or django-registration will be safe; instead, it
provides a set of recommendations, and explanations for why django-registration
does certain things or recommends particular approaches. Using this software
responsibly is, ultimately, up to you.

Before continuing with this document, you should ensure that you've read and
understood `Django's security documentation
<https://docs.djangoproject.com/en/stable/#security>`_.  Django provides a good
overview of common security issues in the general field of web development, and
an explanation of how it helps to protect against them or provides tools to
help you do so.

You should also ensure you're following Django's security recommendations. You
can check for many common issues by running::

    python manage.py check --tag security

on your codebase.


Recommendation: use the two-step activation workflow
----------------------------------------------------

Two user-signup workflows are included in django-registration, along with
support for writing your own. If you choose to use one of the included
workflows, :ref:`the two-step activation workflow <activation-workflow>` is the
recommended default.

The activation workflow provides a verification step -- the user must click a
link sent to the email address they used to register -- which can serve as an
impediment to automated account creation for malicious purposes.

The activation workflow generates an activation key which consists of the new
account's username and the timestamp of the signup, verified using `Django's
cryptographic signing tools
<https://docs.djangoproject.com/en/1.11/topics/signing/>`_ which in turn use
`the HMAC implementation from the Python standard library
<https://docs.python.org/3/library/hmac.html>`_. Thus, django-registration is
not inventing or building any new cryptography, but only using existing/vetted
implementations in an approved and standard manner.

Additionally, the activation workflow takes steps to ensure that its use of
HMAC does not act as an `oracle
<https://en.wikipedia.org/wiki/Oracle_attack>`_. Several parts of Django use
the signing tools, and third-party applications are free to use them as well,
so django-registration makes use of the ability to supply a salt value for the
purpose of ""namespacing"" HMAC usage. Thus an activation token generated by
django-registration's activation workflow should not be usable for attacks
against other HMAC-carrying values generated by the same installation of
Django.


Restrictions on user names: reserved names
------------------------------------------

By default, django-registration applies a list of reserved names, and does not
permit users to create accounts using those names (see
:class:`~django_registration.validators.ReservedNameValidator`). The default
list of reserved names includes many names that could cause confusion or even
inappropriate access. These reserved names fall into several categories:

* Usernames which could allow a user to impersonate or be seen as a site
  administrator. For example, ``""admin""`` or ``""administrator""``.

* Usernames corresponding to standard/protocol-specific email addresses
  (relevant for sites where creating an account also creates an email address
  with that username). For example, ``""webmaster""``.

* Usernames corresponding to standard/sensitive subdomain names (relevant for
  sites where creating an account also creates a subdomain corresponding to the
  username). For example, ``""ftp""`` or ``""autodiscover""``.

* Usernames which correspond to sensitive URLs (relevant for sites where user
  profiles appear at a URL containing the username). For example, ``""contact""``
  or ``""buy""``.

It is strongly recommended that you leave the reserved-name validation enabled.


Restrictions on user names and email addresses: Unicode
-------------------------------------------------------

By default, django-registration permits the use of a wide range of Unicode in
usernames and email addresses. However, to prevent some types of
Unicode-related attacks, django-registration will not permit certain specific
uses of Unicode characters.

For example, while the username ``""admin""`` cannot normally be registered (see
above), a user might still attempt to register a name that appears visually
identical, by substituting a Cyrillic ""a or other similar-appearing character
for the first character. This is a `homograph attack
<https://en.wikipedia.org/wiki/IDN_homograph_attack>`_.

To prevent homograph attacks, django-registration applies the following rule to
usernames, and to the local-part and the domain of email addresses:

* If the submitted value is mixed-script (contains characters from multiple
  different scripts, as in the above example which would mix Cyrillic and Latin
  characters), and

* If the submitted value contains characters appearing in the Unicode Visually
  Confusable Characters file,

* Then the value will be rejected.

See :func:`~django_registration.validators.validate_confusables` and
:func:`~django_registration.validators.validate_confusables_email`.

This should not interfere with legitimate use of Unicode, or of
non-English/non-Latin characters in usernames and email addresses. To avoid a
common false-positive situation, the local-part and domain of an email address
are checked independently of each other.

It is strongly recommended that you leave this validation enabled.


Additional steps to secure user accounts
----------------------------------------

The scope of django-registration is solely the implementation of user-signup
workflows, which limits the ways in which django-registration alone can protect
your users. Other features of Django itself, or of other third-party
applications, can provide significant increases in protection.

In particular, it is recommended that you:

* Prevent the use of common passwords. You can catch some common passwords by
  enabling Django's
  :class:`~django.contrib.auth.password_validation.CommonPasswordValidator`,
  which uses a list of twenty thousand common passwords. A more comprehensive
  option is the password validator and other utilities from
  `pwned-passwords-django
  <https://pwned-passwords-django.readthedocs.io/en/stable/>`_, which checks
  against a database containing (as of mid-2018) over half a billion passwords
  found in data breaches.

* Use two-factor authentication via authenticator applications or hardware
  security keys (*not* SMS). The package `django-two-factor
  <https://django-two-factor-auth.readthedocs.io/en/stable/>`_ provides
  integration for two-factor authentication into Django's auth framework.
",2017-07-23 12:06:37,[],external,5.8,10,0,5,0,0,6,10,0,0,10,10,-1,6,0,10,-1,10,10,13.0,99.0,12.0,21.0,0.0,0.0,0.0,0.0,849.0,618.0,1594.0,7.0
ubertidavide/fastbots,https://github.com/ubertidavide/fastbots,151,349,2023-11-16,2,37,43,17,17,4,2,https://api.github.com/repos/ubertidavide/fastbots/contents/SECURITY.md,"# Security Policy

## Supported Versions

Please upgrade to a supported version for better security.

| Version | Supported          |
| ------- | ------------------ |
| 0.2.6   | :white_check_mark: |
| < 0.2.6   | :x:                |

## Reporting a Vulnerability

To report a vulnerability please, report them first privately, that will permit all the contributors to check and fix them in the repo before it will be available to all.
",2023-11-21 19:55:29,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",not_mentioned,3.6,10,6,0,0,1,3,-1,0,0,10,0,-1,-1,0,4,-1,-1,10,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,31.0,19.0,17.0,0.0
urllib3/urllib3,https://github.com/urllib3/urllib3,4204,4790,2011-09-18,319,2224,3491,3788,3788,1146,101,https://api.github.com/repos/urllib3/urllib3/contents/.github/SECURITY.md,"# Security Disclosures

To report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure with maintainers.
",2021-07-27 02:12:07,['Reporting mechanism'],external,9.4,10,8,10,5,10,10,10,10,10,10,10,10,5,10,10,8,10,10,5.0,13.0,2.0,0.0,1.0,0.0,0.0,0.0,56.0,53.0,62.0,1.0
vantage6/vantage6,https://github.com/vantage6/vantage6,7077,897,2022-05-16,18,816,1549,29,29,11,4,https://api.github.com/repos/vantage6/vantage6/contents/SECURITY.md,"# Security Policy

## Supported Versions

| Version | Supported          |
| ------- | ------------------ |
| 4.x.x   | :white_check_mark: |
| < 4.x.x | :x:                |

## Reporting a Vulnerability

Please report (suspected) security vulnerabilities to vantage6@iknl.nl. You will receive a response from us within 72 hours.
If the issue is confirmed, we will release a patch as soon as possible. When the patched is released you will be informed.
",2022-09-20 07:20:31,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.6,9,8,10,0,8,10,10,10,0,10,10,10,0,7,10,-1,0,0,1.0,1.0,0.0,2.0,0.0,0.0,0.0,0.0,7.0,26.0,15.0,0.0
vinitkumar/json2xml,https://github.com/vinitkumar/json2xml,382,4133,2013-07-06,12,149,220,98,98,32,2,https://api.github.com/repos/vinitkumar/json2xml/contents/SECURITY.md,"## Security contact information

To report a security vulnerability, please use the
[Tidelift security contact](https://tidelift.com/security).
Tidelift will coordinate the fix and disclosure.
",2023-01-06 08:01:38,['Reporting mechanism'],external,6.6,10,6,10,0,0,10,10,10,0,9,10,10,0,10,10,-1,0,7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,4.0,1.0,0.0
voila-dashboards/voila,https://github.com/voila-dashboards/voila,1467,2261,2018-08-21,69,756,1496,5446,5446,504,73,https://api.github.com/repos/voila-dashboards/.github/contents/SECURITY.md,"Security Policy

## Reporting a Vulnerability

If you find a security vulnerability in Voilà, please report it to security@ipython.org.

See more information in our [docs](https://jupyter.org/security).
",2024-01-22 10:26:24,['Reporting mechanism'],email,5.7,10,6,10,0,8,10,10,10,0,9,10,-1,0,0,10,0,0,2,18.0,943.0,67.0,9.0,3.0,4.0,0.0,2.0,2777.0,9323.0,5064.0,8.0
vyperlang/vyper,https://github.com/vyperlang/vyper,5800,2909,2016-11-11,207,2331,4009,4865,4865,795,163,https://api.github.com/repos/vyperlang/vyper/contents/SECURITY.md,"# Security Policy

## Supported Versions

- it is recommended to follow the list of known [vulnerabilities](https://github.com/vyperlang/vyper/security/advisories) and stay up-to-date with the latest releases
  - as of May 2024, the [`0.4.0`](https://github.com/vyperlang/vyper/releases/tag/v0.4.0) release is the most comprehensively reviewed one and is recommended for use in production environments
- if a compiler vulnerability is found, a new compiler version with a patch will be released. The vulnerable version itself is not updated (see the examples below).
  - `example1`: suppose `0.4.0` is the latest version and a hypothetical vulnerability is found in `0.4.0`, then a patch will be released in `0.4.1`
  - `example2`: suppose `0.4.0` is the latest version and a hypothetical vulnerability is found both in `0.3.10` and `0.4.0`, then a patch will be released only in `0.4.1`

## Compiler Audits

- Vyper conducts recurring security audits with multiple firms. Additionally, a competitive audit with [CodeHawks](https://www.codehawks.com/contests/cll5rujmw0001js08menkj7hc) was conducted during the fall of 2023.
- all Vyper audits can be found in a separate repository: [vyperlang/audits](https://github.com/vyperlang/audits)


## Known Vyper Vulnerabilities

- The link below lists all publicly disclosed vulnerabilities and exposures.
Best Practices dictate that when we are first made aware of a potential vulnerability,
we take precautions by assessing its potential impact on deployed projects.
When we are confident that disclosure will not impact known projects that use Vyper,
we will add an entry to the list of security advisories for posterity and reference by others.

  - list of publicly known vulnerabilities: https://github.com/vyperlang/vyper/security/advisories


## Bug Bounty Program
- Vyper runs a bug bounty program via the Ethereum Foundation.
  - Bugs should be reported through the [Ethereum Foundation's bounty program](https://ethereum.org/bug-bounty).

### Scope
- Rules from the Ethereum Foundation's bug bounty program apply; for any questions please reach out [here](mailto:bounty@ethereum.org). Here we further clarify the scope of the Vyper bounty program.
- If a compiler bug affects production code, it is in scope (excluding known issues).
  - This includes bugs in older compiler versions still used in production.
- If a compiler bug does not currently affect production but is likely to in the future, it is in scope.
  - This mainly applies to the latest compiler release (e.g., a new release is available but contracts are not yet deployed with it).
  - Experimental features (e.g. `--experimental-codegen`) are out of scope, as they are not intended for production and are unlikely to affect production code.
  - Bugs in older compiler versions are generally out of scope, as they are no longer used for new contracts.
    - There might be exceptions, e.g., when an L2 doesn't support recent compiler releases. In such cases, it might be reasonable for an older version to be used. It is up to the discretion of the EF & Vyper team to decide if the bug is in scope.
- If a vulnerability affects multiple contracts, the whitehat is eligible for only one payout (though the severity of the bug may increase).
- Eligibility for project-specific bounties is independent of this bounty.
- [Security advisories](https://github.com/vyperlang/vyper/security/advisories) and [known issues](https://github.com/vyperlang/vyper/issues) are not eligible for the bounty program, as they are publicly disclosed and protocols should structure their contracts accordingly.
- Individuals or organizations contracted or engaged specifically for security development, auditing, or testing of this project are ineligible for the bounty program.

## Reporting a Vulnerability

- If you think you have found a security vulnerability caused by the compiler with a project that has used Vyper,
please report the vulnerability to the relevant project's security disclosure program before reporting to us. Additionally, please privately disclose the compiler vulnerability at https://github.com/vyperlang/vyper/security/advisories.

- **Please Do Not Log An Issue** mentioning the vulnerability.",2019-05-23 19:59:27,"['Generic policy', 'Scope of practice', 'User guideline', 'History of vulnerability', 'Projects practice', 'User guideline', 'Reporting mechanism']",advisory,6.5,10,8,10,0,10,10,10,0,0,9,10,10,0,10,10,0,0,10,0.0,34.0,15.0,34.0,13.0,43.0,0.0,0.0,992.0,990.0,4668.0,16.0
wagtail/wagtail,https://github.com/wagtail/wagtail,18071,3921,2014-02-03,341,7052,12126,18226,18226,3852,336,https://api.github.com/repos/wagtail/wagtail/contents/.github/SECURITY.md,"# Security

See https://docs.wagtail.org/en/latest/contributing/security.html.

This information can also be found in our security.txt: https://wagtail.org/.well-known/security.txt
",2023-04-21 17:01:09,['Generic policy'],external,7.0,10,0,10,0,6,10,10,10,0,10,10,-1,0,7,9,-1,10,6,1.0,30.0,3.0,5.0,30.0,0.0,0.0,0.0,452.0,346.0,388.0,3.0
wandb/wandb,https://github.com/wandb/wandb,7202,2776,2017-03-24,176,5361,8723,9076,9076,672,60,https://api.github.com/repos/wandb/wandb/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please report all vulnerabilities to security@wandb.com.
",2021-05-27 01:54:38,"['Generic policy', 'Reporting mechanism']",email,6.4,10,0,10,0,10,10,10,10,0,10,10,10,0,8,10,0,0,8,1.0,27.0,1.0,4.0,43.0,0.0,0.0,0.0,116.0,155.0,256.0,10.0
warner/python-ecdsa,https://github.com/warner/python-ecdsa,727,5308,2010-04-19,44,184,337,915,915,315,49,https://api.github.com/repos/warner/python-ecdsa/contents/SECURITY.md,"# Security Policy

## Supported Versions

Only the latest released version is supported.
Alpha and beta releases are always unsupported with security fixes.

The project uses semantic versioning, as such, minor version changes are API compatible.

| Version  | Supported          |
| -------- | ------------------ |
| 0.18.x   | :white_check_mark: |
| < 0.18   | :x:                |

## Support Scope

This library was not designed with security in mind. If you are processing data that needs
to be protected we suggest you use a quality wrapper around OpenSSL.
[`pyca/cryptography`](https://cryptography.io/) is one example of such a wrapper.
The primary use-case of this library is as a portable library for interoperability testing
and as a teaching tool.

**This library does not protect against side-channel attacks.**

Do not allow attackers to measure how long it takes you to generate a key pair or sign a message.
Do not allow attackers to run code on the same physical machine when key pair generation or
signing is taking place (this includes virtual machines).
Do not allow attackers to measure how much power your computer uses while generating the key pair
or signing a message. Do not allow attackers to measure RF interference coming from your computer
while generating a key pair or signing a message. Note: just loading the private key will cause
key pair generation. Other operations or attack vectors may also be vulnerable to attacks. 
For a sophisticated attacker observing just one operation with a private key will be sufficient
to completely reconstruct the private key.

Fixes for side-channel vulerabilities will not be developed.

Please also note that any Pure-python cryptographic library will be vulnerable to the same
side-channel attacks. This is because Python does not provide side-channel secure primitives
(with the exception of [`hmac.compare_digest()`](https://docs.python.org/3/library/hmac.html#hmac.compare_digest)),
making side-channel secure programming impossible.

This library depends upon a strong source of random numbers. Do not use it on a system
where `os.urandom()` does not provide cryptographically secure random numbers.

## Reporting a Vulnerability

If you find a security vulnerability in this library, you can report it using the ""Report a vulnerability"" button on the Security tab in github UI.
Alternatively, you can contact the project maintainer at hkario at redhat dot com.
",2023-12-29 16:37:09,"['Generic policy', 'Scope of practice', 'User guideline', 'Reporting mechanism']",advisory,6.2,10,0,10,0,4,10,10,0,10,9,10,-1,0,10,10,-1,0,10,0.0,3.0,0.0,3.0,0.0,0.0,0.0,0.0,45.0,66.0,60.0,3.0
web2py/web2py,https://github.com/web2py/web2py,8304,5835,2008-11-07,192,1434,2496,2117,2117,907,223,https://api.github.com/repos/web2py/web2py/contents/SECURITY.md,"# Security Policy

## Reporting a Vulnerability

Please report security issues to <email>
",2021-10-26 17:21:34,"['Generic policy', 'Reporting mechanism']",not_mentioned,4.3,10,0,10,0,1,10,-1,0,0,9,10,-1,0,0,3,-1,-1,10,19.0,140.0,3.0,8.0,6.0,0.0,0.0,0.0,347.0,885.0,671.0,8.0
weblateorg/weblate,https://github.com/weblateorg/weblate,68192,4628,2012-02-27,313,6611,12045,4582,4582,1016,96,https://api.github.com/repos/weblateorg/weblate/contents/SECURITY.md,"<!--
Copyright © Michal Čihař <michal@weblate.org>

SPDX-License-Identifier: CC0-1.0

This file is maintained in https://github.com/WeblateOrg/meta/
-->

# Weblate security

The Weblate team takes security and related transparency very seriously.
We welcome any peer review of our 100% open-source code to ensure nobody's Weblate
is ever compromised or hacked.

Information about practices for reporting and fixing security issues is described
in [our documentation][1] and on [our page at HackerOne][2]. This ensures all
vulnerabilities are solved securely, quickly, and transparently.

[1]: https://docs.weblate.org/en/latest/contributing/issues.html#security
[2]: https://hackerone.com/weblate
",2017-03-21 12:42:39,['Generic policy'],external,6.4,10,3,10,0,4,10,-1,10,0,10,10,-1,0,10,10,0,-1,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.0,5.0,19.0,0.0
wger-project/wger,https://github.com/wger-project/wger,7593,4301,2013-01-19,166,1028,1745,3162,3162,580,73,https://api.github.com/repos/wger-project/wger/contents/SECURITY.md,"# Security Policy

## Supported Versions

While we do have versions and releases, wger is developed and deployed like a rolling release. Currently we don't have the resources to support older versions.


## Reporting a Vulnerability

If you found a vulnerability, please mention @rolandgeider in an issue or write an email to roland [at] geider.net. We will try to fix it as fast as we can.
",2021-11-18 11:57:32,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email_issue,6.0,10,0,10,0,1,10,10,10,0,10,10,10,0,10,4,-1,0,8,5.0,13.0,2.0,0.0,1.0,0.0,0.0,0.0,56.0,53.0,62.0,1.0
wiremock/wiremock,https://github.com/wiremock/wiremock,3572,4769,2011-10-09,222,1389,2877,6352,6352,1431,139,https://api.github.com/repos/wiremock/.github/contents/SECURITY.md,"# Reporting security issues

We're extremely grateful to security researchers and users
who report vulnerabilities to WireMock and its ecosystem.
All reports are thoroughly investigated by maintainers of respective repositories.

## When to report issues?

- You think you discovered a potential security vulnerability in WireMock or its components
- You are unsure how a publicly announced vulnerability in an upstream project affects WireMock,
  and you suspect users might be impacted.
- You think you discovered a new vulnerability in another project that WireMock depends on.
  If so, make sure to report the issue to that project too by following their guidelines

Note that security hardening enhancements are not considered vulnerabilities,
and the common Request for Enhancement issue report should be used.

## How to report an issue?

Most of WireMock repositories use the _GitHub Security Advisory_ engine
under the _Security_ tab for issue reporting.
Use it to submit the vulnerability reports,
and only maintainers will be able to see and triage your reports.
They will contact you to negotiate the disclosure time and the next steps.

If you cannot use the GitHub reporting flow or if you didn't get a response within one week,
you can also email the private `conduct@wiremock.org` list with the security details and the details expected for the bug reports.
It is not the main intent of this channel, but the security issues will be routed too.

For upstream projects and WireMock components with their own vulnerability reporting and disclosure process,
please follow those processes.

## Public Disclosure Timing

A public disclosure date is negotiated by WireMock maintainers and the bug submitter.
We prefer to fully disclose the bug as soon as possible once a user mitigation is available in WireMock and in downstream projects and distributions.
Note that it might take some time to coordinate releases and announcements 
even after the fix is available.
The WireMock maintainers will coordinate that.

The timeframe for disclosure is from immediate (especially if it's already publicly known) to a few months.
We intend to release fixes no later than 3 months according to the current independent security research practices.
We urge reporters to not disclose issues in public channels and social media before that.

## Acknowledgements

This guide is inspired by the
[Jenkins Security Policy](https://jenkins.io/security),
[Kubernetes Security and Disclosure Information Guide](https://kubernetes.io/docs/reference/issues-security/security/),
and the [InnerSource pattern on security](https://github.com/InnerSourceCommons/InnerSourcePatterns/blob/main/patterns/1-initial/balancing-openness-and-security.md).

",2023-04-19 07:40:35,"['Projects practice', 'Reporting mechanism', 'Reporting mechanism', 'Projects practice', 'Additional information']",email,6.1,7,3,10,0,4,10,10,10,0,10,10,10,0,0,10,-1,0,9,0.0,31.0,12.0,0.0,0.0,0.0,0.0,2.0,107.0,116.0,132.0,3.0
yaml/pyyaml,https://github.com/yaml/pyyaml,325,4744,2011-11-03,37,284,830,2557,2557,518,54,https://api.github.com/repos/yaml/pyyaml/contents/.github/SECURITY.md,"# PyYAML Security Policy

## Reporting a Suspected Vulnerability

The PyYAML project encourages responsible disclosure of suspected security
vulnerabilities. However, we do not offer bug bounties, paid disclosure, or
paid fixes for discovered vulnerabilities. To report a suspected security
vulnerability, please e-mail details to <security@pyyaml.org> without creating
public issues, pull requests, or discussion. Non-security correspondence to
this address will be ignored.
",2022-07-12 00:31:22,"['Generic policy', 'Reporting mechanism']",email,5.5,10,1,5,0,2,10,10,0,10,10,10,-1,0,0,10,-1,0,10,0.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,15.0,42.0,22.0,1.0
zenml-io/zenml,https://github.com/zenml-io/zenml,6838,1440,2020-11-19,97,2837,3136,4032,4032,437,41,https://api.github.com/repos/zenml-io/zenml/contents/SECURITY.md,"# 🚨 Reporting a Vulnerability

If you think you have found a vulnerability, and even if you are not sure about it,
please report it right away by sending an
email to: [security@zenml.io](mailto:security@zenml.io?subject=Security%20Vulnerability%20Found). Please try to be as explicit as possible,
describing all the steps and example code to
reproduce the security issue.

We will review it thoroughly and get back to you.

Please refrain from publicly discussing a potential security vulnerability as
this could potentially put our users at
risk! It's better to discuss privately and give us a chance to find a solution
first, to limit the potential impact
as much as possible.
",2023-09-20 09:25:58,['Reporting mechanism'],email,5.4,10,3,10,0,9,10,0,10,0,10,10,10,0,8,10,-1,0,0,23.0,168.0,15.0,35.0,6.0,0.0,0.0,4.0,1210.0,837.0,748.0,7.0
zopefoundation/accesscontrol,https://github.com/zopefoundation/accesscontrol,438,4264,2013-02-25,34,111,152,12,12,16,68,https://api.github.com/repos/zopefoundation/.github/contents/SECURITY.md,"# Security Policy
The Zope developer community uses the same security policy as the Plone developer community. The most up to date information about Plone security is on https://plone.org/security

## Supported Versions
For supported versions, see the [Zope development roadmap](https://www.zope.dev/developer/roadmap.html).

## Reporting a Vulnerability
Please do **NOT** create a public bug report if you think this may be a security issue.
Instead, please contact the Plone and Zope Security Team via email: security@plone.org. See also https://plone.org/security/report

Only bug reports submitted directly to the security team email will be treated as responsible disclosure. Any offered for sale to third parties or submitted to public bug bounty programmes will be treated as irresponsible public disclosure. We will not confirm any submissions on third party platforms such as ""huntr"" or ""hackerone"" and do not give permission for those systems to accept reports on our behalf or to represent themselves as a conduit for vulnerability reports.
",2020-10-01 12:54:56,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.7,10,8,8,0,4,10,10,0,0,9,6,10,0,0,10,-1,0,10,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,10.0,8.0,3.0,0.0
zopefoundation/products.cmfcore,https://github.com/zopefoundation/products.cmfcore,795,3448,2015-05-22,43,96,144,6,6,20,68,https://api.github.com/repos/zopefoundation/.github/contents/SECURITY.md,"# Security Policy
The Zope developer community uses the same security policy as the Plone developer community. The most up to date information about Plone security is on https://plone.org/security

## Supported Versions
For supported versions, see the [Zope development roadmap](https://www.zope.dev/developer/roadmap.html).

## Reporting a Vulnerability
Please do **NOT** create a public bug report if you think this may be a security issue.
Instead, please contact the Plone and Zope Security Team via email: security@plone.org. See also https://plone.org/security/report

Only bug reports submitted directly to the security team email will be treated as responsible disclosure. Any offered for sale to third parties or submitted to public bug bounty programmes will be treated as irresponsible public disclosure. We will not confirm any submissions on third party platforms such as ""huntr"" or ""hackerone"" and do not give permission for those systems to accept reports on our behalf or to represent themselves as a conduit for vulnerability reports.
",2020-10-01 12:54:56,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,5.9,10,8,10,0,5,10,10,0,0,9,4,-1,0,9,10,-1,0,10,0.0,0.0,0.0,4.0,0.0,0.0,0.0,0.0,11.0,7.0,10.0,0.0
zopefoundation/products.pluggableauthservice,https://github.com/zopefoundation/products.pluggableauthservice,434,3550,2015-02-10,31,71,120,9,9,18,70,https://api.github.com/repos/zopefoundation/.github/contents/SECURITY.md,"# Security Policy
The Zope developer community uses the same security policy as the Plone developer community. The most up to date information about Plone security is on https://plone.org/security

## Supported Versions
For supported versions, see the [Zope development roadmap](https://www.zope.dev/developer/roadmap.html).

## Reporting a Vulnerability
Please do **NOT** create a public bug report if you think this may be a security issue.
Instead, please contact the Plone and Zope Security Team via email: security@plone.org. See also https://plone.org/security/report

Only bug reports submitted directly to the security team email will be treated as responsible disclosure. Any offered for sale to third parties or submitted to public bug bounty programmes will be treated as irresponsible public disclosure. We will not confirm any submissions on third party platforms such as ""huntr"" or ""hackerone"" and do not give permission for those systems to accept reports on our behalf or to represent themselves as a conduit for vulnerability reports.
",2020-10-01 12:54:56,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,4.9,10,8,3,0,5,10,10,0,0,9,0,-1,0,0,10,-1,0,10,0.0,2.0,0.0,2.0,2.0,0.0,0.0,0.0,71.0,209.0,94.0,1.0
zopefoundation/products.sqlalchemyda,https://github.com/zopefoundation/products.sqlalchemyda,248,3756,2014-07-18,9,14,19,2,2,10,67,https://api.github.com/repos/zopefoundation/.github/contents/SECURITY.md,"# Security Policy
The Zope developer community uses the same security policy as the Plone developer community. The most up to date information about Plone security is on https://plone.org/security

## Supported Versions
For supported versions, see the [Zope development roadmap](https://www.zope.dev/developer/roadmap.html).

## Reporting a Vulnerability
Please do **NOT** create a public bug report if you think this may be a security issue.
Instead, please contact the Plone and Zope Security Team via email: security@plone.org. See also https://plone.org/security/report

Only bug reports submitted directly to the security team email will be treated as responsible disclosure. Any offered for sale to third parties or submitted to public bug bounty programmes will be treated as irresponsible public disclosure. We will not confirm any submissions on third party platforms such as ""huntr"" or ""hackerone"" and do not give permission for those systems to accept reports on our behalf or to represent themselves as a conduit for vulnerability reports.
",2020-10-01 12:54:56,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,4.9,10,8,5,0,2,10,10,0,0,9,0,-1,0,3,10,-1,0,10,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,2.0,9.0,10.0,0.0
zopefoundation/restrictedpython,https://github.com/zopefoundation/restrictedpython,747,4261,2013-02-28,39,189,288,467,467,38,78,https://api.github.com/repos/zopefoundation/.github/contents/SECURITY.md,"# Security Policy
The Zope developer community uses the same security policy as the Plone developer community. The most up to date information about Plone security is on https://plone.org/security

## Supported Versions
For supported versions, see the [Zope development roadmap](https://www.zope.dev/developer/roadmap.html).

## Reporting a Vulnerability
Please do **NOT** create a public bug report if you think this may be a security issue.
Instead, please contact the Plone and Zope Security Team via email: security@plone.org. See also https://plone.org/security/report

Only bug reports submitted directly to the security team email will be treated as responsible disclosure. Any offered for sale to third parties or submitted to public bug bounty programmes will be treated as irresponsible public disclosure. We will not confirm any submissions on third party platforms such as ""huntr"" or ""hackerone"" and do not give permission for those systems to accept reports on our behalf or to represent themselves as a conduit for vulnerability reports.
",2020-10-01 12:54:56,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,6.2,10,8,10,0,2,10,10,0,0,9,10,-1,0,10,10,-1,0,10,16.0,153.0,90.0,0.0,0.0,0.0,0.0,0.0,1487.0,754.0,282.0,1.0
zopefoundation/zodb3,https://github.com/zopefoundation/zodb3,20,4248,2013-03-13,4,1,2,2,2,4,81,https://api.github.com/repos/zopefoundation/.github/contents/SECURITY.md,"# Security Policy
The Zope developer community uses the same security policy as the Plone developer community. The most up to date information about Plone security is on https://plone.org/security

## Supported Versions
For supported versions, see the [Zope development roadmap](https://www.zope.dev/developer/roadmap.html).

## Reporting a Vulnerability
Please do **NOT** create a public bug report if you think this may be a security issue.
Instead, please contact the Plone and Zope Security Team via email: security@plone.org. See also https://plone.org/security/report

Only bug reports submitted directly to the security team email will be treated as responsible disclosure. Any offered for sale to third parties or submitted to public bug bounty programmes will be treated as irresponsible public disclosure. We will not confirm any submissions on third party platforms such as ""huntr"" or ""hackerone"" and do not give permission for those systems to accept reports on our behalf or to represent themselves as a conduit for vulnerability reports.
",2020-10-01 12:54:56,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,3.0,10,0,-1,0,0,0,-1,0,0,0,0,-1,-1,0,10,-1,-1,10,0.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,36.0,42.0,29.0,1.0
zopefoundation/zope,https://github.com/zopefoundation/zope,16184,4263,2013-02-26,103,720,1194,356,356,101,91,https://api.github.com/repos/zopefoundation/.github/contents/SECURITY.md,"# Security Policy
The Zope developer community uses the same security policy as the Plone developer community. The most up to date information about Plone security is on https://plone.org/security

## Supported Versions
For supported versions, see the [Zope development roadmap](https://www.zope.dev/developer/roadmap.html).

## Reporting a Vulnerability
Please do **NOT** create a public bug report if you think this may be a security issue.
Instead, please contact the Plone and Zope Security Team via email: security@plone.org. See also https://plone.org/security/report

Only bug reports submitted directly to the security team email will be treated as responsible disclosure. Any offered for sale to third parties or submitted to public bug bounty programmes will be treated as irresponsible public disclosure. We will not confirm any submissions on third party platforms such as ""huntr"" or ""hackerone"" and do not give permission for those systems to accept reports on our behalf or to represent themselves as a conduit for vulnerability reports.
",2020-10-01 12:54:56,"['Generic policy', 'Scope of practice', 'Reporting mechanism']",email,7.3,10,8,10,0,6,10,10,10,0,9,10,-1,0,9,10,-1,0,10,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,8.0,18.0,0.0
